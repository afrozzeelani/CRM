[{"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\index.js":"1","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\serviceWorker.js":"2","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\App.js":"3","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Context\\AttendanceContext\\AttendanceContextProvider.jsx":"4","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\history.js":"5","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\DashboardAdmin.jsx":"6","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Login\\Login.jsx":"7","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ForgotPass\\ForgetPass.jsx":"8","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\DashboardHR.jsx":"9","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\DashboardEmployee.jsx":"10","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerDashboard.jsx":"11","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Routes.jsx":"12","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Context\\AttendanceContext\\AttendanceContext.js":"13","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\DashContainer.jsx":"14","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Router.jsx":"15","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Sidebar.jsx":"16","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Router.jsx":"17","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Sidebar.jsx":"18","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Navbar\\NavBar.jsx":"19","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Sidebar\\Sidebar.jsx":"20","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\router\\Routes.jsx":"21","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\sidebar\\Sidebar.jsx":"22","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\InnerDashContainer.jsx":"23","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminProjectBid.jsx":"24","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminPortal.jsx":"25","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\AdminDash.jsx":"26","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\Role.jsx":"27","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\Position.jsx":"28","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\Department.jsx":"29","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\PageNot\\NotFound404.jsx":"30","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\Employee.jsx":"31","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Salary\\Salary.jsx":"32","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminAsignTask.jsx":"33","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\EmployeeTable.jsx":"34","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminCancleTask.jsx":"35","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\RejectedTask.jsx":"36","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminCompleteTask.jsx":"37","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\LeaveCalendar\\LeaveCalendar.jsx":"38","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminTaskStatus.jsx":"39","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminAssignedTask.jsx":"40","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\attendance\\Attendance.jsx":"41","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\attendance\\ViewAttendance.jsx":"42","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\Country.jsx":"43","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Company\\Company.jsx":"44","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\State.jsx":"45","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\City.jsx":"46","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ApplyLeave\\LeaveApplication.jsx":"47","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHRAccept.jsx":"48","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHRReject.jsx":"49","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Notification\\NoticeManagement.jsx":"50","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Notification\\Notification.jsx":"51","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerCencelledTask.jsx":"52","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerCompletedTask.jsx":"53","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerNewTask.jsx":"54","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\HRDash.jsx":"55","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerRejectedTask.jsx":"56","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\ViewAttendance.jsx":"57","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Notification\\Notification.jsx":"58","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerActiveTask.jsx":"59","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Notification\\Notification.jsx":"60","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\Attendance.jsx":"61","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Notification\\Notification.jsx":"62","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\CountData\\UpcomingBirthdays.jsx":"63","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\EmpDash.jsx":"64","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\EmpChart.jsx\\DepartmentChart.jsx":"65","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\attendance\\AttendanceList.jsx":"66","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\attendance\\SelfAttendance.jsx":"67","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmployeeTaskManagement\\EmployeeRejectTask.jsx":"68","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmployeeTaskManagement\\EmployeeCompleteTask.jsx":"69","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\attendance\\Attendance.jsx":"70","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmployeeTaskManagement\\EmployeeActiveTask.jsx":"71","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmployeeTaskManagement\\EmployeeNewTask.jsx":"72","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpLeave\\LeaveApplicationEmp.jsx":"73","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminProjectBidFormEdit.jsx":"74","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminProjectBidTable.jsx":"75","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminProjectBidForm.jsx":"76","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminPortalFormEdit.jsx":"77","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpPresonal\\PersonalInfo.jsx":"78","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpEducation\\Education.jsx":"79","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpWorkExp\\WorkExperience.jsx":"80","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpFamily\\FamilyInfo.jsx":"81","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ApplyLeave\\LeaveApplicationFormEdit.jsx":"82","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ApplyLeave\\LeaveApplicationTable.jsx":"83","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CityFormEdit.jsx":"84","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ApplyLeave\\LeaveApplicationForm.jsx":"85","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CityForm.jsx":"86","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CityTable.jsx":"87","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Company\\CompanyForm.jsx":"88","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\StateTable.jsx":"89","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\StateForm.jsx":"90","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\StateFormEdit.jsx":"91","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Company\\CompanyFormEdit.jsx":"92","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Company\\CompanyTable.jsx":"93","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CountryFormEdit.jsx":"94","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpLeave\\LeaveApplicationEmpFormEdit.jsx":"95","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpLeave\\LeaveApplicationEmpForm.jsx":"96","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpLeave\\LeaveApplicationEmpTable.jsx":"97","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpFamily\\FamilyInfoFormEdit.jsx":"98","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpFamily\\FamilyInfoTable.jsx":"99","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpFamily\\FamilyInfoForm.jsx":"100","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Notification\\NoticeBoard.jsx":"101","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\SelfAttendance.jsx":"102","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Chart\\DailyAttendChart.jsx":"103","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpWorkExp\\WorkExperienceFormEdit.jsx":"104","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpWorkExp\\WorkExperienceForm.jsx":"105","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpWorkExp\\WorkExperienceTable.jsx":"106","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpEducation\\EducationFormEdit.jsx":"107","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpEducation\\EducationForm.jsx":"108","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpEducation\\EducationTable.jsx":"109","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpPresonal\\PersonalInfoFormEdit.jsx":"110","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpPresonal\\PersonalInfoTable.jsx":"111","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\CountData\\EmpProfile.jsx":"112","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Notification\\NoticeBoard.jsx":"113","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\CountData\\EmpTaskCount.jsx":"114","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\EmpChart.jsx\\EmpTaskChart.jsx":"115","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Chart\\DepartmentChart.jsx":"116","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\LeaveCalendar\\HolidayList.jsx":"117","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Chart\\TaskChart.jsx":"118","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\CountData\\LeavesCount.jsx":"119","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\CountData\\EmployeeCount.jsx":"120","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CountryForm.jsx":"121","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CountryTable.jsx":"122","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Salary\\SalaryFormEdit.jsx":"123","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Salary\\SalaryForm.jsx":"124","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Salary\\SalaryTable.jsx":"125","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\EmployeeInfo.jsx":"126","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\EmployeeFormEdit.jsx":"127","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\EmployeeForm.jsx":"128","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\DepartmentFormEdit.jsx":"129","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\DepartmentForm.jsx":"130","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\DepartmentTable.jsx":"131","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\PositionFormEdit.jsx":"132","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\PositionForm.jsx":"133","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\PositionTable.jsx":"134","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\RoleForm.jsx":"135","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\RoleFormEdit.jsx":"136","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\RoleTable.jsx":"137","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\UpcomingBirthdays.jsx":"138","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\attendance\\SelfAttendance.jsx":"139","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\LeaveCalendar\\Container.jsx":"140","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminPortalForm.jsx":"141","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminPortalTable.jsx":"142","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\attendance\\Attendance.jsx":"143","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerCompletedTask.jsx":"144","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerActiveTask.jsx":"145","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerRejectedTask.jsx":"146","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerCencelledTask.jsx":"147","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerNewTask.jsx":"148","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\LeaveApplicationHR.jsx":"149","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\ManagerDash.jsx":"150","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Notification\\NoticeBoard.jsx":"151","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\Chart\\DailyAttendChart.jsx":"152","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\Chart\\TaskChart.jsx":"153","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\CountData\\EmployeeCount.jsx":"154","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\CountData\\LeavesCount.jsx":"155","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\LeaveApplicationHRTable.jsx":"156","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\LeaveApplicationHRFormEdit.jsx":"157","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\attendance\\SelfAttendance.jsx":"158","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Notification\\NoticeBoard.jsx":"159","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\attendance\\TodaysAttendance.jsx":"160","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\Chart\\TaskChart.jsx":"161","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\Chart\\DepartmentChart.jsx":"162","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\CountData\\LeavesCount.jsx":"163","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\CountData\\EmployeeCount.jsx":"164","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\CountData\\LoginstatusCount.jsx":"165","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHR.jsx":"166","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHRTable.jsx":"167","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHRFormEdit.jsx":"168","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\DailyAttendance\\TodaysAttendance.jsx":"169","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\ManualAttendance.jsx":"170","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\config\\config.js":"171","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\CountData\\AttendanceCount.jsx":"172","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Context\\AttendanceContext\\smallSidebarcontext.jsx":"173","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\SidebarSmallScreen.jsx":"174","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\AttendanceRegister.jsx":"175"},{"size":2698,"mtime":1713339547003,"results":"176","hashOfConfig":"177"},{"size":4951,"mtime":1710316849679,"results":"178","hashOfConfig":"177"},{"size":24866,"mtime":1713426483910,"results":"179","hashOfConfig":"177"},{"size":1043,"mtime":1713421178399,"results":"180","hashOfConfig":"177"},{"size":87,"mtime":1710316849601,"results":"181","hashOfConfig":"177"},{"size":1877,"mtime":1710316850133,"results":"182","hashOfConfig":"177"},{"size":5870,"mtime":1713421136965,"results":"183","hashOfConfig":"177"},{"size":6979,"mtime":1711099013435,"results":"184","hashOfConfig":"177"},{"size":1397,"mtime":1713423574322,"results":"185","hashOfConfig":"177"},{"size":13493,"mtime":1713340727998,"results":"186","hashOfConfig":"177"},{"size":1248,"mtime":1710930205451,"results":"187","hashOfConfig":"177"},{"size":4839,"mtime":1710910123678,"results":"188","hashOfConfig":"177"},{"size":97,"mtime":1710316856130,"results":"189","hashOfConfig":"177"},{"size":341,"mtime":1710316849726,"results":"190","hashOfConfig":"177"},{"size":5048,"mtime":1713430001489,"results":"191","hashOfConfig":"177"},{"size":7253,"mtime":1713430030138,"results":"192","hashOfConfig":"177"},{"size":4968,"mtime":1710929509635,"results":"193","hashOfConfig":"177"},{"size":6990,"mtime":1712037297796,"results":"194","hashOfConfig":"177"},{"size":12515,"mtime":1713421051916,"results":"195","hashOfConfig":"177"},{"size":7398,"mtime":1711100315112,"results":"196","hashOfConfig":"177"},{"size":3859,"mtime":1713340695511,"results":"197","hashOfConfig":"177"},{"size":5822,"mtime":1713340709355,"results":"198","hashOfConfig":"177"},{"size":343,"mtime":1710316849745,"results":"199","hashOfConfig":"177"},{"size":4809,"mtime":1710316849970,"results":"200","hashOfConfig":"177"},{"size":4375,"mtime":1710316849814,"results":"201","hashOfConfig":"177"},{"size":1462,"mtime":1710930297161,"results":"202","hashOfConfig":"177"},{"size":3842,"mtime":1711098839199,"results":"203","hashOfConfig":"177"},{"size":3961,"mtime":1711098718830,"results":"204","hashOfConfig":"177"},{"size":6820,"mtime":1711138414609,"results":"205","hashOfConfig":"177"},{"size":365,"mtime":1710316859357,"results":"206","hashOfConfig":"177"},{"size":10439,"mtime":1711712474494,"results":"207","hashOfConfig":"177"},{"size":3784,"mtime":1711099611897,"results":"208","hashOfConfig":"177"},{"size":10081,"mtime":1713425111193,"results":"209","hashOfConfig":"177"},{"size":18946,"mtime":1711137910370,"results":"210","hashOfConfig":"177"},{"size":7664,"mtime":1711100442841,"results":"211","hashOfConfig":"177"},{"size":6354,"mtime":1711100706036,"results":"212","hashOfConfig":"177"},{"size":6332,"mtime":1711100648993,"results":"213","hashOfConfig":"177"},{"size":6569,"mtime":1711099073434,"results":"214","hashOfConfig":"177"},{"size":16916,"mtime":1711100688888,"results":"215","hashOfConfig":"177"},{"size":16469,"mtime":1713425158752,"results":"216","hashOfConfig":"177"},{"size":8434,"mtime":1711099896107,"results":"217","hashOfConfig":"177"},{"size":16765,"mtime":1711099949760,"results":"218","hashOfConfig":"177"},{"size":3959,"mtime":1711139506452,"results":"219","hashOfConfig":"177"},{"size":3691,"mtime":1711098277828,"results":"220","hashOfConfig":"177"},{"size":3878,"mtime":1711099417124,"results":"221","hashOfConfig":"177"},{"size":2620,"mtime":1711099106517,"results":"222","hashOfConfig":"177"},{"size":8232,"mtime":1711097495525,"results":"223","hashOfConfig":"177"},{"size":15048,"mtime":1713423174096,"results":"224","hashOfConfig":"177"},{"size":15047,"mtime":1713423211267,"results":"225","hashOfConfig":"177"},{"size":2571,"mtime":1711100180763,"results":"226","hashOfConfig":"177"},{"size":6531,"mtime":1711100199379,"results":"227","hashOfConfig":"177"},{"size":7667,"mtime":1713423392377,"results":"228","hashOfConfig":"177"},{"size":6448,"mtime":1713423417090,"results":"229","hashOfConfig":"177"},{"size":12861,"mtime":1713424411431,"results":"230","hashOfConfig":"177"},{"size":3394,"mtime":1713333364939,"results":"231","hashOfConfig":"177"},{"size":6146,"mtime":1713424428059,"results":"232","hashOfConfig":"177"},{"size":48001,"mtime":1713430223424,"results":"233","hashOfConfig":"177"},{"size":6531,"mtime":1713423527977,"results":"234","hashOfConfig":"177"},{"size":25305,"mtime":1713424364767,"results":"235","hashOfConfig":"177"},{"size":6531,"mtime":1713422706120,"results":"236","hashOfConfig":"177"},{"size":8161,"mtime":1713422916983,"results":"237","hashOfConfig":"177"},{"size":6579,"mtime":1713424905192,"results":"238","hashOfConfig":"177"},{"size":7136,"mtime":1711101403143,"results":"239","hashOfConfig":"177"},{"size":1664,"mtime":1710492570786,"results":"240","hashOfConfig":"177"},{"size":2843,"mtime":1711101495723,"results":"241","hashOfConfig":"177"},{"size":15264,"mtime":1711100828161,"results":"242","hashOfConfig":"177"},{"size":15274,"mtime":1711100858290,"results":"243","hashOfConfig":"177"},{"size":6476,"mtime":1713424243199,"results":"244","hashOfConfig":"177"},{"size":6765,"mtime":1713424047735,"results":"245","hashOfConfig":"177"},{"size":7151,"mtime":1711100805871,"results":"246","hashOfConfig":"177"},{"size":17578,"mtime":1713424293762,"results":"247","hashOfConfig":"177"},{"size":19301,"mtime":1713424220940,"results":"248","hashOfConfig":"177"},{"size":8701,"mtime":1713423715679,"results":"249","hashOfConfig":"177"},{"size":8992,"mtime":1710316850056,"results":"250","hashOfConfig":"177"},{"size":7844,"mtime":1710316850094,"results":"251","hashOfConfig":"177"},{"size":5707,"mtime":1710316850010,"results":"252","hashOfConfig":"177"},{"size":2361,"mtime":1710316849896,"results":"253","hashOfConfig":"177"},{"size":2554,"mtime":1713424658320,"results":"254","hashOfConfig":"177"},{"size":2706,"mtime":1711102253005,"results":"255","hashOfConfig":"177"},{"size":3194,"mtime":1713424829268,"results":"256","hashOfConfig":"177"},{"size":3115,"mtime":1711102393102,"results":"257","hashOfConfig":"177"},{"size":4412,"mtime":1710316857083,"results":"258","hashOfConfig":"177"},{"size":5410,"mtime":1711097553459,"results":"259","hashOfConfig":"177"},{"size":4729,"mtime":1711099167494,"results":"260","hashOfConfig":"177"},{"size":5496,"mtime":1712133804124,"results":"261","hashOfConfig":"177"},{"size":3963,"mtime":1711099140484,"results":"262","hashOfConfig":"177"},{"size":5045,"mtime":1711568171267,"results":"263","hashOfConfig":"177"},{"size":8806,"mtime":1711098325980,"results":"264","hashOfConfig":"177"},{"size":9314,"mtime":1713420154044,"results":"265","hashOfConfig":"177"},{"size":2529,"mtime":1711099437662,"results":"266","hashOfConfig":"177"},{"size":3060,"mtime":1711099457323,"results":"267","hashOfConfig":"177"},{"size":12235,"mtime":1711098378010,"results":"268","hashOfConfig":"177"},{"size":9520,"mtime":1711140023490,"results":"269","hashOfConfig":"177"},{"size":1939,"mtime":1710907157775,"results":"270","hashOfConfig":"177"},{"size":4324,"mtime":1713423770459,"results":"271","hashOfConfig":"177"},{"size":9311,"mtime":1713423733511,"results":"272","hashOfConfig":"177"},{"size":4965,"mtime":1713423788575,"results":"273","hashOfConfig":"177"},{"size":3409,"mtime":1711102409575,"results":"274","hashOfConfig":"177"},{"size":5691,"mtime":1711689459774,"results":"275","hashOfConfig":"177"},{"size":2316,"mtime":1711102402518,"results":"276","hashOfConfig":"177"},{"size":3869,"mtime":1713423506111,"results":"277","hashOfConfig":"177"},{"size":16800,"mtime":1713422985858,"results":"278","hashOfConfig":"177"},{"size":8952,"mtime":1711565459566,"results":"279","hashOfConfig":"177"},{"size":3801,"mtime":1710316852548,"results":"280","hashOfConfig":"177"},{"size":4541,"mtime":1710316852517,"results":"281","hashOfConfig":"177"},{"size":6006,"mtime":1713424865953,"results":"282","hashOfConfig":"177"},{"size":7758,"mtime":1710316851456,"results":"283","hashOfConfig":"177"},{"size":4836,"mtime":1710316851425,"results":"284","hashOfConfig":"177"},{"size":7062,"mtime":1711687739247,"results":"285","hashOfConfig":"177"},{"size":15041,"mtime":1710316852317,"results":"286","hashOfConfig":"177"},{"size":34579,"mtime":1713424680481,"results":"287","hashOfConfig":"177"},{"size":7032,"mtime":1711101178152,"results":"288","hashOfConfig":"177"},{"size":5974,"mtime":1713424889555,"results":"289","hashOfConfig":"177"},{"size":14778,"mtime":1711101371523,"results":"290","hashOfConfig":"177"},{"size":6242,"mtime":1711101550470,"results":"291","hashOfConfig":"177"},{"size":4210,"mtime":1711567779103,"results":"292","hashOfConfig":"177"},{"size":5425,"mtime":1713420703069,"results":"293","hashOfConfig":"177"},{"size":4557,"mtime":1711098229218,"results":"294","hashOfConfig":"177"},{"size":10367,"mtime":1713423087225,"results":"295","hashOfConfig":"177"},{"size":13194,"mtime":1713423047822,"results":"296","hashOfConfig":"177"},{"size":1299,"mtime":1710907157743,"results":"297","hashOfConfig":"177"},{"size":6629,"mtime":1713355666073,"results":"298","hashOfConfig":"177"},{"size":16455,"mtime":1711099698682,"results":"299","hashOfConfig":"177"},{"size":5217,"mtime":1711099634636,"results":"300","hashOfConfig":"177"},{"size":17410,"mtime":1713421031863,"results":"301","hashOfConfig":"177"},{"size":1934,"mtime":1710316856733,"results":"302","hashOfConfig":"177"},{"size":16972,"mtime":1711712361373,"results":"303","hashOfConfig":"177"},{"size":23652,"mtime":1713420955939,"results":"304","hashOfConfig":"177"},{"size":3458,"mtime":1711098660946,"results":"305","hashOfConfig":"177"},{"size":2793,"mtime":1711098548135,"results":"306","hashOfConfig":"177"},{"size":10980,"mtime":1711138485297,"results":"307","hashOfConfig":"177"},{"size":3599,"mtime":1711098757345,"results":"308","hashOfConfig":"177"},{"size":2702,"mtime":1711098738197,"results":"309","hashOfConfig":"177"},{"size":5905,"mtime":1711098812917,"results":"310","hashOfConfig":"177"},{"size":2519,"mtime":1711098917288,"results":"311","hashOfConfig":"177"},{"size":3146,"mtime":1711098943503,"results":"312","hashOfConfig":"177"},{"size":6851,"mtime":1711098972070,"results":"313","hashOfConfig":"177"},{"size":7084,"mtime":1713421018342,"results":"314","hashOfConfig":"177"},{"size":16792,"mtime":1711099924429,"results":"315","hashOfConfig":"177"},{"size":313,"mtime":1710908929551,"results":"316","hashOfConfig":"177"},{"size":2323,"mtime":1710316849853,"results":"317","hashOfConfig":"177"},{"size":4574,"mtime":1710316849933,"results":"318","hashOfConfig":"177"},{"size":15435,"mtime":1710393029447,"results":"319","hashOfConfig":"177"},{"size":6516,"mtime":1713422613767,"results":"320","hashOfConfig":"177"},{"size":26786,"mtime":1713424476694,"results":"321","hashOfConfig":"177"},{"size":6190,"mtime":1713422684124,"results":"322","hashOfConfig":"177"},{"size":7667,"mtime":1713422606123,"results":"323","hashOfConfig":"177"},{"size":13201,"mtime":1713424551729,"results":"324","hashOfConfig":"177"},{"size":4194,"mtime":1713422791373,"results":"325","hashOfConfig":"177"},{"size":1485,"mtime":1710930391591,"results":"326","hashOfConfig":"177"},{"size":6556,"mtime":1713336621459,"results":"327","hashOfConfig":"177"},{"size":8253,"mtime":1710402434831,"results":"328","hashOfConfig":"329"},{"size":6440,"mtime":1711100040811,"results":"330","hashOfConfig":"177"},{"size":12811,"mtime":1711100102505,"results":"331","hashOfConfig":"177"},{"size":13219,"mtime":1711100127751,"results":"332","hashOfConfig":"177"},{"size":11810,"mtime":1713422836679,"results":"333","hashOfConfig":"177"},{"size":11740,"mtime":1710316855203,"results":"334","hashOfConfig":"177"},{"size":14530,"mtime":1713421266999,"results":"335","hashOfConfig":"177"},{"size":3144,"mtime":1713422672299,"results":"336","hashOfConfig":"177"},{"size":8952,"mtime":1710316855513,"results":"337","hashOfConfig":"329"},{"size":4943,"mtime":1713421432765,"results":"338","hashOfConfig":"177"},{"size":2577,"mtime":1710316855680,"results":"339","hashOfConfig":"329"},{"size":11101,"mtime":1713421605596,"results":"340","hashOfConfig":"177"},{"size":12673,"mtime":1713421550998,"results":"341","hashOfConfig":"177"},{"size":132,"mtime":1710498965619,"results":"342","hashOfConfig":"177"},{"size":3264,"mtime":1713423133536,"results":"343","hashOfConfig":"177"},{"size":14050,"mtime":1713423261322,"results":"344","hashOfConfig":"177"},{"size":11740,"mtime":1706679042439,"results":"345","hashOfConfig":"177"},{"size":33323,"mtime":1713420869017,"results":"346","hashOfConfig":"177"},{"size":6441,"mtime":1713422944273,"results":"347","hashOfConfig":"177"},{"size":195,"mtime":1713434021111,"results":"348","hashOfConfig":"177"},{"size":1581,"mtime":1710316854523,"results":"349","hashOfConfig":"177"},{"size":611,"mtime":1713329688386,"results":"350","hashOfConfig":"177"},{"size":6811,"mtime":1713339108068,"results":"351","hashOfConfig":"177"},{"size":9812,"mtime":1713433948822,"results":"352","hashOfConfig":"177"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1omzf5m",{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"357"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"357"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"357"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"357"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"357"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"357"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":2,"source":"428","usedDeprecatedRules":"357"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"357"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"357"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"357"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"357"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"357"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"357"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"357"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"357"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"357"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"357"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"357"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"357"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"357"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"357"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"357"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"357"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"357"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"357"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"357"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"357"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"357"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"357"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"357"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"357"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"357"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"357"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"357"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"357"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"357"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"357"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"357"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"357"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"357"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"357"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"357"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"357"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"357"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"357"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"357"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"357"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"357"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"357"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"357"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"357"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"357"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"357"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"357"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"357"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"357"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"357"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"357"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"357"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"357"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"357"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"357"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"721"},"laubl6",{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724","usedDeprecatedRules":"357"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"357"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"357"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"357"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"721"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"721"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"753"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"357"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\index.js",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\serviceWorker.js",[],["774","775"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\App.js",["776","777","778","779","780","781","782","783"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Context\\AttendanceContext\\AttendanceContextProvider.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\history.js",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\DashboardAdmin.jsx",["784"],"\nimport React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar/Sidebar.jsx\";\nimport AdminRoutes from \"./Routes.jsx\";\nimport NavBar from \"../../Pages/Navbar/NavBar.jsx\";\nimport \"./DashboardAdmin.css\";\n// import InnerDashContainer from \"../InnerDashContainer.jsx\";\nimport DashContainer from \"../DashContainer.jsx\";\n\nconst DashboardAdmin = (props) => {\n  const [checked, setChecked] = useState(true);\n\n  const handleChange = () => {\n    console.log(\"switch\");\n\n    if (checked) {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-none\");\n    } else {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-block\");\n    }\n\n    setChecked(!checked);\n  };\n\n  return (\n    <DashContainer>\n      <Router>\n        <div id=\"outer-main-div\">\n          <div id=\"outer-nav\">\n            <NavBar\n              loginInfo={props.data}\n              checked={checked}\n              handleChange={handleChange}\n              onLogout={props.onLogout}\n            />\n          </div>\n          <div\n            className=\"d-flex\"\n            style={{\n              maxHeight: \"100vh\"\n            }}\n            id=\"main-non-nav\"\n          >\n            <Sidebar />\n            <div\n              style={{ overflow: \"hidden\" }}\n              className=\"HrDashBG w-100\"\n              id=\"main-area\"\n            >\n              <AdminRoutes />\n            </div>\n          </div>\n          {/* <div\n            className=\"d-flex\"\n            style={{\n              maxHeight: \"100vh\"\n            }}\n            id=\"main-non-nav\"\n          >\n            {\" \"}\n            \n            <div className=\"AdminDashBG w-100\" id=\"main-area\">\n              \n            </div>\n          </div> */}\n        </div>\n      </Router>\n    </DashContainer>\n  );\n};\n\nexport default DashboardAdmin;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Login\\Login.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ForgotPass\\ForgetPass.jsx",["785","786","787"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./forgot.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../../img/logo.png\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst ForgetPass = () => {\r\n  const history = useHistory();\r\n  const [stage, setStage] = useState(1);\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    otp: \"\",\r\n    pass: \"\",\r\n    confirm_pass: \"\"\r\n  });\r\n  const [formError, setFormError] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFormError({\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    });\r\n  }, [stage]);\r\n\r\n  const [passMatch, setPassMatch] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [countDown, setCountDown] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // timer\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (countDown > 0) {\r\n        if (countDown === 1 && stage === 2) {\r\n          // alert(\"time out\");\r\n          // setStage(1);\r\n          clearInterval(timer);\r\n          setMessage(\"\");\r\n          return;\r\n        }\r\n        setCountDown(countDown - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [countDown]);\r\n\r\n  // verfy the email id\r\n  const verfyEmail = async () => {\r\n    await axios\r\n      .post(`${BASE_URL}/api/verfy_email`, data)\r\n      .then((res) => {\r\n        localStorage.setItem(\"id\", res.data.user._id);\r\n        SendOtp();\r\n        setStage(2);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data.message === \"Enter valid email id\") {\r\n          alert(err.response.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleEmailSubmit = async (e) => {\r\n    e.preventDefault();\r\n    verfyEmail();\r\n  };\r\n\r\n  // send the otp\r\n  const SendOtp = async () => {\r\n    const id = localStorage.getItem(\"id\");\r\n    await axios\r\n      .post(`${BASE_URL}/api/send_otp/${id}`, data)\r\n      .then((res) => {\r\n        let day = new Date();\r\n        let secounds = day.getSeconds();\r\n        setCountDown(res.data.time - secounds + 1);\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  // verfy the otp\r\n  const handleOtpSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/api/verfy_otp`, data);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      if (error.response.data.message === \"your requist is faild\") {\r\n        alert(\"invalid otp\");\r\n        // setStage(1);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setStage(3);\r\n  };\r\n\r\n  // change  the password\r\n  const validateFormInput = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (data.pass === \"\") {\r\n      setFormError({\r\n        password: \"Password should not be empty\"\r\n      });\r\n    } else {\r\n      const id = localStorage.getItem(\"id\");\r\n      await axios\r\n        .post(`${BASE_URL}/api/forgot_pass/${id}`, data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          localStorage.removeItem(\"id\");\r\n          history.push(\"/login#/login\");\r\n          alert(\"Your Password is Updated\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    setStage(3);\r\n  };\r\n\r\n  let success = () => {\r\n    if (\r\n      passMatch.password &&\r\n      passMatch.confirmPassword === passMatch.password\r\n    ) {\r\n      alert(\"successfully changed\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-container\">\r\n        <div className=\"main\">\r\n          <div className=\"stage-indicator\">\r\n            <div className=\"logo\">\r\n              <img src={logo} alt=\"\" />\r\n            </div>\r\n            <div className=\"progress-container\">\r\n              <div className={`progress-bar step-${stage}`} />\r\n            </div>\r\n            <span className=\"stage-text\">Stage {stage} of 3</span>\r\n          </div>\r\n\r\n          {stage === 1 && (\r\n            <form onSubmit={handleEmailSubmit} className=\"login-form\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({ ...prev, email: e.target.value }))\r\n                }\r\n                className=\"login-input\"\r\n                required\r\n              />\r\n              <button type=\"submit\" className=\"login-button\">\r\n                Next\r\n              </button>\r\n            </form>\r\n          )}\r\n\r\n          {stage === 2 && countDown > 0 ? (\r\n            <>\r\n              <form onSubmit={handleOtpSubmit} className=\"login-form mb-3\">\r\n                <p className=\"count-Down\">Time Left: {countDown} sec</p>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter OTP\"\r\n                  value={data.otp}\r\n                  onChange={(e) =>\r\n                    setData((prev) => ({ ...prev, otp: e.target.value }))\r\n                  }\r\n                  className=\"login-input\"\r\n                  required\r\n                />\r\n                <button type=\"submit\" className=\"login-button\">\r\n                  Next\r\n                </button>\r\n              </form>\r\n              <div className=\"box\">\r\n                <button\r\n                  className={`bg-none mt-2 fw-semibold mx-auto text-primary`}\r\n                  onClick={SendOtp}\r\n                  style={{\r\n                    background: \"none\",\r\n                    border: \"none\",\r\n                    fontSize: \"14px\"\r\n                  }}\r\n                >\r\n                  Resend Otp\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>{message}</p>\r\n          )}\r\n\r\n          {stage === 3 && (\r\n            <form onSubmit={validateFormInput} className=\"login-form mb-3\">\r\n              <p className=\"label\">Password</p>\r\n              <input\r\n                value={data.pass}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({ ...prev, pass: e.target.value }))\r\n                }\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"login-input\"\r\n                placeholder=\"Password\"\r\n                required\r\n              />\r\n              <p className=\"error-message\">{formError.password}</p>\r\n\r\n              <input\r\n                type=\"submit\"\r\n                className=\"login-button\"\r\n                value=\"Submit\"\r\n                onClick={success}\r\n              />\r\n            </form>\r\n          )}\r\n          <div className=\"box text-center\">\r\n            <Link\r\n              to=\"login#/login\"\r\n              className=\"fw-semibold\"\r\n              style={{ fontSize: \"14px\" }}\r\n            >\r\n              Do You Login Hear\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgetPass;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\DashboardHR.jsx",["788","789"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\DashboardEmployee.jsx",["790","791","792","793","794","795","796"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerDashboard.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Routes.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Context\\AttendanceContext\\AttendanceContext.js",["797"],"import React, { createContext } from 'react'\r\n\r\nexport const AttendanceContext = createContext();","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\DashContainer.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Router.jsx",["798","799"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Sidebar.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Router.jsx",["800","801"],"// MainContent.jsx\nimport React from \"react\";\nimport { BrowserRouter, Route, Routes, Switch } from \"react-router-dom\";\nimport Role from \"../../Pages/Department/Role.jsx\";\nimport Position from \"../../Pages/Department/Position.jsx\";\nimport Department from \"../../Pages/Department/Department.jsx\";\nimport Country from \"../../Pages/Location/Country.jsx\";\nimport State from \"../../Pages/Location/State.jsx\";\nimport City from \"../../Pages/Location/City.jsx\";\nimport Company from \"../../Pages/Company/Company.jsx\";\n// import Employee from \"../../Pages/AddEmployee/Employee.jsx\";\nimport Salary from \"../../Pages/Salary/Salary.jsx\";\nimport LeaveApplicationHR from \"../Manager/LeaveApplicationHR.jsx\";\nimport NotFound404 from \"../../Pages/PageNot/NotFound404.jsx\";\nimport Dashboard from \"../Manager/Dashboard/ManagerDash.jsx\";\nimport ViewAttendance from \"../HrManager/attendance/ViewAttendance.jsx\";\n// task management\nimport ManagerNewTask from \"./ManagerTaskManagement/ManagerNewTask.jsx\";\nimport ManagerCencelledTask from \"./ManagerTaskManagement/ManagerCencelledTask.jsx\";\nimport ManagerCompletedTask from \"./ManagerTaskManagement/ManagerCompletedTask.jsx\";\nimport ManagerRejectedTask from \"./ManagerTaskManagement/ManagerRejectedTask.jsx\";\nimport ManagerActiveTask from \"./ManagerTaskManagement/ManagerActiveTask.jsx\";\n// import Attendance from \"../HrManager/attendance/Attendance.jsx\";\nimport Attendance from \"./attendance/Attendance.jsx\";\nimport InnerDashContainer from \"../InnerDashContainer.jsx\";\nimport LeaveCalendar from \"../../Pages/LeaveCalendar/LeaveCalendar.jsx\";\nimport TodaysAttendance from \"../../Pages/DailyAttendance/TodaysAttendance.jsx\";\nimport Employee from \"../../Pages/AddEmployee/Employee.jsx\";\nimport LeaveApplication from \"../../Pages/ApplyLeave/LeaveApplication.jsx\";\nimport LeaveApplicationHRAccept from \"../HrManager/LeaveStatus/LeaveApplicationHRAccept.jsx\";\nimport LeaveApplicationHRReject from \"../HrManager/LeaveStatus/LeaveApplicationHRReject.jsx\";\nimport Notification from \"./Notification/Notification.jsx\";\nconst MainContent = () => {\n  return (\n    <InnerDashContainer>\n      <div id=\"main-area\">\n        <div id=\"sidebar-top-content\" />\n        <Switch>\n          <Route path=\"/manager/employee\" component={Employee} />\n          <Route path=\"/manager/salary\" exact component={Salary} />\n          <Route path=\"/manager/company\" exact component={Company} />\n          <Route path=\"/manager/role\" component={Role} />\n          <Route path=\"/manager/position\" exact component={Position} />\n          <Route path=\"/manager/department\" exact component={Department} />\n          <Route path=\"/manager/country\" exact component={Country} />\n          <Route path=\"/manager/state\" exact component={State} />\n          <Route path=\"/manager/city\" exact component={City} />\n\n          {/* leave route */}\n          <Route\n            path=\"/manager/leaveApplication\"\n            exact\n            component={LeaveApplicationHR}\n          />\n\n          <Route path=\"/manager/hrLeave\" exact component={LeaveApplication} />\n          <Route\n            path=\"/manager/leaveAccepted\"\n            exact\n            component={LeaveApplicationHRAccept}\n          />\n          <Route\n            path=\"/manager/leaveRejected\"\n            exact\n            component={LeaveApplicationHRReject}\n          />\n          {/* leave route */}\n\n          <Route path=\"/manager/city\" exact component={City} />\n          <Route path=\"/manager/dashboard\" exact component={Dashboard} />\n          {/* <Route path=\"/manager/task\" exact component={TaskAssign} /> */}\n          <Route path=\"/manager/newTask\" exact component={ManagerNewTask} />\n          <Route\n            path=\"/manager/activeTask\"\n            exact\n            component={ManagerActiveTask}\n          />\n          <Route\n            path=\"/manager/taskcancle\"\n            exact\n            component={ManagerCencelledTask}\n          />\n          <Route\n            path=\"/manager/taskcomplete\"\n            exact\n            component={ManagerCompletedTask}\n          />\n          <Route\n            path=\"/manager/rejectTask\"\n            exact\n            component={ManagerRejectedTask}\n          />\n          <Route path=\"/manager/attenDance\" exact component={Attendance} />\n          <Route\n            path=\"/manager/viewAttenDance\"\n            exact\n            component={ViewAttendance}\n          />\n          <Route path=\"/manager/holiday\" exact component={LeaveCalendar} />\n          <Route\n            path=\"/manager/todaysAttendance\"\n            exact\n            component={TodaysAttendance}\n          />\n          <Route path=\"/manager/notification\" exact component={Notification} />\n          <Route\n            path=\"/manager/createLeave\"\n            exact\n            component={LeaveApplication}\n          />\n          {/* attendance */}\n          <Route render={() => <NotFound404 />} />\n        </Switch>\n      </div>\n    </InnerDashContainer>\n  );\n};\n\nexport default MainContent;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Sidebar.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Navbar\\NavBar.jsx",["802","803","804"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Sidebar\\Sidebar.jsx",["805"],"import React, { useState } from \"react\";\nimport { BsBuildingsFill } from \"react-icons/bs\";\nimport { FaAddressBook } from \"react-icons/fa\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { FaCalendarCheck } from \"react-icons/fa6\";\nimport { MdDashboard, MdMenuOpen, MdTaskAlt } from \"react-icons/md\";\nimport { TbDeviceIpadMinus } from \"react-icons/tb\";\nimport { MdHolidayVillage } from \"react-icons/md\";\nimport { AiOutlineFundProjectionScreen } from \"react-icons/ai\";\nimport { FcLeave } from \"react-icons/fc\";\nimport { TfiBlackboard } from \"react-icons/tfi\";\n\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Link } from \"react-router-dom\";\nimport { FaUserTie } from \"react-icons/fa\";\nimport \"./Sidebar.css\";\n\nconst Sidebar = () => {\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [extended, setExtended] = useState(true);\n\n  const allLinks = [\n    {\n      icon: <MdDashboard />,\n      name: \"Dashboard\",\n      navLinks: [{ to: \"/admin/dashboard\", label: \"Dashboard\" }]\n    },\n    {\n      icon: <FaUserTie />,\n      name: \"Employee\",\n      navLinks: [\n        { to: \"/admin/user\", label: \"Employee List\" },\n        { to: \"/admin/salary\", label: \"Salary\" }\n      ]\n    },\n    {\n      icon: <FaCalendarCheck />,\n      name: \"Attendance\",\n      navLinks: [\n        { to: \"/admin/adminAttendance\", label: \"Create Attendance\" },\n        { to: \"/admin/adminviewAttenDance\", label: \"View Attendance\" }\n      ]\n    },\n    {\n      icon: <FcLeave />,\n      name: \"Leave\",\n      navLinks: [\n        { to: \"/admin/applyLeave\", label: \"Apply Leave\" },\n        { to: \"/admin/pendingLeave\", label: \"Pending \" },\n        { to: \"/admin/leaveAccepted\", label: \"Accepted \" },\n        { to: \"/admin/leaveRejected\", label: \"Rejected \" }\n      ]\n    },\n    {\n      icon: <MdTaskAlt />,\n      name: \"Task\",\n      navLinks: [\n        { to: \"/admin/task\", label: \"Create New Task\" },\n        { to: \"/admin/taskassign\", label: \"Assigned\" },\n        { to: \"/admin/taskstatus\", label: \"Active Taask\" },\n        { to: \"/admin/taskcancle\", label: \"Cancelled Task\" },\n        { to: \"/admin/taskcomplete\", label: \"Completed Task\" },\n        { to: \"/admin/taskreject\", label: \"Rejected Task\" }\n      ]\n    },\n    {\n      icon: <TbDeviceIpadMinus />,\n      name: \"Access\",\n      navLinks: [\n        { to: \"/admin/role\", label: \"Role\" },\n        { to: \"/admin/position\", label: \"Position\" },\n        { to: \"/admin/department\", label: \"Department\" }\n      ]\n    },\n    {\n      icon: <BsBuildingsFill />,\n      name: \"Company\",\n      navLinks: [\n        { to: \"/admin/company\", label: \"Company List\" }\n        // { to: \"/hr/employee\", label: \"Create Employee\" },\n      ]\n    },\n    {\n      icon: <FaAddressBook />,\n      name: \"Address\",\n      navLinks: [\n        { to: \"/admin/country\", label: \"Country\" },\n        { to: \"/admin/state\", label: \"State\" },\n        { to: \"/admin/city\", label: \"City\" }\n      ]\n    },\n    {\n      icon: <TfiBlackboard />,\n      name: \"Noice\",\n      navLinks: [{ to: \"/admin/notice\", label: \"Create Notic\" }]\n    },\n    {\n      icon: <MdHolidayVillage />,\n      name: \"Holiday\",\n      navLinks: [{ to: \"/admin/leaveCal\", label: \"Leave Calendar\" }]\n    },\n    {\n      icon: <AiOutlineFundProjectionScreen />,\n      name: \"Project\",\n      navLinks: [\n        { to: \"/admin/project-bid\", label: \"Project Bidding\" },\n        { to: \"/admin/portal-master\", label: \"Portal Master\" }\n      ]\n    }\n  ];\n\n  const ExtendClick = () => {\n    setExtended(extended ? false : true);\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100%\",\n        maxHeight: \"100%\",\n        overflowY: \"auto\",\n        overflow: \"inherit\",\n        width: \"fit-content\",\n        background: \"#1D267D\"\n      }}\n      className=\"d-flex  flex-column gap-2 p-3\"\n    >\n      <h3\n        style={{ borderBottom: \"3px solid green\" }}\n        className=\"fw-bolder  text-success justify-content-between py-2 d-flex gap-2\"\n      >\n        <p\n          style={{ display: !extended ? \"none\" : \"block\" }}\n          className=\"my-auto\"\n        >\n          ADMIN\n        </p>{\" \"}\n        <span\n          onClick={ExtendClick}\n          style={{\n            border: \"none\",\n            outline: \"none\",\n            cursor: \"pointer\",\n            transform: `rotate(${!extended ? \"180deg\" : \"0deg\"})`\n          }}\n          className=\"my-auto p-0 fs-2 text-white\"\n        >\n          <MdMenuOpen />\n        </span>\n      </h3>\n\n      {allLinks.map(({ icon, name, navLinks }) => (\n        <div\n          key={name}\n          onMouseEnter={() => setActiveCategory(name)}\n          onMouseLeave={() => setActiveCategory(null)}\n          className=\"position-relative\"\n        >\n          <button\n            style={buttonStyle}\n            className=\"btn p-0 text-white text-start fw-bold gap-2 justify-between w-100 d-flex justify-content-between\"\n          >\n            <div\n              style={{ width: \"fit-content\" }}\n              className=\"d-flex gap-2 my-auto\"\n            >\n              <p\n                style={{\n                  height: \"30px\",\n                  width: \"30px\",\n                  alignItems: \"center\",\n                  color: activeCategory === name ? \"#FF9209\" : \"white\"\n                }}\n                className=\"m-auto d-flex rounded-5  justify-content-center fs-3\"\n              >\n                {icon}\n              </p>\n              <p\n                style={{ display: !extended ? \"none\" : \"block\" }}\n                className=\"my-auto\"\n              >\n                {name}\n              </p>\n            </div>\n            <span\n              style={{\n                transform: `rotate(${\n                  activeCategory === name ? \"135deg\" : \"0deg\"\n                })`,\n                transition: \"1s ease\",\n                display: !extended ? \"none\" : \"block\"\n              }}\n              className=\"my-auto fs-4\"\n            >\n              +\n            </span>\n          </button>\n\n          <div\n            style={{\n              ...dropdownStyle,\n              display: activeCategory === name ? \"flex\" : \"none\",\n              background:\n                \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\",\n              width: \"fit-content\"\n            }}\n            className=\"flex-column position-absolute top-0 start-100 py-2 px-2 gap-2 mt-2  \"\n          >\n            {navLinks.map((link) => (\n              <Link className=\"text-decoration-none\" key={link.to} to={link.to}>\n                <div className=\"text-decoration-none flex-nowrap text-start fw-bolder gap-3 text-white d-flex justify-content-between \">\n                  <div\n                    style={{ borderBottom: \"1px solid white\" }}\n                    className=\"d-flex gap-1 flex-nowrap\"\n                  >\n                    <p className=\"m-0\">{link.icon}</p>\n                    <p style={{ whiteSpace: \"pre\" }} className=\"m-auto\">\n                      {link.label}\n                    </p>\n                  </div>\n                  <span style={{}} className=\"my-auto \">\n                    ›\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst buttonStyle = {\n  outline: \"none\",\n  border: \"none\",\n  height: \"3rem\"\n};\n\nconst dropdownStyle = {\n  width: \"250px\",\n  zIndex: \"5\",\n  borderLeft: \"5px solid white\"\n};\n\nexport default Sidebar;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\router\\Routes.jsx",["806"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\sidebar\\Sidebar.jsx",["807","808","809","810","811","812","813","814","815"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\InnerDashContainer.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminProjectBid.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminPortal.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\AdminDash.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\Role.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\Position.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\Department.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\PageNot\\NotFound404.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\Employee.jsx",["816"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Employee.css\";\n\nimport EmployeeTable from \"./EmployeeTable.jsx\";\nimport EmployeeForm from \"./EmployeeForm.jsx\";\nimport EmployeeFormEdit from \"./EmployeeFormEdit.jsx\";\nimport EmployeeInfo from \"./EmployeeInfo.jsx\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport PersonalInfo from \"../../Component/Employee/EmpPresonal/PersonalInfo.jsx\";\nimport Education from \"../../Component/Employee/EmpEducation/Education.jsx\";\nimport FamilyInfo from \"../../Component/Employee/EmpFamily/FamilyInfo.jsx\";\nimport WorkExperience from \"../../Component/Employee/EmpWorkExp/WorkExperience.jsx\";\nimport BASE_URL from \"../config/config.js\";\n\nconst Employee = () => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [addFormGender, setAddFormGender] = useState(\"\");\n  const [editFormGender, setEditFormGender] = useState(\"\");\n  const [empInfo, setEmpInfo] = useState({});\n  const [empInfoBool, setEmpInfoBool] = useState(false);\n\n  const handleEmpInfo = (e) => {\n    setEmpInfo(e);\n    setEmpInfoBool(true);\n  };\n\n  const handleBack = () => {\n    setEmpInfoBool(false);\n  };\n\n  // const handleEmployeeSubmit = async (event) => {\n  //   event.preventDefault();\n  //   setTable(true);\n\n  //   const fileInput = event.target[15];\n\n  //   // Read the file as a Data URL (base64)\n  //   const reader = new FileReader();\n  //   let profilePath;\n  //   reader.onloadend = () => {\n  //     profilePath = reader.result.split(',')[1];\n  //   }\n\n  //   const body = {\n  //     Email: event.target[0].value,\n  //     Password: event.target[1].value,\n  //     Account: event.target[2].value,\n  //     RoleID: event.target[3].value,\n  //     Gender: addFormGender,\n\n  //     FirstName: event.target[6].value,\n  //     MiddleName: event.target[7].value,\n  //     LastName: event.target[8].value,\n  //     DOB: event.target[9].value,\n  //     ContactNo: event.target[10].value,\n\n  //     EmployeeCode: event.target[11].value,\n  //     DepartmentID: event.target[12].value,\n  //     PositionID: event.target[13].value,\n  //     DateOfJoining: event.target[14].value,\n  //     profile : event.target[15].files[0],\n  //     // TerminateDate: event.target[15].value,\n  //   };\n\n  //   // console.log(body);\n  //   // let formData = new FormData();\n\n  //   // formData( \"Email\" , event.target[0].value,)\n  //   // formData( \"Password\" , event.target[1].value,)\n  //   // formData( \"Account\" , event.target[2].value,)\n  //   // formData( \"RoleID\" , event.target[3].value,)\n  //   // formData( \"Gender\" , addFormGender)\n\n  //   // formData( \"FirstName\" , event.target[6].value,)\n  //   // formData( \"MiddleName\" , event.target[7].value,)\n  //   // formData( \"LastName\" , event.target[8].value,)\n  //   // formData( \"DOB\" , event.target[9].value,)\n  //   // formData( \"ContactNo\" , event.target[10].value,)\n\n  //   // formData( \"EmployeeCode\" , event.target[11].value,)\n  //   // formData( \"DepartmentID\" , event.target[12].value,)\n  //   // formData( \"PositionID\" , event.target[13].value,)\n  //   // formData( \"DateOfJoining\" , event.target[14].value,)\n  //   // formData( \"profile\" , body.profile)\n\n  //   console.log(body);\n\n  //  await axios\n  //     .post(\"http://localhost:4000/api/employee\", body, {\n  //       headers: {\n  //         authorization: localStorage.getItem(\"token\") || \"\",\n  //       },\n  //     })\n  //     .then((res) => {\n  //       setTable(false);\n  //       setTable(true);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  const handleEmployeeSubmit = async (event) => {\n    event.preventDefault();\n    // setTable(true);\n\n    const formData = new FormData();\n\n    formData.append(\"Email\", event.target[0].value);\n    formData.append(\"Password\", event.target[1].value);\n    formData.append(\"Account\", event.target[2].value);\n    formData.append(\"RoleID\", event.target[3].value);\n    formData.append(\"Gender\", addFormGender);\n\n    formData.append(\"FirstName\", event.target[6].value);\n    // formData.append(\"MiddleName\", event.target[7].value);\n    formData.append(\"LastName\", event.target[7].value);\n    formData.append(\"DOB\", event.target[8].value);\n    formData.append(\"ContactNo\", event.target[9].value);\n\n    // formData.append(\"EmployeeCode\", event.target[11].value);\n    formData.append(\"DepartmentID\", event.target[10].value);\n    formData.append(\"PositionID\", event.target[11].value);\n    formData.append(\"DateOfJoining\", event.target[12].value);\n    formData.append(\"profile\", event.target[13].files[0]);\n    formData.append(\"reportManager\", event.target[14].value);\n    formData.append(\"reportHr\", event.target[15].value);\n    await axios\n      .post(`${BASE_URL}/api/employee`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        // setTable(false);\n        setTable(true);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        if (err.response.status === 400) {\n          alert(err.response.data);\n        }\n      });\n  };\n\n  const handleAddEmployee = () => {\n    setTable(false);\n  };\n\n  const handleEditEmployee = (e) => {\n    setEditForm(true);\n    setEditData(e);\n    setEditFormGender(e[\"Gender\"]);\n  };\n\n  const handleFormClose = () => {\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    setEditForm(false);\n  };\n\n  // const handleEmployeeEditUpdate = (info, newInfo) => {\n  //   newInfo.preventDefault();\n\n  //   const body = {\n  //     Email: newInfo.target[0].value,\n  //     Account: newInfo.target[1].value,\n  //     RoleID: newInfo.target[2].value,\n  //     Gender: editFormGender,\n  //     FirstName: newInfo.target[5].value,\n  //     MiddleName: newInfo.target[6].value,\n  //     LastName: newInfo.target[7].value,\n  //     DOB: newInfo.target[8].value,\n  //     ContactNo: newInfo.target[9].value,\n  //     EmployeeCode: newInfo.target[10].value,\n  //     DepartmentID: newInfo.target[11].value,\n  //     PositionID: newInfo.target[12].value,\n  //     DateOfJoining: newInfo.target[13].value,\n  //     profile: newInfo.target[14].files[0],\n  //     // TerminateDate: newInfo.target[14].value,\n  //   };\n\n  //   console.log(body);\n  //   axios\n  //     .put(`http://localhost:4000/api/employee/${info[\"_id\"]}`, body, {\n  //       headers: {\n  //         authorization: localStorage.getItem(\"token\") || \"\",\n  //       },\n  //     })\n  //     .then((res) => {\n  //       setTable(false);\n  //       setTable(true);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n\n  //   setEditForm(false);\n  // };\n\n  const handleEmployeeEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n\n    if (newInfo.target[9].value) {\n    }\n\n    const formData = new FormData();\n\n    formData.append(\"Email\", newInfo.target[0].value);\n    formData.append(\"Account\", newInfo.target[1].value);\n    formData.append(\"RoleID\", newInfo.target[2].value);\n    formData.append(\"Gender\", editFormGender);\n    formData.append(\"FirstName\", newInfo.target[5].value);\n    // formData.append(\"MiddleName\", newInfo.target[6].value);\n    formData.append(\"LastName\", newInfo.target[6].value);\n    formData.append(\"DOB\", newInfo.target[7].value);\n    formData.append(\"ContactNo\", newInfo.target[8].value);\n    // formData.append(\"EmployeeCode\", newInfo.target[10].value);\n    formData.append(\"DepartmentID\", newInfo.target[9].value);\n    formData.append(\"PositionID\", newInfo.target[10].value);\n    formData.append(\"DateOfJoining\", newInfo.target[11].value);\n    formData.append(\"profile\", newInfo.target[12].files[0]);\n    formData.append(\"reportManager\", newInfo.target[13].value);\n    // formData.append(\"TerminateDate\", newInfo.target[14].value);\n\n    axios\n      .put(`${BASE_URL}/api/employee/${info[\"_id\"]}`, formData, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\",\n          \"Content-Type\": \"multipart/form-data\" // Set content type explicitly for FormData\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n        setEditForm(false);\n      })\n      .catch((err) => {\n        if (err.response.status === 400) {\n          alert(err.response.data);\n        }\n      });\n  };\n\n  const handleAddFormGenderChange = (e) => {\n    setAddFormGender(e.currentTarget.value);\n  };\n\n  const handleEditFormGenderChange = (e) => {\n    setEditFormGender(e.currentTarget.value);\n  };\n\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/hr/employee\"\n        render={(props) => (\n          <>\n            {table ? (\n              editForm ? (\n                <EmployeeFormEdit\n                  onEmployeeEditUpdate={handleEmployeeEditUpdate}\n                  onFormEditClose={handleEditFormClose}\n                  editData={editData}\n                  onGenderChange={handleEditFormGenderChange}\n                />\n              ) : (\n                <>\n                  {!empInfoBool ? (\n                    <EmployeeTable\n                      onAddEmployee={handleAddEmployee}\n                      onEditEmployee={handleEditEmployee}\n                      onEmpInfo={handleEmpInfo}\n                    />\n                  ) : (\n                    <PersonalInfo data={empInfo} onBack={handleBack} />\n                  )}\n                </>\n              )\n            ) : (\n              <EmployeeForm\n                onEmployeeSubmit={handleEmployeeSubmit}\n                onFormClose={handleFormClose}\n                onGenderChange={handleAddFormGenderChange}\n              />\n            )}\n          </>\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/hr/employee/info/personal-info\"\n        render={(props) => <PersonalInfo data={empInfo} back={true} />}\n      />\n      <Route\n        exact\n        path=\"/hr/employee/info/education\"\n        render={(props) => <Education data={empInfo} back={true} />}\n      />\n      <Route\n        exact\n        path=\"/hr/employee/info/family-info\"\n        render={(props) => <FamilyInfo data={empInfo} back={true} />}\n      />\n      <Route\n        exact\n        path=\"/hr/employee/info/work-experience\"\n        render={(props) => <WorkExperience data={empInfo} back={true} />}\n      />\n    </Router>\n  );\n};\n\nexport default Employee;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Salary\\Salary.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminAsignTask.jsx",["817","818","819","820"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\EmployeeTable.jsx",["821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843"],"import React, { useState, useEffect } from \"react\";\nimport \"./EmployeeTable.css\";\nimport { LuSearch } from \"react-icons/lu\";\nimport { LiaPhoneSolid } from \"react-icons/lia\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faEdit,\n  faInfoCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport {\n  FaFilePdf,\n  FaFilter,\n  FaLocationArrow,\n  FaRegEdit\n} from \"react-icons/fa\";\nimport { MdDeleteForever, MdOutlineEmail } from \"react-icons/md\";\nimport { SiMinutemailer } from \"react-icons/si\";\nimport { TbPhoneCalling, TbUserEdit } from \"react-icons/tb\";\nimport { FcNumericalSorting12 } from \"react-icons/fc\";\nimport { FcNumericalSorting21 } from \"react-icons/fc\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport BASE_URL from \"../config/config\";\n\n// *************csv & pdf **************//\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { FiSearch } from \"react-icons/fi\";\n// *************csv & pdf **************//\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst AdminEmployeeTable = (props) => {\n  const [employeeData, setEmployeeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\n  const [activeProfile, setActiveProfile] = useState(null);\n\n  const loadEmployeeData = () => {\n    axios\n      .get(`${BASE_URL}/api/employee`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // Ensure that response.data is an array\n        if (Array.isArray(response.data)) {\n          setEmployeeData(response.data);\n          setLoading(false);\n\n          // Clear the state arrays\n          setRowData([]);\n\n          response.data.forEach((data) => {\n            let temp = {\n              data,\n              Email: data[\"Email\"],\n              Password: data[\"Password\"],\n              Account:\n                data[\"Account\"] === 1\n                  ? \"Admin\"\n                  : data[\"Account\"] === 2\n                  ? \"HR\"\n                  : data[\"Account\"] === 3\n                  ? \"Employee\"\n                  : data[\"Account\"] === 4\n                  ? \"Manager\"\n                  : \"\",\n\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\n              FirstName: data[\"FirstName\"],\n              MiddleName: data[\"MiddleName\"],\n              LastName: data[\"LastName\"],\n              DOB: data[\"DOB\"].slice(0, 10),\n              ContactNo: data[\"ContactNo\"],\n              // EmployeeCode: data[\"EmployeeCode\"],\n              empID: data[\"empID\"],\n              DepartmentName: data[\"department\"][0]\n                ? data[\"department\"][0][\"DepartmentName\"]\n                : \"\",\n              PositionName: data[\"position\"][0]\n                ? data[\"position\"][0][\"PositionName\"]\n                : \"\",\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\n            };\n\n            // Use set function to update state\n            setRowData((prevData) => [...prevData, temp]);\n          });\n        } else {\n          console.error(\"Data received is not an array:\", response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onEmployeeDelete = (e) => {\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/employee/${e}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then(() => {\n          loadEmployeeData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const exportToPDF = () => {\n    window.confirm(\"Are you sure to download Employee record? \");\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"mm\",\n      format: [297, 210]\n    });\n\n    doc.setFontSize(18);\n    doc.text(\"Employee Details\", 297 / 2, 15, \"center\");\n    const headers = [\n      \"Emp Id\",\n      \"Email\",\n      \"Account Access\",\n      \"First Name\",\n      \"Last Name\",\n      \"DOB\",\n      \"ContactNo\",\n      \"Role\",\n      \"Position\",\n      \"Department\",\n      \"D.O.J\"\n    ];\n    const data = rowData.map((row) => [\n      row.empID,\n      row.Email,\n      row.Account,\n      row.FirstName,\n      row.LastName,\n      row.DOB,\n      row.ContactNo,\n      row.RoleName,\n      row.PositionName,\n      row.DepartmentName,\n      row.DateOfJoining,\n      \"\"\n    ]);\n    doc.setFontSize(12);\n    doc.autoTable({\n      head: [headers],\n      body: data,\n      startY: 25\n    });\n\n    doc.save(\"employee_data.pdf \");\n  };\n\n  const renderInfoButton = (params) => {\n    if (params.data && params.data.data) {\n      return (\n        <div>\n          <FontAwesomeIcon\n            icon={faInfoCircle}\n            onClick={() => props.onEmpInfo(params.data.data)}\n          />\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const renderButton = (params) => {\n    if (params.data && params.data.data && params.data.data[\"_id\"]) {\n      return (\n        <FontAwesomeIcon\n          icon={faTrash}\n          onClick={() => onEmployeeDelete(params.data.data[\"_id\"])}\n        />\n      );\n    }\n    return null;\n  };\n\n  const renderEditButton = (params) => {\n    if (params.data && params.data.data) {\n      return (\n        <FontAwesomeIcon\n          icon={faEdit}\n          onClick={() => props.onEditEmployee(params.data.data)}\n        />\n      );\n    }\n    return null;\n  };\n\n  const getBackgroundColor = (accountType) => {\n    switch (accountType) {\n      case \"Admin\":\n        return \"#1D267D\";\n      case \"HR\":\n        return \"#1D267D\";\n      case \"Employee\":\n        return \"#1D267D\";\n      case \"Manager\":\n        return \"#1D267D\";\n      default:\n        return \"#1D267D\";\n    }\n  };\n\n  const handleSearchInputChange = (event) => {\n    setSearchInput(event.target.value);\n  };\n\n  const handleToggleIdSort = () => {\n    setIsIdSortAscending(!isIdSortAscending);\n  };\n\n  const sortById = (a, b) => {\n    const idA = a.empID.toLowerCase();\n    const idB = b.empID.toLowerCase();\n\n    if (isIdSortAscending) {\n      return idA.localeCompare(idB);\n    } else {\n      return idB.localeCompare(idA);\n    }\n  };\n\n  useEffect(() => {\n    loadEmployeeData();\n  }, []);\n\n  const calculateUpcomingBirthdays = () => {\n    const today = new Date();\n    const upcomingBirthdaysData = rowData.filter((employee) => {\n      const dob = new Date(employee.DOB);\n      dob.setFullYear(today.getFullYear());\n\n      // Check if the upcoming birthday is within the next 7 days\n      const timeDiff = dob - today;\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n      return daysDiff >= 0 && daysDiff <= 7;\n    });\n\n    setUpcomingBirthdays(upcomingBirthdaysData);\n  };\n\n  useEffect(() => {\n    calculateUpcomingBirthdays();\n  }, [rowData]);\n\n  let filteredData = rowData.filter((item) => {\n    const isMatchingId = isIdFilterActive\n      ? item.empID.toLowerCase() === searchInput.toLowerCase()\n      : true;\n\n    const isMatchingFirstName = item.FirstName.toLowerCase().includes(\n      searchInput.toLowerCase()\n    );\n\n    return isMatchingId && isMatchingFirstName;\n  });\n\n  filteredData = filteredData.sort(sortById);\n\n  // Calculate the total length for each status\n  const allCount = filteredData.filter((data) => data.Account === \"\").length;\n  const adminCount = filteredData.filter(\n    (data) => data.Account === \"Admin\"\n  ).length;\n  const hrCount = filteredData.filter((data) => data.Account === \"HR\").length;\n  const managerCount = filteredData.filter(\n    (data) => data.Account === \"Manager\"\n  ).length;\n  const employeeCount = filteredData.filter(\n    (data) => data.Account === \"Employee\"\n  ).length;\n\n  return (\n    <div className=\"py-0\">\n      <div\n        style={{\n          position: \"sticky\",\n          top: \"0\",\n          zIndex: \"3\",\n          backgroundColor: \"white\"\n        }}\n        className=\"my-auto bg-light  py-2 shadow-sm mb-5\"\n      >\n        <div className=\"row m-auto row-gap-2 px-2\">\n          <div className=\"col-12 col-sm-12 col-md-3 d-flex\">\n            <h5 className=\"fw-bolder my-auto text-uppercase  d-flex text-muted gap-0\">\n              Employees\n              <span className=\"text-primary my-auto fs-6 mx-2\">\n                ({rowData.length})\n              </span>\n            </h5>\n          </div>\n          <div className=\"col-6 col-md-5 d-flex p-0 position-relative\">\n            <input\n              style={{\n                height: \"100%\",\n                width: \"100%\",\n                paddingLeft: \"30px\"\n              }}\n              className=\"form-control py-1 border border-muted border-2\"\n              type=\"text\"\n              placeholder=\"Search by name\"\n              value={searchInput}\n              onChange={handleSearchInputChange}\n            />\n            <LuSearch\n              style={{\n                position: \"absolute\",\n                top: \"30%\",\n                left: \"8px\",\n                height: \"17px\",\n                width: \"17px\"\n              }}\n            />\n          </div>\n          <div className=\"col-6 col-md-4 d-flex align-items-center justify-content-end gap-1\">\n            <button\n              onClick={exportToPDF}\n              className=\"btn py-1 bg-white shadow-sm fw-bold\"\n            >\n              <FaFilePdf className=\"fs-6 align-items-center text-danger\" />\n            </button>\n            <div className=\"bg-white\" style={{ position: \"relative\" }}>\n              <span\n                onMouseEnter={() => setActiveProfile(\"name\")}\n                onMouseLeave={() => setActiveProfile(null)}\n                className=\"btn py-1 shadow-sm text-primary\"\n              >\n                <FaFilter />\n                <div\n                  style={{\n                    position: \"absolute\",\n                    zIndex: \"1\",\n                    right: \"0\",\n                    top: \"95%\",\n                    width: \"130px\",\n                    display: activeProfile === \"name\" ? \"flex\" : \"none\"\n                  }}\n                  className=\"bg-white fw-bold rounded-3 px-2 shadow flex-column\"\n                >\n                  <div\n                    onClick={() => setSelectedFilter(\"\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex  flex-nowrap justify-content-between\"\n                  >\n                    ALL <span>({rowData.length})</span>\n                  </div>\n                  <div\n                    onClick={() => setSelectedFilter(\"Admin\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex flex-nowrap justify-content-between\"\n                  >\n                    ADMIN <span>({adminCount})</span>\n                  </div>\n                  <div\n                    onClick={() => setSelectedFilter(\"HR\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex flex-nowrap justify-content-between\"\n                  >\n                    HR <span>({hrCount})</span>\n                  </div>\n                  <div\n                    onClick={() => setSelectedFilter(\"Manager\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex flex-nowrap justify-content-between\"\n                  >\n                    MANAGER <span>({managerCount})</span>\n                  </div>\n                  <div\n                    onClick={() => setSelectedFilter(\"Employee\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex flex-nowrap justify-content-between\"\n                  >\n                    EMPLOYEE <span>({employeeCount})</span>\n                  </div>\n                </div>\n              </span>\n            </div>\n            <button\n              onClick={handleToggleIdSort}\n              className=\"btn py-1 bg-white shadow-sm fs-6 fw-bold\"\n            >\n              {isIdSortAscending ? (\n                <FcNumericalSorting21 />\n              ) : (\n                <FcNumericalSorting12 />\n              )}\n            </button>\n            <button\n              className=\"d-flex py-1 btn justify-center bg-success shadow-sm text-white fw-bold aline-center gap-2\"\n              onClick={props.onAddEmployee}\n            >\n              + <span className=\"d-none d-lg-flex\">Add Employee</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div className=\"row container-fluid mx-auto px-2 px-sm-5 justify-content-lg-around justify-content-start  row-gap-3 column-gap-0 \">\n          {filteredData\n            .filter((items) =>\n              selectedFilter ? items.Account === selectedFilter : true\n            )\n\n            .map((items, index) => {\n              return (\n                <div className=\"col-12 col-sm-6 col-lg-3 position-relative\">\n                  <p\n                    style={{\n                      width: \"fit-content\",\n                      position: \"absolute\",\n                      zIndex: \"2\",\n                      top: \"-3px\",\n                      letterSpacing: \"5px\",\n                      left: \"50%\",\n                      transform: \"translate(-50%)\"\n                    }}\n                    className=\"m-0 mx-auto rounded-5 fw-bold text-capitalize btn py-0 px-3 bg-white\"\n                  >\n                    {items.empID}\n                  </p>\n\n                  <div className=\" p-3 shadow rounded-4 d-flex flex-column gap-2\">\n                    <div\n                      className=\"rounded-4  d-flex flex-column py-2 text-center jusctify-content-center\"\n                      style={{\n                        backgroundColor: \"rgba(0, 0, 92, .1)\",\n                        boxShadow: \"0 0 20px 1px #F1EAFF inset\",\n                        position: \"relative\"\n                      }}\n                    >\n                      <button\n                        style={{\n                          position: \"absolute\",\n                          top: \"5%\",\n                          right: \"5% \"\n                        }}\n                        onClick={() => props.onEmpInfo(items.data)}\n                        className=\" btn p-0 text-primary cursor-pointer\"\n                        to=\"\"\n                        title=\"Info\"\n                      >\n                        <FaLocationArrow className=\"fs-6\" />\n                      </button>{\" \"}\n                      <button\n                        style={{\n                          position: \"absolute\",\n                          top: \"5%\",\n                          left: \"5% \",\n                          fontSize: \".8px\"\n                        }}\n                        onClick={() => props.onEditEmployee(items.data)}\n                        className=\" btn p-0 text-primary cursor-pointer\"\n                        to=\"\"\n                        title=\"Edit Profile\"\n                      >\n                        <TbUserEdit className=\"fs-5\" />\n                      </button>\n                      <div\n                        style={{\n                          height: \"80px\",\n                          width: \"80px\",\n                          overflow: \"hidden\",\n                          borderRadius: \"50%\",\n                          border: \"3px solid #4477CE\"\n                        }}\n                        className=\"profile-image mt-1 bg-white  mx-auto\"\n                      >\n                        <img\n                          style={{\n                            height: \"100%\",\n                            width: \"100%\",\n                            overflow: \"hidden\",\n                            borderRadius: \"50%\",\n                            objectFit: \"cover\",\n                            padding: \".2rem\"\n                          }}\n                          className=\"\"\n                          src={\n                            items?.data?.profile?.image_url\n                              ? items?.data?.profile?.image_url\n                              : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\n                          }\n                          alt=\"\"\n                        />\n                      </div>\n                      <div style={{ position: \"relative\" }}>\n                        <p className=\"m-0 text-capitalize fw-bold fs-5\">\n                          {items.FirstName} {items.LastName}\n                        </p>\n                        <p className=\"m-0 text-capitalize fw-bold\">\n                          {items.PositionName}\n                        </p>\n                        <p\n                          style={{ width: \"fit-content \" }}\n                          className=\"btn btn-outline-success my-1 mx-auto p-0 px-2 fw-bold rounded-5\"\n                        >\n                          {items.Account}\n                        </p>\n                      </div>\n                    </div>\n                    <a\n                      target=\"_blank\"\n                      href={`mailto:${items.Email}`}\n                      style={{\n                        color: \"#00005C\",\n                        textDecoration: \"none\",\n                        cursor: \"pointer\"\n                      }}\n                      className=\"m-0\"\n                    >\n                      <MdOutlineEmail /> {items.Email}\n                    </a>\n                    <a\n                      target=\"_blank\"\n                      href={`tel:${items.ContactNo}`}\n                      style={{\n                        color: \"#00005C\",\n                        textDecoration: \"none\",\n                        cursor: \"pointer\"\n                      }}\n                      className=\"m-0\"\n                    >\n                      <LiaPhoneSolid /> {items.ContactNo}\n                    </a>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminEmployeeTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminCancleTask.jsx",["844"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst AdminCancleTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Cancelled\" }\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cancelled tasks:\", error.message);\n      setError(\"Error fetching cancelled tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchDataWithTimeout = async () => {\n      await fetchData();\n    };\n\n    fetchDataWithTimeout();\n  }, []);\n  const canceledTaskCount = tasks.filter(\n    (task) => task.status === \"Cancelled\"\n  ).length;\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ❌ Cancelled Task ({canceledTaskCount})\n      </h1>\n      <p className=\"text-muted\">You can view all Cancelled task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter((task) => task.status === \"Cancelled\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-danger fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"\">\n                  <p className=\"btn btn-danger m-auto fw-bold\">Cancelled</p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(128, 128, 128, 0.422)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    c a n c e l l e d\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <div\n                    style={{ position: \"relative\" }}\n                    className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n                  >\n                    <div\n                      style={{\n                        width: \"99.4%\",\n                        height: \"100%\",\n                        zIndex: \"5\",\n                        backgroundColor: \"rgba(128, 128, 128, 0.422)\",\n                        textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                      }}\n                      className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                    >\n                      <h1 className=\"text-uppercase text-light fw-bolder\">\n                        c a n c e l l e d\n                      </h1>\n                    </div>\n                    <div\n                      style={{ height: \"fit-content\" }}\n                      className=\"form-control\"\n                    >\n                      <p\n                        style={{ height: \"fit-content\" }}\n                        className=\"text-start fs-6 form-control\"\n                      >\n                        <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                        {task.description}\n                      </p>\n                      <div\n                        style={{ height: \"fit-content\" }}\n                        className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                      >\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Task Durations <br />{\" \"}\n                          <span>{task.duration} days</span>{\" \"}\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Manager's Email <br />{\" \"}\n                          <span>{task.managerEmail}</span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Start Date <br />{\" \"}\n                          <span>\n                            {new Date(task.startDate).toLocaleDateString()}\n                          </span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          End Date <br />{\" \"}\n                          <span>\n                            {new Date(task.endDate).toLocaleDateString()}\n                          </span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          <span>\n                            Task Status <br /> {task.status}\n                          </span>\n                        </p>\n                      </div>\n                      <div className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\">\n                        <p>\n                          <span className=\"fw-bold\">Remarks : </span>{\" \"}\n                          {task.comment}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminCancleTask;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\RejectedTask.jsx",["845"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst RejectedTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching completed tasks:\", error.message);\n      setError(\"Error fetching completed tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ❌ Rejected Tasks\n      </h1>\n      <p className=\"text-muted\">You can view all rejected task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n        className=\"d-flex flex-column gap-3\"\n      >\n        {tasks\n          .filter((task) => task.status === \"Rejected\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div>\n                  <p className=\"btn btn-light m-auto py-1 px-3 fw-bold\">\n                    Rejected\n                  </p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(5, 128, 8, 0.384)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    R E J E C T E D\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Manager's Email <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RejectedTask;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminCompleteTask.jsx",["846"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst AdminCompleteTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching completed tasks:\", error.message);\n      setError(\"Error fetching completed tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  });\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ✅ Completed Tasks\n      </h1>\n      <p className=\"text-muted\">You can view all Completed task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n        className=\"d-flex flex-column gap-3\"\n      >\n        {tasks\n          .filter((task) => task.status === \"Completed\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"\">\n                  <p className=\"btn btn-success m-auto  fw-bold\">Completed</p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(0, 128, 0, 0.384)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    C O M P L E T E D\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Manager's Email <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminCompleteTask;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\LeaveCalendar\\LeaveCalendar.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminTaskStatus.jsx",["847","848","849","850","851"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PiInfoFill } from \"react-icons/pi\";\nimport { FaCheck } from \"react-icons/fa6\";\nimport { MdCancel, MdEdit } from \"react-icons/md\";\n// import { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { BsFiletypeDoc } from \"react-icons/bs\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst AdminTaskStatus = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isCanceling, setIsCanceling] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [allImage, setAllImage] = useState(null);\n\n  const [updatedTask, setUpdatedTask] = useState({\n    id: \"\",\n    Taskname: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    managerEmail: \"\",\n    duration: 0\n  });\n\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n\n  useEffect(() => {\n    getPdf();\n  }, []);\n  const getPdf = async () => {\n    const result = await axios.get(`${BASE_URL}/api/getTask`);\n    console.log(result.data.data);\n    setAllImage(result.data.data);\n  };\n  const showPdf = (id) => {\n    let require =\n      allImage &&\n      allImage.filter((val) => {\n        return val._id === id;\n      });\n    console.log(require[0].pdf);\n    window.open(`${BASE_URL}/${require[0].pdf}`, \"_blank\", \"noreferrer\");\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  }, []);\n\n  const cancelTask = async (taskId) => {\n    try {\n      setIsCanceling(true);\n\n      // Prompt the user for cancellation remarks\n      const cancellationRemarks = prompt(\n        \"Enter remarks for task cancellation:\"\n      );\n\n      if (cancellationRemarks === null) {\n        // If the user clicks Cancel in the prompt, do nothing\n        setIsCanceling(false);\n        return;\n      }\n\n      // Update the task status to \"Cancelled\" in the database\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Cancelled\",\n        comment: cancellationRemarks\n      });\n\n      // Display success notification\n      // toast.success(\"Task canceled successfully!\");\n\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error canceling task:\", error.message);\n      // toast.error(\"Failed to cancel task. Please try again.\");\n    } finally {\n      setIsCanceling(false);\n    }\n  };\n\n  const updateTask = (taskId) => {\n    const taskToUpdate = tasks.find((task) => task._id === taskId);\n\n    if (taskToUpdate) {\n      setUpdatedTask({\n        id: taskToUpdate._id,\n        Taskname: taskToUpdate.Taskname,\n        description: taskToUpdate.description,\n        startDate: taskToUpdate.startDate,\n        endDate: taskToUpdate.endDate,\n        managerEmail: taskToUpdate.managerEmail,\n        duration: taskToUpdate.duration\n      });\n\n      setShowUpdateModal(true);\n    }\n\n    console.log();\n  };\n\n  const handleCloseUpdateModal = () => {\n    setShowUpdateModal(false);\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`${BASE_URL}/api/tasks/${updatedTask.id}`, {\n        Taskname: updatedTask.Taskname,\n        description: updatedTask.description,\n        startDate: updatedTask.startDate,\n        endDate: updatedTask.endDate,\n        managerEmail: updatedTask.managerEmail,\n        duration: updatedTask.duration\n      });\n\n      // Display success notification\n      // toast.success(\"Task updated successfully!\");\n\n      // Close the update modal\n      handleCloseUpdateModal();\n\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error updating task:\", error.message);\n      // toast.error(\"Failed to update task. Please try again.\");\n    }\n  };\n\n  const askStatus = async (taskId) => {\n    // Implement the logic to ask for task status (e.g., open a modal or show a notification)\n  };\n\n  const completeTask = async (taskId) => {\n    try {\n      const CompleteMassage = prompt(\"Enter remarks for task cancellation:\");\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Completed\",\n        comment: CompleteMassage\n      });\n      // toast.success(\"Task completed successfully!\");\n      fetchData();\n    } catch (error) {\n      console.error(\"Error completing task:\", error.message);\n      // toast.error(\"Failed to complete task. Please try again.\");\n    }\n  };\n\n  const totalActiveTask = tasks.filter(\n    (task) => task.status === \"Assigned\"\n  ).length;\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        🟢 Active Task Status ({totalActiveTask})\n      </h1>\n      <p className=\"text-muted mb-2\">\n        You can view all accepted task by manager here!\n      </p>{\" \"}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter(\n            (task) => task.status === \"Pending\" || task.status === \"Assigned\"\n          )\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.DepartmentName}\n            >\n              <summary\n                style={{\n                  color: \"black\",\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex text-white justify-content-between aline-center form-control\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div>\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                      <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">Late</h5>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).days}{\" \"}\n                      </div>{\" \"}\n                      <div>Day</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control  fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{\n                          boxShadow: \"0 0 5px 2px gray inset\",\n                          color: \"black\"\n                        }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Hrs</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  )}\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Manager's Email <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <button\n                      className=\"btn btn-danger col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => cancelTask(task._id)}\n                    >\n                      <MdCancel />\n                      Cancel Task\n                    </button>\n                    <button\n                      className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => updateTask(task._id)}\n                    >\n                      <MdEdit />\n                      Update Task\n                    </button>\n                    {allImage && allImage.length > 0 && (\n                      <button\n                        className=\"btn btn-warning col-2 d-flex justify-center aline-center gap-2\"\n                        onClick={() => showPdf(task._id)}\n                      >\n                        <BsFiletypeDoc /> View Docs\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-success col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => completeTask(task._id)}\n                    >\n                      <FaCheck />\n                      Complete Task\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n      {/* Update Task Modal */}\n      <Modal\n        show={showUpdateModal}\n        fullscreen={false}\n        onHide={handleCloseUpdateModal}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"fw-bold text-uppercase\">\n            Update Task\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className=\"d-flex flex-column gap-3\">\n            <Form.Group controlId=\"formTaskName\">\n              <Form.Label>Task Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={updatedTask.Taskname}\n                onChange={(e) =>\n                  setUpdatedTask({ ...updatedTask, Taskname: e.target.value })\n                }\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={updatedTask.description}\n                onChange={(e) =>\n                  setUpdatedTask({\n                    ...updatedTask,\n                    description: e.target.value\n                  })\n                }\n              />\n            </Form.Group>\n            <div className=\"row\">\n              <Form.Group className=\"col-12 col-md-6\" controlId=\"startDate\">\n                <Form.Label>Start Date </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  value={updatedTask.startDate}\n                  onChange={(e) =>\n                    setUpdatedTask({\n                      ...updatedTask,\n                      startDate: e.target.value\n                    })\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"col-12 col-md-6\" controlId=\"endDate\">\n                <Form.Label>End Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  value={updatedTask.endDate}\n                  onChange={(e) =>\n                    setUpdatedTask({ ...updatedTask, endDate: e.target.value })\n                  }\n                />\n              </Form.Group>\n            </div>\n\n            {/* ... (similarly update other fields) */}\n\n            <Button variant=\"primary\" onClick={handleUpdate}>\n              Update\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AdminTaskStatus;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\TaskManagement\\AdminAssignedTask.jsx",["852","853","854","855","856","857"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\attendance\\Attendance.jsx",["858","859","860","861","862"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport SelfAttendance from \"./SelfAttendance\";\r\nimport Moment from \"moment\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nfunction SetLog(props) {\r\n  // const [employees, setEmployees] = useState([]);\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n  // const [attencenceID, setAttencenceID] = useState(\"\");\r\n  // const [message, setMessage] = useState(\"\");\r\n  const [empName, setEmpName] = useState(null);\r\n\r\n  const {\r\n    employees,\r\n    setEmployees,\r\n    selectedEmployee,\r\n    setSelectedEmployee,\r\n    attencenceID,\r\n    setAttencenceID,\r\n    message,\r\n    setMessage\r\n  } = useContext(AttendanceContext);\r\n\r\n  useEffect(() => {\r\n    const loadEmployeeData = async (email) => {\r\n      await axios\r\n        .get(`${BASE_URL}/api/employee`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((response) => {\r\n          // Ensure that response.data is an array\r\n          let admin = response.data.filter((val) => {\r\n            return val.Account === 1;\r\n          });\r\n          setEmployees(admin);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    loadEmployeeData();\r\n  }, []);\r\n  // hello\r\n\r\n  useEffect(() => {\r\n    const loadPersonalInfoData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/personal-info/` + props.data[\"_id\"],\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        );\r\n        console.log(response.data.FirstName);\r\n        setEmpName(response.data.FirstName);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n\r\n    loadPersonalInfoData();\r\n  }, []);\r\n\r\n  // hello\r\n  const handleUserChange = (employeeID) => {\r\n    const selectedEmployee = employees.find(\r\n      (employee) => employee._id === employeeID\r\n    );\r\n\r\n    if (selectedEmployee) {\r\n      setAttencenceID(selectedEmployee.attendanceObjID);\r\n      setSelectedEmployee(employeeID);\r\n      getMessage(employeeID);\r\n    }\r\n  };\r\n\r\n  const getMessage = async (employeeID) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeID}`\r\n      );\r\n      const lastEntry = response.data[response.data.length - 1];\r\n\r\n      if (lastEntry) {\r\n        setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\r\n      } else {\r\n        setMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    console.log(data);\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select a user\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = Moment().filter(\"HH:mm:ss\");\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        loginTime: [currentTime],\r\n        status: \"login\"\r\n      });\r\n      setMessage(\"Login time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording login time:\", error);\r\n      setMessage(\"Error recording login time\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select an employee\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = Moment().filter(\"HH:mm:ss\");\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        logoutTime: [currentTime],\r\n        status: \"logout\"\r\n      });\r\n      setMessage(\"Logout time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording logout time:\", error);\r\n      setMessage(\"Error recording logout time\");\r\n    }\r\n  };\r\n\r\n  const handleResume = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().filter(\"HH:mm:ss\");\r\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n        await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n          employeeId: selectedEmployee,\r\n          year: new Date().getFullYear(),\r\n          month: new Date().getMonth() + 1,\r\n          date: new Date().getDate(),\r\n          ResumeTime: [currentTime],\r\n          resumeTimeMS: [currentTimeMs],\r\n          status: \"resume\"\r\n        });\r\n\r\n        setMessage(\"Resumed time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording resume time:\", error);\r\n        setMessage(\"Error recording resume time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBreak = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      console.log(email);\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().filter(\"HH:mm:ss\");\r\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n        await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n          employeeId: selectedEmployee,\r\n          year: new Date().getFullYear(),\r\n          month: new Date().getMonth() + 1,\r\n          date: new Date().getDate(),\r\n          breakTime: [currentTime],\r\n          breakTimeMs: [currentTimeMs],\r\n          status: \"break\"\r\n        });\r\n        setMessage(\"Break time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording break time:\", error);\r\n        setMessage(\"Error recording break time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(employees);\r\n\r\n  return (\r\n    <div className=\"App row\">\r\n      <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\r\n      <div\r\n        className=\"form-control d-flex  gap-3 p-3 m-3\"\r\n        style={{ height: \"fit-content\" }}\r\n      >\r\n        {/* <select\r\n          className=\"form-select mx-2 w-25 \"\r\n          onChange={(e) => handleUserChange(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select User --</option>\r\n          {employees.map((employee) => (\r\n            <option key={employee._id} value={employee._id}>\r\n              {employee.FirstName}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n        <input value={empName} style={{ display: \"none\" }} />\r\n\r\n        <div className=\"d-flex gap-3\">\r\n          <button className=\"btn btn-success\" onClick={handleLogin}>\r\n            Mark Attendance\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n          <div className=\"d-flex gap-3\">\r\n            <button className=\"btn btn-warning\" onClick={handleBreak}>\r\n              Break\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleResume}>\r\n              Resume\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && <p>{message}</p>}\r\n\r\n      <div className=\"view\">\r\n        <SelfAttendance />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetLog;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\attendance\\ViewAttendance.jsx",["863"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport { MdOutlineRefresh } from \"react-icons/md\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst AttendanceDetails = () => {\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      });\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeChange = (event) => {\r\n    setEmployeeId(event.target.value);\r\n  };\r\n\r\n  // const handleFetchAttendance = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `${BASE_URL}/api/attendance/${employeeId}`,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n  //         }\r\n  //       }\r\n  //     );\r\n  //     let singleUser = response.data.filter((val) => {\r\n  //       return val.employeeObjID._id === employeeId;\r\n  //     });\r\n  //     setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching attendance data:\", error);\r\n  //   }\r\n  // };\r\n\r\n  const handleFetchAttendance = async () => {\r\n    setIsButtonClicked(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n          }\r\n        }\r\n      );\r\n\r\n      let singleUser = response.data.filter((val) => {\r\n        return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n      });\r\n\r\n      setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    } finally {\r\n      // Reset the isButtonClicked state after a delay to allow the animation to play\r\n      setTimeout(() => {\r\n        setIsButtonClicked(false);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {/* <div className=\"d-flex gap-3 \">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  🪪 ({employee.empID}) {employee.FirstName}-{employee.LastName}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          Fetch Attendance\r\n        </button>\r\n      </div> */}\r\n      <div className=\"d-flex gap-3 justify-content-between\">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  <p>\r\n                    🪪 ({employee.empID}) {employee.FirstName}\r\n                  </p>\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <button\r\n          disabled={!employeeId}\r\n          style={{ display: \"flex\", alignItems: \"center\", gap: \".5rem\" }}\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          <MdOutlineRefresh\r\n            className={`fs-4 ${isButtonClicked ? \"rotate\" : \"\"}`}\r\n          />{\" \"}\r\n          Get\r\n        </button>\r\n      </div>\r\n\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">\r\n                <th className=\"bg-dark text-white text-center\">Date</th>\r\n                <th className=\"bg-dark text-white text-center\">Status</th>\r\n                <th className=\"bg-dark text-white\">Login Time</th>\r\n                <th className=\"bg-dark text-white\">Logout Time</th>\r\n                <th className=\"bg-dark text-white\">Break</th>\r\n                <th className=\"bg-dark text-white\">Total Login</th>\r\n                <th className=\"bg-dark text-white\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`} // Assign unique ID to each row\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <span className=\"fw-bold bg-info py-1 px-2  shadow-sm text-white\">\r\n                              {date.date}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"center\" }}\r\n                          >\r\n                            {getAttendanceMark(date)}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ scale: \"0.7\" }}\r\n                                className=\"bg-warning py-0  text-white  px-2 rounded-5 my-auto\"\r\n                              >\r\n                                {date.breakTime.length}\r\n                              </span>\r\n                              <span className=\"fw-bold text-dark fs-6\">\r\n                                {millisecondsToTime(date.totalBrake)}\r\n                              </span>{\" \"}\r\n                              <FaCircleInfo\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"text-info \"\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{ zIndex: \"5\", right: \"0%\" }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering &&\r\n                                hoveredDate === date.date && ( // Check if info button is hovered and the date is the hovered date\r\n                                  <table className=\"table table-bordered table-striped\">\r\n                                    <thead>\r\n                                      <tr className=\"shadow-sm p-0\">\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Break\r\n                                        </th>\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Resume\r\n                                        </th>\r\n                                        <th\r\n                                          className=\"text-end  py-0 bg-info text-white\"\r\n                                          style={{ whiteSpace: \"pre\" }}\r\n                                        >\r\n                                          Total Break\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {date.breakTime.map(\r\n                                        (breakTime, index) => (\r\n                                          <tr className=\"shadow-sm\" key={index}>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {breakTime}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {date.ResumeTime[index]}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-end py-1 \"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {millisecondsToTime(\r\n                                                date.BreakData[index]\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                )}\r\n                            </div>\r\n                          </td>\r\n                          <td>{millisecondsToTime(date.totalLogAfterBreak)}</td>\r\n                          <td>{date.status}</td>\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDetails;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\Country.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Company\\Company.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\State.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\City.jsx",["864"],"import React, { useState, useEffect } from \"react\";\nimport \"./City.css\";\nimport axios from \"axios\";\nimport CityTable from \"./CityTable.jsx\";\nimport CityForm from \"./CityForm.jsx\";\nimport CityFormEdit from \"./CityFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n\nconst City = () => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n\n  const handleCitySubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    const body = {\n      StateID: event.target[1].value,\n      CityName: event.target[2].value\n    };\n\n    axios\n      .post(`${BASE_URL}/api/city`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddCity = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditCity = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleCityEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    setTable(true);\n\n    const body = {\n      StateID: newInfo.target[1].value,\n      CityName: newInfo.target[2].value\n    };\n\n    axios\n      .put(`${BASE_URL}/api/city/${info[\"_id\"]}`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        console.log(\n          \"uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\"\n        );\n        setEditForm(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <CityFormEdit\n            onCityEditUpdate={handleCityEditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <CityTable onAddCity={handleAddCity} onEditCity={handleEditCity} />\n        )\n      ) : (\n        <CityForm\n          onCitySubmit={handleCitySubmit}\n          onFormClose={handleFormClose}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default City;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ApplyLeave\\LeaveApplication.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHRAccept.jsx",["865","866","867","868","869","870","871"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHRReject.jsx",["872","873","874","875","876","877","878"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Notification\\NoticeManagement.jsx",["879","880","881"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nconst NoticeManagement = () => {\r\n  const [newTask, setNewTask] = useState({\r\n    notice: \"\",\r\n    attachments: null\r\n  });\r\n  const isFormValid = () => {\r\n    return newTask.notice.trim() !== \"\";\r\n  };\r\n\r\n  const sendNotice = async () => {\r\n    let formData = new FormData();\r\n    const noticeId = uuid();\r\n    formData.append(\"noticeId\", noticeId);\r\n    formData.append(\"notice\", newTask.notice);\r\n    formData.append(\"file\", newTask.attachments);\r\n    // console.log(newTask);\r\n    // socket.emit('sendNotice', formData);\r\n    axios\r\n      .post(`${BASE_URL}/api/notice`, formData)\r\n      .then((res) => {\r\n        alert(\"Notice send\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div style={{ zIndex: \"1\" }} className=\"p-4 d-flex flex-column \">\r\n      <form className=\"row p-0 p-md-3 m-auto\">\r\n        <h2 className=\"fw-bold text-muted \"> 🖋️Send new Notice</h2>\r\n        <p className=\"text-muted\">\r\n          Unleash the Power of Notice: Communicate with Impact, Ignite Change!\r\n        </p>\r\n        <div className=\"col-12 mt-5 d-flex flex-column\">\r\n          <Form.Group controlId=\"Taskname\">\r\n            <Form.Label className=\"fw-bold\">Notice</Form.Label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Notice\"\r\n              value={newTask.notice}\r\n              onChange={(e) =>\r\n                setNewTask({ ...newTask, notice: e.target.value })\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <div>\r\n          <Form.Group controlId=\"Attachments\">\r\n            <Form.Label className=\"fw-bold mt-3\">Attachments</Form.Label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              multiple\r\n              required\r\n              onChange={(e) =>\r\n                setNewTask({ ...newTask, attachments: e.target.files[0] })\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button\r\n          className=\"mt-4 w-100 fw-bold text-white\"\r\n          variant=\"info\"\r\n          onClick={sendNotice}\r\n          disabled={!isFormValid()}\r\n        >\r\n          Send Notice\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeManagement;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Notification\\Notification.jsx",["882","883"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport \"./notification.css\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst Notification = () => {\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedNotification, setSelectedNotification] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const email = localStorage.getItem(\"Email\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setNotification(response.data.Notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"taskNotificationReceived\", () => {\r\n        loadEmployeeData();\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    // Check if all notifications are selected and update the \"Select All\" checkbox accordingly\r\n    setSelectAll(\r\n      notification && selectedNotification.length === notification.length\r\n    );\r\n  }, [selectedNotification, notification]);\r\n\r\n  const addSelectedNotification = (val) => {\r\n    const isChecked = selectedNotification.some(\r\n      (noti) => noti.taskId === val.taskId\r\n    );\r\n\r\n    if (isChecked) {\r\n      setSelectedNotification((prevNotification) =>\r\n        prevNotification.filter((noti) => noti.taskId !== val.taskId)\r\n      );\r\n    } else {\r\n      setSelectedNotification([...selectedNotification, val]);\r\n    }\r\n  };\r\n\r\n  const toggleSelectAll = () => {\r\n    setSelectAll(!selectAll);\r\n    setSelectedNotification(selectAll ? [] : [...notification]);\r\n  };\r\n  const clearAllHandler = () => {\r\n    if (notification.length > 0) {\r\n      console.log(\"clearALL\");\r\n      axios\r\n        .post(\r\n          `${BASE_URL}/api/selectedNotificationDelete`,\r\n          { email },\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setNotification(response.data.result.Notification);\r\n          socket.emit(\"notificationPageUpdate\", true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const multiNotificationDeleteHandler = () => {\r\n    if (selectedNotification.length > 0) {\r\n      const taskIDArray = selectedNotification.map((val) => val.taskId);\r\n      const data = {\r\n        employeeMail: email,\r\n        tasks: taskIDArray\r\n      };\r\n      if (selectAll) {\r\n        clearAllHandler();\r\n      } else {\r\n        axios\r\n          .post(`${BASE_URL}/api/multiSelectedNotificationDelete`, data, {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          })\r\n          .then((response) => {\r\n            setNotification(response.data.result.Notification);\r\n            setSelectedNotification([]);\r\n            console.log(\"emittted\");\r\n            socket.emit(\"notificationPageUpdate\", true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  const notificationDeleteHandler = (id) => {\r\n    console.log(id);\r\n    axios\r\n      .post(\r\n        `${BASE_URL}/api/notificationDeleteHandler/${id}`,\r\n        { email },\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setNotification(response.data.result.Notification);\r\n        setSelectedNotification([]);\r\n        console.log(\"emittted\");\r\n        socket.emit(\"notificationPageUpdate\", true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  console.log(notification);\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <form className=\"d-flex col-8 flex-column gap-3\">\r\n          <div>\r\n            <div className=\"p-2\">\r\n              {\" \"}\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"\"\r\n                id=\"\"\r\n                onChange={toggleSelectAll}\r\n                checked={selectAll}\r\n              />{\" \"}\r\n              <span>Select All</span>\r\n            </div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Select</th>\r\n                  <th scope=\"col\">task Name</th>\r\n                  <th scope=\"col\">Sender</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {notification &&\r\n                  notification.map((val, index) => (\r\n                    <tr key={index}>\r\n                      <th scope=\"row\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          onChange={() => addSelectedNotification(val)}\r\n                          checked={selectedNotification.some(\r\n                            (noti) => noti.taskId === val.taskId\r\n                          )}\r\n                        />\r\n                      </th>\r\n                      <td>{val.taskName}</td>\r\n                      <td>{val.senderMail}</td>\r\n                      {val.status === \"unseen\" ? (\r\n                        <td>Unread</td>\r\n                      ) : (\r\n                        <td>read</td>\r\n                      )}\r\n                      <td>\r\n                        <ImBin\r\n                          onClick={() => notificationDeleteHandler(val.taskId)}\r\n                          className=\"bin\"\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <button\r\n        className=\"Notification_delete\"\r\n        onClick={multiNotificationDeleteHandler}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerCencelledTask.jsx",["884"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerCompletedTask.jsx",["885"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerNewTask.jsx",["886","887"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\HRDash.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerRejectedTask.jsx",["888"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\ViewAttendance.jsx",["889","890","891","892"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Notification\\Notification.jsx",["893","894"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\ManagerTaskManagement\\ManagerActiveTask.jsx",["895","896","897","898","899","900","901","902","903","904"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Notification\\Notification.jsx",["905","906"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\Attendance.jsx",["907","908","909","910"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Notification\\Notification.jsx",["911","912"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\CountData\\UpcomingBirthdays.jsx",["913","914","915","916","917","918","919","920","921"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { GiPartyPopper } from \"react-icons/gi\";\r\nimport HappyBirthday from \"./HappyBirthday.svg\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst UpcomingBirthdays = () => {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\r\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\r\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee/` + localStorage.getItem(\"_id\"), {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // Ensure that response.data is an array\r\n        if (Array.isArray(response.data)) {\r\n          setEmployeeData(response.data);\r\n          setLoading(false);\r\n\r\n          // Clear the state arrays\r\n          setRowData([]);\r\n\r\n          response.data.forEach((data) => {\r\n            let temp = {\r\n              data,\r\n              Email: data[\"Email\"],\r\n              Password: data[\"Password\"],\r\n              Account:\r\n                data[\"Account\"] === 1\r\n                  ? \"Admin\"\r\n                  : data[\"Account\"] === 2\r\n                  ? \"HR\"\r\n                  : data[\"Account\"] === 3\r\n                  ? \"Employee\"\r\n                  : \"\",\r\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n              FirstName: data[\"FirstName\"],\r\n              MiddleName: data[\"MiddleName\"],\r\n              LastName: data[\"LastName\"],\r\n              DOB: data[\"DOB\"].slice(0, 10),\r\n              ContactNo: data[\"ContactNo\"],\r\n              EmployeeCode: data[\"EmployeeCode\"],\r\n              empID: data[\"empID\"],\r\n              DepartmentName: data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\",\r\n              PositionName: data[\"position\"][0]\r\n                ? data[\"position\"][0][\"PositionName\"]\r\n                : \"\",\r\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\r\n            };\r\n\r\n            // Use set function to update state\r\n            setRowData((prevData) => [...prevData, temp]);\r\n          });\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const calculateUpcomingBirthdays = () => {\r\n    const today = new Date();\r\n    const upcomingBirthdaysData = rowData.filter((employee) => {\r\n      const dob = new Date(employee.DOB);\r\n      dob.setFullYear(today.getFullYear());\r\n\r\n      // Check if the upcoming birthday is within the next 7 days\r\n      const timeDiff = dob - today;\r\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n      return daysDiff >= 0 && daysDiff <= 7;\r\n    });\r\n\r\n    setUpcomingBirthdays(upcomingBirthdaysData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateUpcomingBirthdays();\r\n  }, [rowData]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"birthday shadow position-relative\">\r\n        <h5\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"0\",\r\n            backgroundColor: \"var(--primaryDashColorDark)\",\r\n            color: \"var(--primaryDashMenuColor)\"\r\n          }}\r\n          className=\"fw-bolder pb-3 px-3 pt-3 d-flex justify-content-between gap-0 text-center\"\r\n        >\r\n          <GiPartyPopper /> Upcoming Birthdays{\" \"}\r\n          <span className=\"text-primary\">({upcomingBirthdays.length})</span>\r\n        </h5>\r\n        <div>\r\n          {upcomingBirthdays.length > 0 ? (\r\n            <div className=\"d-flex flex-column gap-3 py-3 px-3\">\r\n              {upcomingBirthdays.map((employee) => (\r\n                <div\r\n                  style={{ borderBottom: \"1px solid #E3F4F4\" }}\r\n                  className=\"\"\r\n                  key={employee.empID}\r\n                >\r\n                  <div className=\"row\" style={{ verticalAlign: \"middle\" }}>\r\n                    <div className=\"d-flex justify-content-between \">\r\n                      <div className=\"d-flex gap-2\">\r\n                        <div style={{ height: \"45px\", width: \"45px\" }}>\r\n                          <img\r\n                            style={{\r\n                              height: \"100%\",\r\n                              width: \"100%\",\r\n                              border: \"3px solid gray\",\r\n                              borderRadius: \"50%\",\r\n                              overflow: \"hidden\",\r\n                              objectFit: \"cover\"\r\n                            }}\r\n                            src={\r\n                              employee?.data?.profile?.image_url\r\n                                ? employee?.data?.profile?.image_url\r\n                                : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\r\n                            }\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"d-flex flex-column my-auto\">\r\n                          <span\r\n                            style={{ fontSize: \"12px\", fontWeight: \"bold\" }}\r\n                          >\r\n                            {employee.empID}\r\n                          </span>\r\n                          <span\r\n                            style={{ fontSize: \"13px\", fontWeight: \"bold\" }}\r\n                            className=\"text-uppercase fw-bold\"\r\n                          >{`${employee.FirstName} ${employee.LastName}`}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        style={{ fontSize: \"13px\" }}\r\n                        className=\"my-auto fw-bolder text-muted\"\r\n                      >\r\n                        Date <br />\r\n                        {employee.DOB}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"d-flex flex-column justify-content-center aline-items-center gap-3\"\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n            >\r\n              <img\r\n                style={{ height: \"60%\", width: \"60%\" }}\r\n                className=\"mx-auto\"\r\n                src={HappyBirthday}\r\n                alt=\"Happy Birthday\"\r\n              />\r\n              <p\r\n                style={{ opacity: \"60%\", fontSize: \"13px\" }}\r\n                className=\"text-center w-75 mx-auto  fw-bold text-muted \"\r\n              >\r\n                No upcoming birthdays in the next 7 days.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpcomingBirthdays;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\EmpDash.jsx",["922","923","924","925","926","927","928","929","930"],"import React, { useState } from \"react\";\r\nimport \"../../HrManager/DashboardHR.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LeaveApplicationEmpTable from \"../EmpLeave/LeaveApplicationEmp\";\r\nimport HolidayList from \"../../../Pages/LeaveCalendar/HolidayList\";\r\nimport UpcomingBirthdays from \"./CountData/UpcomingBirthdays\";\r\nimport EmpTaskChart from \"./EmpChart.jsx/EmpTaskChart\";\r\nimport EmpTaskCount from \"./CountData/EmpTaskCount\";\r\n// import DepartmentChart from \"./EmpChart.jsx/DepartmentChart\";\r\nimport DepartmentChart from \"./EmpChart.jsx/DepartmentChart\";\r\nimport Chart from \"react-apexcharts\";\r\nimport NoticeBoard from \"../Notification/NoticeBoard\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport EmpProfile from \"./CountData/EmpProfile\";\r\n\r\nconst EmpDash = (props) => {\r\n  const [totalEmployeeLeave, setTotalEmployeeLeave] = useState(0);\r\n\r\n  // Update total leave count when LeaveApplicationEmpTable component notifies\r\n  const updateTotalEmployeeLeave = (count) => {\r\n    setTotalEmployeeLeave(count);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row gap-0 mx-0\">\r\n      <div className=\"col-lg-9 mt-5\">\r\n        <div className=\"row row_flex \">\r\n          <div className=\"col-lg-12\">\r\n            {\" \"}\r\n            <EmpTaskChart />\r\n          </div>\r\n          <div className=\"col-lg-6\"> {/* <EmpProfile /> */}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-3\">\r\n        <UpcomingBirthdays />\r\n        <NoticeBoard />\r\n        <div className=\"holiday mt-3\">\r\n          <HolidayList />\r\n        </div>\r\n        <div className=\"col-md-9\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpDash;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\EmpChart.jsx\\DepartmentChart.jsx",["931","932","933","934","935","936"],"import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./chart.css\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst DepartmentChart = (props) => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const [chartOption, setChartOption] = useState({\r\n    options: {\r\n      labels: [],\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    series: []\r\n  });\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee/` + localStorage.getItem(\"_id\"), {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map((data) =>\r\n              data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadPersonalInfoData();\r\n  // }, [props.data]);\r\n\r\n  const updateChartOptions = () => {\r\n    const departmentCounts = {};\r\n    departmentData.forEach((department) => {\r\n      departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n    });\r\n\r\n    const labels = Object.keys(departmentCounts);\r\n    const series = labels.map((label) => departmentCounts[label]);\r\n\r\n    setChartOption({\r\n      options: {\r\n        labels: labels,\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  show: true\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: series\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateChartOptions();\r\n  }, [departmentData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ChartCard shadow-sm \">\r\n        <div className=\"ChartHeader\">\r\n          <h5 className=\"fw-bolder d-flex gap-3\">Employee By Department</h5>\r\n        </div>\r\n        <Chart\r\n          options={chartOption.options}\r\n          series={chartOption.series}\r\n          type=\"donut\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepartmentChart;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\attendance\\AttendanceList.jsx",["937","938","939","940"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst AttendanceDetails = (props) => {\r\n  // const [employeeId, setEmployeeId] = useState(\"\");\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n  const employeeId = localStorage.getItem(\"_id\");\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/employee/` + props.data[\"_id\"],\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      );\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  // const handleFetchAttendance = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `${BASE_URL}/api/attendance/${employeeId}`,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n  //         }\r\n  //       }\r\n  //     );\r\n  //     let singleUser = response.data.filter((val) => {\r\n  //       return val.employeeObjID._id === employeeId;\r\n  //     });\r\n  //     setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching attendance data:\", error);\r\n  //   }\r\n  // };\r\n\r\n  const handleFetchAttendance = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n          }\r\n        }\r\n      );\r\n\r\n      let singleUser = response.data.filter((val) => {\r\n        return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n      });\r\n\r\n      setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleFetchAttendance();\r\n  }, []);\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {/* <div className=\"d-flex gap-3 \">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  🪪 ({employee.empID}) {employee.FirstName}-{employee.LastName}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          Fetch Attendance\r\n        </button>\r\n      </div> */}\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">\r\n                <th className=\"bg-dark text-white text-center\">Date</th>\r\n                <th className=\"bg-dark text-white text-center\">Status</th>\r\n                <th className=\"bg-dark text-white\">Login Time</th>\r\n                <th className=\"bg-dark text-white\">Logout Time</th>\r\n                <th className=\"bg-dark text-white\">Break</th>\r\n                <th className=\"bg-dark text-white\">Total Login</th>\r\n                <th className=\"bg-dark text-white\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`} // Assign unique ID to each row\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <span className=\"fw-bold bg-info py-1 px-2  shadow-sm text-white\">\r\n                              {date.date}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"center\" }}\r\n                          >\r\n                            {getAttendanceMark(date)}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ scale: \"0.7\" }}\r\n                                className=\"bg-warning py-0  text-white  px-2 rounded-5 my-auto\"\r\n                              >\r\n                                {date.breakTime.length}\r\n                              </span>\r\n                              <span className=\"fw-bold text-dark fs-6\">\r\n                                {millisecondsToTime(date.totalBrake)}\r\n                              </span>{\" \"}\r\n                              <FaCircleInfo\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"text-info \"\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{ zIndex: \"5\", right: \"0%\" }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering &&\r\n                                hoveredDate === date.date && ( // Check if info button is hovered and the date is the hovered date\r\n                                  <table className=\"table table-bordered table-striped\">\r\n                                    <thead>\r\n                                      <tr className=\"shadow-sm p-0\">\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Break\r\n                                        </th>\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Resume\r\n                                        </th>\r\n                                        <th\r\n                                          className=\"text-end  py-0 bg-info text-white\"\r\n                                          style={{ whiteSpace: \"pre\" }}\r\n                                        >\r\n                                          Total Break\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {date.breakTime.map(\r\n                                        (breakTime, index) => (\r\n                                          <tr className=\"shadow-sm\" key={index}>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {breakTime}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {date.ResumeTime[index]}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-end py-1 \"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {millisecondsToTime(\r\n                                                date.BreakData[index]\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                )}\r\n                            </div>\r\n                          </td>\r\n                          <td>{millisecondsToTime(date.totalLogAfterBreak)}</td>\r\n                          <td>{date.status}</td>\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDetails;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\attendance\\SelfAttendance.jsx",["941","942","943","944","945","946","947","948","949"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst AttendanceDetails = (props) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n  const employeeId = localStorage.getItem(\"_id\");\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/employee/` + props.data[\"_id\"],\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      );\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFetchAttendance = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n          }\r\n        }\r\n      );\r\n\r\n      let singleUser = response.data.filter((val) => {\r\n        return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n      });\r\n\r\n      setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchAttendance();\r\n  }, [selectedYear, selectedMonth]); // Add dependencies to re-fetch attendance when year or month changes\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  const calculateMonthlyTotals = () => {\r\n    if (!attendanceData) return null;\r\n\r\n    const monthlyData = attendanceData.years\r\n      .find((yearData) => yearData.year === selectedYear)\r\n      ?.months.find((month) => month.month === selectedMonth);\r\n\r\n    if (monthlyData) {\r\n      const totalWorkingHours = monthlyData.dates.reduce(\r\n        (acc, date) => acc + date.totalLogAfterBreak,\r\n        0\r\n      );\r\n\r\n      const totalPresent = monthlyData.dates.filter(\r\n        (date) => getAttendanceMark(date) === \"P\"\r\n      ).length;\r\n\r\n      const totalAbsent = monthlyData.dates.filter(\r\n        (date) => getAttendanceMark(date) === \"A\"\r\n      ).length;\r\n\r\n      const totalHalfDays = monthlyData.dates.filter(\r\n        (date) => getAttendanceMark(date) === \"H\"\r\n      ).length;\r\n\r\n      return {\r\n        totalWorkingHours,\r\n        totalPresent,\r\n        totalAbsent,\r\n        totalHalfDays\r\n      };\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const monthlyTotals = calculateMonthlyTotals();\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && monthlyTotals && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <div className=\"mt-4\">\r\n            <h5>Monthly Totals</h5>\r\n            <p>\r\n              Total Working Hours:{\" \"}\r\n              {millisecondsToTime(monthlyTotals.totalWorkingHours)}\r\n            </p>\r\n            <p>Total Present: {monthlyTotals.totalPresent}</p>\r\n            <p>Total Absent: {monthlyTotals.totalAbsent}</p>\r\n            <p>Total Half-Days: {monthlyTotals.totalHalfDays}</p>\r\n          </div>\r\n\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">{/* ... (unchanged) */}</tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`}\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          {/* ... (unchanged) */}\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDetails;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { TfiReload } from \"react-icons/tfi\";\r\n// import { FaCircleInfo } from \"react-icons/fa6\";\r\n\r\n// const AttendanceDetails = (props) => {\r\n//   const [employees, setEmployees] = useState([]);\r\n//   const [attendanceData, setAttendanceData] = useState(null);\r\n//   const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n//   const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n\r\n//   const [hoveredDate, setHoveredDate] = useState(null);\r\n//   const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n//   const [presentCount, setPresentCount] = useState(0);\r\n//   const [absentCount, setAbsentCount] = useState(0);\r\n//   const [halfDayCount, setHalfDayCount] = useState(0);\r\n//   const [totalPresentTime, setTotalPresentTime] = useState(0);\r\n//   const [totalAbsentTime, setTotalAbsentTime] = useState(0);\r\n//   const [totalHalfDayTime, setTotalHalfDayTime] = useState(0);\r\n\r\n//   const employeeId = localStorage.getItem(\"_id\");\r\n\r\n//   const handleMouseEnter = (date) => {\r\n//     setHoveredDate(date);\r\n//   };\r\n\r\n//   const handleMouseLeave = () => {\r\n//     setHoveredDate(null);\r\n//   };\r\n\r\n//   const handleInfoMouseEnter = () => {\r\n//     setIsInfoHovering(true);\r\n//   };\r\n\r\n//   const handleInfoMouseLeave = () => {\r\n//     setIsInfoHovering(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchEmployees();\r\n//   }, []);\r\n\r\n//   const fetchEmployees = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         \"${BASE_URL}/api/employee/\" + props.data[\"_id\"],\r\n//         {\r\n//           headers: {\r\n//             authorization: localStorage.getItem(\"token\") || \"\"\r\n//           }\r\n//         }\r\n//       );\r\n//       setEmployees(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching employees:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFetchAttendance = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `${BASE_URL}/api/attendance/${employeeId}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n//           }\r\n//         }\r\n//       );\r\n\r\n//       let singleUser = response.data.filter((val) => {\r\n//         return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n//       });\r\n\r\n//       setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching attendance data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     handleFetchAttendance();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (attendanceData) {\r\n//       let presentCount = 0;\r\n//       let absentCount = 0;\r\n//       let halfDayCount = 0;\r\n//       let totalPresentTime = 0;\r\n//       let totalAbsentTime = 0;\r\n//       let totalHalfDayTime = 0;\r\n\r\n//       attendanceData.years.forEach((year) => {\r\n//         year.months.forEach((month) => {\r\n//           month.dates.forEach((date) => {\r\n//             const attendanceMark = getAttendanceMark(date);\r\n\r\n//             if (attendanceMark === \"P\") {\r\n//               presentCount++;\r\n//               totalPresentTime += date.totalLogAfterBreak;\r\n//             } else if (attendanceMark === \"A\") {\r\n//               absentCount++;\r\n//               totalAbsentTime += date.totalLogAfterBreak;\r\n//             } else if (attendanceMark === \"H\" || attendanceMark === \"L\") {\r\n//               halfDayCount++;\r\n//               totalHalfDayTime += date.totalLogAfterBreak;\r\n//             }\r\n//           });\r\n//         });\r\n//       });\r\n\r\n//       setPresentCount(presentCount);\r\n//       setAbsentCount(absentCount);\r\n//       setHalfDayCount(halfDayCount);\r\n//       setTotalPresentTime(totalPresentTime);\r\n//       setTotalAbsentTime(totalAbsentTime);\r\n//       setTotalHalfDayTime(totalHalfDayTime);\r\n//     }\r\n//   }, [attendanceData]);\r\n\r\n//   const getAttendanceMark = (date) => {\r\n//     const loginTime = date && date.loginTime[0];\r\n//     if (loginTime) {\r\n//       const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n//       if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n//         return \"H\";\r\n//       } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n//         return \"L\";\r\n//       }\r\n//     }\r\n//     return loginTime ? \"P\" : \"A\";\r\n//   };\r\n//   const millisecondsToTime = (milliseconds) => {\r\n//     const millisecond = Math.floor(milliseconds);\r\n//     const seconds = Math.floor(milliseconds / 1000);\r\n//     const minutes = Math.floor(seconds / 60);\r\n//     const hours = Math.floor(minutes / 60);\r\n\r\n//     const formattedHours = String(hours).padStart(2, \"0\");\r\n//     const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n//     const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n//     const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n//     return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n//   };\r\n//   // ... (existing code)\r\n\r\n//   return (\r\n//     <div className=\"d-flex flex-column p-5 gap-3\">\r\n//       {attendanceData && (\r\n//         <div>\r\n//           <div>\r\n//             <h3>Attendance Summary:</h3>\r\n//             <p>Present Count: {presentCount}</p>\r\n//             <p>Absent Count: {absentCount}</p>\r\n//             <p>Half-Day Count: {halfDayCount}</p>\r\n//             <p>Total Present Time: {millisecondsToTime(totalPresentTime)}</p>\r\n//             <p>Total Absent Time: {millisecondsToTime(totalAbsentTime)}</p>\r\n//             <p>Total Half-Day Time: {millisecondsToTime(totalHalfDayTime)}</p>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {attendanceData && (\r\n//         <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n//           {/* ... (existing code) */}\r\n//         </div>\r\n//       )}\r\n\r\n//       {attendanceData === null && <div>{/* ... (existing code) */}</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AttendanceDetails;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmployeeTaskManagement\\EmployeeRejectTask.jsx",["950"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmployeeTaskManagement\\EmployeeCompleteTask.jsx",["951"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\attendance\\Attendance.jsx",["952","953","954","955","956"],"import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\nimport InnerDashContainer from \"../../InnerDashContainer\";\nimport Moment from \"moment\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nfunction SetLog(props) {\n  const [empName, setEmpName] = useState(null);\n\n  const {\n    employees,\n    setEmployees,\n    selectedEmployee,\n    setSelectedEmployee,\n    attencenceID,\n    setAttencenceID,\n    message,\n    setMessage\n  } = useContext(AttendanceContext);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/api/employee/` + props.data[\"_id\"],\n          {\n            headers: {\n              authorization: localStorage.getItem(\"token\") || \"\"\n            }\n          }\n        );\n        console.log(response.data);\n        setEmployees(response.data);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  // hello\n\n  useEffect(() => {\n    const loadPersonalInfoData = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/api/personal-info/` + props.data[\"_id\"],\n          {\n            headers: {\n              authorization: localStorage.getItem(\"token\") || \"\"\n            }\n          }\n        );\n        console.log(response.data.FirstName);\n        setEmpName(response.data.FirstName);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n\n    loadPersonalInfoData();\n  }, []);\n\n  // hello\n  const handleUserChange = (employeeID) => {\n    const selectedEmployee = employees.find(\n      (employee) => employee._id === employeeID\n    );\n\n    if (selectedEmployee) {\n      setAttencenceID(selectedEmployee.attendanceObjID);\n      setSelectedEmployee(employeeID);\n      getMessage(employeeID);\n    }\n  };\n\n  const getMessage = async (employeeID) => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/api/attendance/${employeeID}`\n      );\n      const lastEntry = response.data[response.data.length - 1];\n\n      if (lastEntry) {\n        setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\n      } else {\n        setMessage(\"\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching attendance data:\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    let data = employees.filter((val) => {\n      return val.FirstName === empName;\n    });\n    let attencenceID = data[0].attendanceObjID;\n    let selectedEmployee = data[0]._id;\n\n    try {\n      if (!empName) {\n        setMessage(\"Please select a user\");\n        return;\n      }\n\n      const currentTime = Moment().format(\"HH:mm:ss\");\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n        employeeId: selectedEmployee,\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        date: new Date().getDate(),\n        loginTime: [currentTime],\n        status: \"login\"\n      });\n      setMessage(\"Login time recorded successfully\");\n    } catch (error) {\n      console.error(\"Error recording login time:\", error);\n      setMessage(\"Error recording login time\");\n    }\n  };\n\n  const handleLogout = async () => {\n    let data = employees.filter((val) => {\n      return val.FirstName === empName;\n    });\n    let attencenceID = data[0].attendanceObjID;\n    let selectedEmployee = data[0]._id;\n    try {\n      if (!empName) {\n        setMessage(\"Please select an employee\");\n        return;\n      }\n\n      const currentTime = Moment().format(\"HH:mm:ss\");\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n        employeeId: selectedEmployee,\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        date: new Date().getDate(),\n        logoutTime: [currentTime],\n        status: \"logout\"\n      });\n      setMessage(\"Logout time recorded successfully\");\n    } catch (error) {\n      console.error(\"Error recording logout time:\", error);\n      setMessage(\"Error recording logout time\");\n    }\n  };\n\n  const handleResume = async () => {\n    let data = employees.filter((val) => {\n      return val.FirstName === empName;\n    });\n    let attencenceID = data[0].attendanceObjID;\n    let selectedEmployee = data[0]._id;\n    try {\n      if (!empName) {\n        setMessage(\"Please select an employee\");\n        return;\n      }\n\n      const currentTime = new Date().toLocaleTimeString();\n      const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\n\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n        employeeId: selectedEmployee,\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        date: new Date().getDate(),\n        ResumeTime: [currentTime],\n        resumeTimeMS: [currentTimeMs],\n        status: \"resume\"\n      });\n\n      setMessage(\"Resumed time recorded successfully\");\n    } catch (error) {\n      console.error(\"Error recording resume time:\", error);\n      setMessage(\"Error recording resume time\");\n    }\n  };\n\n  const handleBreak = async () => {\n    let data = employees.filter((val) => {\n      return val.FirstName === empName;\n    });\n    let attencenceID = data[0].attendanceObjID;\n    let selectedEmployee = data[0]._id;\n    try {\n      if (!empName) {\n        setMessage(\"Please select an employee\");\n        return;\n      }\n\n      const currentTime = new Date().toLocaleTimeString();\n      const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\n\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n        employeeId: selectedEmployee,\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        date: new Date().getDate(),\n        breakTime: [currentTime],\n        breakTimeMs: [currentTimeMs],\n        status: \"break\"\n      });\n      setMessage(\"Break time recorded successfully\");\n    } catch (error) {\n      console.error(\"Error recording break time:\", error);\n      setMessage(\"Error recording break time\");\n    }\n  };\n\n  console.log(employees);\n\n  return (\n    <InnerDashContainer>\n      <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\n      <div\n        className=\"form-control d-flex  gap-3 p-3 m-3\"\n        style={{ height: \"fit-content\" }}\n      >\n        <input value={empName} style={{ display: \"none\" }} />\n\n        <div className=\"d-flex gap-3\">\n          <button className=\"btn btn-success\" onClick={handleLogin}>\n            Mark Attendance\n          </button>\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\n            Logout\n          </button>\n          <div className=\"d-flex gap-3\">\n            <button className=\"btn btn-warning\" onClick={handleBreak}>\n              Break\n            </button>\n            <button className=\"btn btn-primary\" onClick={handleResume}>\n              Resume\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {message && <p>{message}</p>}\n    </InnerDashContainer>\n  );\n}\n\nexport default SetLog;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmployeeTaskManagement\\EmployeeActiveTask.jsx",["957","958","959","960","961","962","963","964","965"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmployeeTaskManagement\\EmployeeNewTask.jsx",["966","967","968","969","970","971"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpLeave\\LeaveApplicationEmp.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminProjectBidFormEdit.jsx",["972","973","974","975","976","977","978","979","980"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminProjectBidFormEdit.css\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass AdminProjectBidFormEdit extends Component {\n  state = {\n    status: \"\",\n    portalsInfo: [],\n    ProjectTitleData: this.props.editData[\"ProjectTitle\"],\n    ProjectURLData: this.props.editData[\"ProjectURL\"],\n    ProjectDescriptionData: this.props.editData[\"ProjectDesc\"],\n    EstimatedTimeData: this.props.editData[\"EstimatedTime\"],\n\n    RemarkData: this.props.editData[\"Remark\"]\n  };\n  onProjectTitleDataChange(e) {\n    this.setState({ ProjectTitleData: e.target.value });\n  }\n  onProjectURLDataChange(e) {\n    this.setState({ ProjectURLData: e.target.value });\n  }\n  onProjectDescriptionDataChange(e) {\n    this.setState({ ProjectDescriptionData: e.target.value });\n  }\n  onPortalsDataChange(e) {\n    this.setState({ PortalsData: e.target.value });\n  }\n  onEstimatedTimeDataChange(e) {\n    this.setState({ EstimatedTimeData: e.target.value });\n  }\n  onEstimatedCostDataChange(e) {\n    this.setState({ EstimatedCostData: e.target.value });\n  }\n  onResourceDataChange(e) {\n    this.setState({ ResourceData: e.target.value });\n  }\n  onStatusDataChange(e) {\n    this.setState({ StatusData: e.target.value });\n  }\n  onRemarkDataChange(e) {\n    this.setState({ RemarkData: e.target.value });\n  }\n\n  portalsData = [];\n  handleChange = (event) => {\n    this.setState({\n      status: event.target.value\n    });\n  };\n  loadPortalsInfo = () => {\n    axios\n      .get(\"http://localhost:4000/api/admin/portal\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.portalsData = response.data;\n\n        this.portalsData = this.portalsData.filter(\n          (data) => data[\"Status\"] == 1\n        );\n\n        this.setState({ portalsInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    this.loadPortalsInfo();\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h2 id=\"role-form-title\">Edit Project Bid Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onProjectBidEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project Title\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Project Title\"\n                  name=\"ProjectTitle\"\n                  required\n                  value={this.state.ProjectTitleData}\n                  onChange={(value) => this.onProjectTitleDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project URL\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Project URL\"\n                  name=\"ProjectURL\"\n                  required\n                  value={this.state.ProjectURLData}\n                  onChange={(value) => this.onProjectURLDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project Description\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                  value={this.state.ProjectDescriptionData}\n                  onChange={(value) =>\n                    this.onProjectDescriptionDataChange(value)\n                  }\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Portals\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"CompanyID\" required>\n                  {this.portalsData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"portals\"][0][\"ID\"] == data[\"ID\"]\n                      }\n                    >\n                      {data[\"PortalName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Estimated Time\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Estimated Time\"\n                  name=\"EstimatedTime\"\n                  required\n                  value={this.state.EstimatedTimeData}\n                  onChange={(value) => this.onEstimatedTimeDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Estimated Cost\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Estimated Cost\"\n                  name=\"EstimatedCost\"\n                  required\n                  value={this.state.EstimatedCostData}\n                  onChange={(value) => this.onEstimatedCostDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Resource\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option\n                    value=\"1\"\n                    selected={this.props.editData[\"ResourceID\"] == 1}\n                  >\n                    Resource1\n                  </option>\n                  <option\n                    value=\"2\"\n                    selected={this.props.editData[\"ResourceID\"] == 2}\n                  >\n                    Resource2\n                  </option>\n                  <option\n                    value=\"3\"\n                    selected={this.props.editData[\"ResourceID\"] == 3}\n                  >\n                    Resource3\n                  </option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Status\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option\n                    value=\"1\"\n                    selected={this.props.editData[\"Status\"] == 1}\n                  >\n                    Open\n                  </option>\n                  <option\n                    value=\"2\"\n                    selected={this.props.editData[\"Status\"] == 2}\n                  >\n                    Close\n                  </option>\n                  <option\n                    value=\"3\"\n                    selected={this.props.editData[\"Status\"] == 3}\n                  >\n                    Cancel\n                  </option>\n                  <option\n                    value=\"4\"\n                    selected={this.props.editData[\"Status\"] == 4}\n                  >\n                    Award\n                  </option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Remark\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                  value={this.state.RemarkData}\n                  onChange={(value) => this.onRemarkDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n        {/* </div>\n        </div> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AdminProjectBidFormEdit;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminProjectBidTable.jsx",["981"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminProjectBidTable.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass AdminProjectBidTable extends Component {\n  state = {\n    projectBidData: [],\n    loading: true,\n    rowData: [],\n    sortColumn: null,\n    sortDirection: \"asc\",\n    error: null // New state for handling errors\n  };\n  loadProjectBidData = () => {\n    axios\n      .get(\"http://localhost:4000/api/admin/project-bid\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const projectBidData = response.data;\n        this.setState({ projectBidData, loading: false, error: null });\n\n        const rowData = projectBidData.map((data) => ({\n          data,\n          ProjectTitle: data[\"ProjectTitle\"],\n          PortalName: data[\"portals\"][0][\"PortalName\"],\n          ProjectURL: data[\"ProjectURL\"],\n          EstimatedTime: data[\"EstimatedTime\"],\n          EstimatedCost: data[\"EstimatedCost\"],\n          Remark: data[\"Remark\"]\n        }));\n\n        this.setState({ rowData });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ loading: false, error: \"Error loading data.\" });\n      });\n  };\n\n  onProjectBidDelete = (e) => {\n    console.log(e);\n    if (window.confirm(\"Are you sure to delete this record? \") == true) {\n      axios\n        .delete(\"http://localhost:4000/api/admin/project-bid/\" + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  componentDidMount() {\n    this.loadProjectBidData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onProjectBidDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditProjectBid(params.data.data)}\n      />\n    );\n  }\n\n  renderSortIcon = (field) => {\n    const { sortColumn, sortDirection } = this.state;\n    if (sortColumn === field) {\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\n    }\n    return null;\n  };\n\n  sortData = (columnName) => {\n    const { rowData, sortColumn, sortDirection } = this.state;\n    let newSortDirection = \"asc\";\n\n    if (sortColumn === columnName && sortDirection === \"asc\") {\n      newSortDirection = \"desc\";\n    }\n\n    const sortedData = [...rowData];\n\n    sortedData.sort((a, b) => {\n      const valueA = String(a[columnName]).toLowerCase(); // Convert to lowercase string\n      const valueB = String(b[columnName]).toLowerCase(); // Convert to lowercase string\n\n      let comparison = 0;\n\n      if (valueA > valueB) {\n        comparison = 1;\n      } else if (valueA < valueB) {\n        comparison = -1;\n      }\n\n      return sortDirection === \"desc\" ? comparison * -1 : comparison;\n    });\n\n    this.setState({\n      rowData: sortedData,\n      sortColumn: columnName,\n      sortDirection: newSortDirection\n    });\n  };\n  render() {\n    return (\n      <div className=\"p-4\" id=\"table-outer-div-scroll\">\n        <div className=\"d-flex justify-between aline-items-start mb-3\">\n          <div className=\" my-auto\">\n            <h3 className=\"fw-bold text-muted\">Bidding Details</h3>\n            <p className=\"text-muted\">\n              You can create new bid and view all Bidding details of the\n              companies here !\n            </p>\n          </div>\n\n          <Button\n            className=\"my-auto\"\n            variant=\"primary\"\n            id=\"add-button\"\n            onClick={this.props.onAddProjectBid}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Add new Details\n          </Button>\n        </div>\n\n        <div id=\"clear-both\" />\n\n        {!this.state.loading ? (\n          <div>\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"ProjectTitle\")}\n                  >\n                    Project Title {this.renderSortIcon(\"ProjectTitle\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"PortalName\")}\n                  >\n                    Portal {this.renderSortIcon(\"PortalName\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"ProjectURL\")}\n                  >\n                    Project URL {this.renderSortIcon(\"ProjectURL\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"EstimatedTime\")}\n                  >\n                    Estimate Time {this.renderSortIcon(\"EstimatedTime\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"EstimatedCost\")}\n                  >\n                    Estimate Cost {this.renderSortIcon(\"EstimatedCost\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"Remark\")}\n                  >\n                    Remark {this.renderSortIcon(\"Remark\")}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.projectBidData.map((items, index) => (\n                  <tr key={index}>\n                    <td className=\"text-uppercase\">{items.ProjectTitle}</td>\n                    <td>{items.portals[0].PortalName}</td>\n                    <td>\n                      <a href={items.ProjectURL}>{items.ProjectURL}</a>\n                    </td>\n                    <td>{items.EstimatedTime}</td>\n                    <td>{items.EstimatedCost}</td>\n                    <td>{items.Remark}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AdminProjectBidTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminProjectBidForm.jsx",["982"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminProjectBidForm.css\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass AdminProjectBidForm extends Component {\n  state = {\n    status: \"\",\n    portalsInfo: []\n  };\n  portalsData = [];\n  handleChange = (event) => {\n    this.setState({\n      status: event.target.value\n    });\n  };\n  loadPortalsInfo = () => {\n    axios\n      .get(\"http://localhost:4000/api/admin/portal\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // i\n        this.portalsData = response.data;\n\n        this.portalsData = this.portalsData.filter(\n          (data) => data[\"Status\"] == 1\n        );\n\n        this.setState({ portalsInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    this.loadPortalsInfo();\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h2 id=\"role-form-title\">Add Project Bid Details</h2>\n        {/* <div id=\"role-form-outer-div\">\n          <div id=\"role-form-inner-div\"> */}\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onProjectBidSubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project Title\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Project Title\"\n                  name=\"ProjectTitle\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project URL\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Project URL\"\n                  name=\"ProjectURL\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project Description\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"textarea\" rows=\"3\" required />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Portals\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"CompanyID\" required>\n                  {this.portalsData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"PortalName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Estimated Time\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Estimated Time\"\n                  name=\"EstimatedTime\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Estimated Cost\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Estimated Cost\"\n                  name=\"EstimatedCost\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Resource\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option value=\"1\">Resource1</option>\n                  <option value=\"2\">Resource2</option>\n                  <option value=\"3\">Resource3</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Status\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option value=\"1\">Open</option>\n                  <option value=\"1\">Close</option>\n                  <option value=\"1\">Cancel</option>\n                  <option value=\"1\">Award</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Remark\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"textarea\" rows=\"3\" required />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AdminProjectBidForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminPortalFormEdit.jsx",["983","984"],"import React, { Component } from \"react\";\n// import \"./AdminPortalForm.css\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form,Button,Col,Row } from \"react-bootstrap\";\n\nclass AdminPortalForm extends Component {\n  state = {\n    PortalData: this.props.editData[\"PortalName\"],\n    Status:this.props.editData[\"Status\"]\n  };\n  onChange(e) {\n    this.setState({ PortalData: e.target.value });\n  }\n  onStatusChange=(e)=>{\n    this.setState({ Status: e.target.value });\n    this.props.onStatusChange(e)\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Portal Details</h2>\n     \n         <div id=\"role-form-outer-div\"><Form id=\"form\"  onSubmit={e =>\n                this.props.onPortalEditUpdate(\n                  this.props.editData,\n                  e.target[0].value\n                )\n              }>\n \n  <Form.Group as={Row}>\n    <Form.Label column sm={2}>\n    Portal\n    </Form.Label>\n    <Col sm={10}  className=\"form-input\">\n      <Form.Control type=\"Text\" placeholder=\"Portal\" name=\"PortalName\" required \n      value={this.state.PortalData}\n                  onChange={value => this.onChange(value)}/>\n    </Col>\n  </Form.Group>\n \n  <Form.Group as={Row}>\n      <Form.Label as=\"legend\" column sm={2}>\n        Status\n      </Form.Label>\n      <Col sm={10}>\n        <Form.Check\n        inline\n          type=\"radio\"\n          label=\"enable\"\n          value=\"1\"\n          name=\"status\"    \n        \n        onChange={this.onStatusChange}   \n        required\n        checked={this.state.Status==1}\n        />\n        <Form.Check\n        inline\n          type=\"radio\"\n          label=\"disable\"\n          value=\"0\"\n          name=\"status\" \n          onChange={this.onStatusChange}  \n          required      \n          checked={this.state.Status==0}\n        />\n      </Col>\n    </Form.Group>\n\n  <Form.Group as={Row} id=\"form-submit-button\">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Button type=\"submit\">Update</Button>\n    </Col>\n  </Form.Group>\n  <Form.Group as={Row} id=\"form-cancel-button\">\n    <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n      <Button type=\"reset\" onClick={this.props.onFormEditClose}>cancel</Button>\n    </Col>\n  </Form.Group>\n</Form></div>\n      </div>\n    );\n  }\n}\n\nexport default AdminPortalForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpPresonal\\PersonalInfo.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpEducation\\Education.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpWorkExp\\WorkExperience.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpFamily\\FamilyInfo.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ApplyLeave\\LeaveApplicationFormEdit.jsx",["985"],"import React, { useState } from \"react\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n// import \"./LeaveApplicationEmp.css\";\n\nconst LeaveApplicationEmpForm = (props) => {\n  const [FromDateData, setFromDateData] = useState(\n    props.editData[\"FromDate\"].slice(0, 10)\n  );\n  const [ToDateData, setToDateData] = useState(\n    props.editData[\"ToDate\"].slice(0, 10)\n  );\n  const [ReasonforleaveData, setReasonforleaveData] = useState(\n    props.editData[\"Reasonforleave\"]\n  );\n\n  const onFromDateDataChange = (e) => {\n    setFromDateData(e.target.value);\n  };\n\n  const onToDateDataChange = (e) => {\n    setToDateData(e.target.value);\n  };\n\n  const onReasonforleaveDataChange = (e) => {\n    setReasonforleaveData(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Edit LeaveApplicationEmp Details</h2>\n\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) =>\n            props.onLeaveApplicationEmpEditUpdate(props.editData, e)\n          }\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Leave Type\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control as=\"select\" required>\n                <option value=\"\" disabled selected>\n                  Select your option\n                </option>\n                <option\n                  value=\"Sick Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Sick Leave\"}\n                >\n                  Sick Leave\n                </option>\n                <option\n                  value=\"Casual Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Casual Leave\"}\n                >\n                  Casual Leave\n                </option>\n                <option\n                  value=\"Privilege Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Privilege Leave\"}\n                >\n                  Privilege Leave\n                </option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              FromDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"date\"\n                required\n                value={FromDateData}\n                onChange={(e) => onFromDateDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              ToDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"date\"\n                required\n                value={ToDateData}\n                onChange={(e) => onToDateDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Reason for leave\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Reason for leave\"\n                required\n                value={ReasonforleaveData}\n                onChange={(e) => onReasonforleaveDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Leave Status\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control as=\"select\" required>\n                <option value=\"1\" selected disabled>\n                  Pending\n                </option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Update</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormEditClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default LeaveApplicationEmpForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ApplyLeave\\LeaveApplicationTable.jsx",["986","987","988","989","990","991","992","993"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button, Table } from \"react-bootstrap\";\nimport InnerDashContainer from \"../../Component/InnerDashContainer\";\nimport BASE_URL from \"../config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst LeaveApplicationEmpTable = (props) => {\n  const [leaveApplicationEmpData, setLeaveApplicationEmpData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n  const userId = props.data && props.data._id;\n\n  const loadLeaveApplicationEmpData = () => {\n    axios\n      .get(\n        `${BASE_URL}/api/leave-application-emp/` + localStorage.getItem(\"_id\"),\n        {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        }\n      )\n      .then((response) => {\n        const leaveApplicationEmpObj = response.data;\n        console.log(\"response\", response.data);\n        setLeaveApplicationEmpData(response.data);\n        setLoading(false);\n\n        const newRowsData = leaveApplicationEmpObj.leaveApplication.map(\n          (data) => {\n            return {\n              data,\n              Leavetype: data[\"Leavetype\"],\n              FromDate: data[\"FromDate\"].slice(0, 10),\n              ToDate: data[\"ToDate\"].slice(0, 10),\n              Reasonforleave: data[\"Reasonforleave\"],\n              Status: data[\"Status\"]\n            };\n          }\n        );\n\n        setRowData(newRowsData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onLeaveApplicationEmpDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/leave-application-emp/${e1}/${e2}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadLeaveApplicationEmpData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const status = (s) => {\n    if (s == 1) {\n      return \"Pending\";\n    }\n    if (s == 2) {\n      return \"Approved\";\n    }\n    if (s == 3) {\n      return \"Rejected\";\n    }\n    return \"Unknown Status\";\n  };\n\n  const onEdit = (data) => {\n    if (data[\"Status\"] === 1) {\n      props.onEditLeaveApplicationEmp(data);\n    } else {\n      window.alert(\n        \"You cannot edit the application after it's approved or rejected\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadLeaveApplicationEmpData();\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex justify-content-between py-2\">\n        <h4 className=\"fw-bold my-auto\"> Leave Application</h4>\n        <Button\n          variant=\"primary\"\n          id=\"add-button\"\n          onClick={props.onAddLeaveApplicationEmp}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Apply Leave\n        </Button>\n      </div>\n\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div>\n          <Table className=\"table\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  Leave Type\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  Start Date\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  End Date\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  Remarks\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {rowData.map((data, index) => (\n                <tr key={index}>\n                  <td>{data.Leavetype}</td>\n                  <td>{data.FromDate}</td>\n                  <td>{data.ToDate}</td>\n                  <td>{data.Reasonforleave}</td>\n                  <td>{status(data.Status)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LeaveApplicationEmpTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CityFormEdit.jsx",["994","995","996","997","998","999"],"import React, { Component } from \"react\";\n// import \"./CityForm.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass CityForm extends Component {\n  state = {\n    CityData: this.props.editData[\"CityName\"],\n    stateData: [],\n    filteredStateData: [],\n    countryData: [],\n    filteredCountryData: []\n  };\n\n  onChange(e) {\n    this.setState({ CityData: e.target.value });\n  }\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ countryData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ stateData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n    let filteredState = this.state.stateData.filter(\n      (data) => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n\n  onSelectCountry = (e, data) => {\n    return this.props.editData[\"state\"][0][\"country\"][0][\"_id\"] == data[\"_id\"];\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit City Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onCityEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CountryName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"state\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"StateName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"City\"\n                  name=\"City\"\n                  required\n                  onChange={(value) => this.onChange(value)}\n                  value={this.state.CityData}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CityForm;\n// onChange={value => this.onChange(value)}\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\ApplyLeave\\LeaveApplicationForm.jsx",["1000","1001","1002","1003"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\n// import \"./LeaveApplicationEmpForm.css\";\nimport LeaveImg from \"./Leave.svg\";\nimport InnerDashContainer from \"../../Component/InnerDashContainer\";\nimport BASE_URL from \"../config/config\";\n\nconst LeaveApplicationEmpForm = (props) => {\n  const id = localStorage.getItem(\"_id\");\n  const [empData, setEmpData] = useState([]);\n  const loadEmployeeData = () => {\n    axios\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        console.log(response.data);\n        setEmpData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    loadEmployeeData();\n  }, []);\n  return (\n    <InnerDashContainer>\n      <div style={{ overflow: \"auto\" }} className=\"row\">\n        <div className=\"col-5\">\n          <img style={{ width: \"130%\" }} src={LeaveImg} alt=\"\" />\n        </div>\n        <div className=\"col-6\">\n          <form\n            className=\"text-white shadow bg-dark px-3 py-4 rounded row\"\n            onSubmit={props.onLeaveApplicationEmpSubmit}\n          >\n            <h4 className=\"fw-bolder text-white mb-5\">Create Leave Request</h4>\n\n            <div className=\"mb-3 col-12\">\n              <label htmlFor=\"leaveType\" className=\"form-label\">\n                Select Leave Type\n              </label>\n              <select\n                className=\"form-select\"\n                id=\"leaveType\"\n                name=\"leaveType\"\n                // value={formData.leaveType}\n                // onChange={handleInputChange}\n              >\n                <option value=\"\" disabled selected>\n                  -- Select --\n                </option>\n                <option value=\"Sick Leave\">Sick Leave</option>\n                <option value=\"Casual Leave\">Casual Leave</option>\n                <option value=\"Privilege Leave\">Privilege Leave</option>\n              </select>\n            </div>\n            <div className=\"mb-3 col-6\">\n              <label htmlFor=\"startDate\" className=\"form-label\">\n                Start Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"startDate\"\n                name=\"startDate\"\n                // value={formData.startDate}\n                // onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"mb-3 col-6\">\n              <label htmlFor=\"endDate\" className=\"form-label\">\n                End Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"endDate\"\n                name=\"endDate\"\n                // value={formData.endDate}\n                // onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"mb-3 col-12\">\n              <label htmlFor=\"leaveType\" className=\"form-label\">\n                Leave Status\n              </label>\n              <select\n                className=\"form-select\"\n                id=\"leaveStatus\"\n                name=\"leaveStatus\"\n              >\n                <option value=\"1\" selected>\n                  Pending\n                </option>\n              </select>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"manager\" className=\"form-label\">\n                Reporting Manager:\n              </label>\n              <input\n                className=\"form-control\"\n                id=\"manager\"\n                name=\"manager\"\n                value={empData.reportManager}\n                // onChange={handleInputChange}\n                required\n                disabled\n                placeholder={empData.reportManager}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"hr\" className=\"form-label\">\n                Reporting Hr:\n              </label>\n              <input\n                className=\"form-control\"\n                id=\"hr\"\n                name=\"hr\"\n                value={empData.reportHr}\n                // onChange={handleInputChange}\n                required\n                disabled\n                placeholder={empData.reportHr}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"reason\" className=\"form-label\">\n                Reason:\n              </label>\n              <textarea\n                className=\"form-control\"\n                id=\"reason\"\n                name=\"reason\"\n                // value={formData.reason}\n                // onChange={handleInputChange}\n                required\n                placeholder=\"Please mention the reason for leave\"\n              />\n            </div>\n\n            <div className=\"row mt-3 mx-1 justify-content-between\">\n              <button type=\"submit\" className=\"btn btn-primary col-5 \">\n                Submit\n              </button>\n              <button\n                type=\"reset\"\n                className=\"btn btn-danger col-5\"\n                onClick={props.onFormClose}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </InnerDashContainer>\n  );\n};\n\nexport default LeaveApplicationEmpForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CityForm.jsx",["1004"],"import React, { Component } from \"react\";\nimport \"./CityForm.css\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass CityForm extends Component {\n  state = {\n    stateData: [],\n    filteredStateData: [],\n    countryData: [],\n    filteredCountryData: []\n  };\n\n  onChange(e) {\n    this.setState({ CityData: e.target.value });\n  }\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ countryData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ stateData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n    let filteredState = this.state.stateData.filter(\n      (data) => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add City Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onCitySubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CountryName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"StateName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"City\"\n                  name=\"City\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CityForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CityTable.jsx",["1005","1006","1007"],"import React, { Component } from \"react\";\nimport \"./CityTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\nclass CityTable extends Component {\n  state = {\n    cityData: [],\n    loading: true,\n    rowData: []\n  };\n  cityObj = [];\n  rowDataT = [];\n\n  // stateDataArray;\n  loadCityData = () => {\n    axios\n      .get(\"http://localhost:4000/api/city\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // if(response.data.length==0){this.cityObj=[\"temp\"];}\n        // else{\n        this.cityObj = response.data;\n        // }\n        console.log(\"response\", response.data);\n        this.setState({ cityData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.cityObj.map((data) => {\n          let temp = {\n            data,\n            CountryName: data[\"state\"][0][\"country\"][0][\"CountryName\"],\n            StateName: data[\"state\"][0][\"StateName\"],\n            CityName: data[\"CityName\"]\n          };\n\n          this.rowDataT.push(temp);\n        });\n        this.setState({ rowData: this.rowDataT });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onCityDelete = (e) => {\n    console.log(e);\n    // let body= \"ID=\" + e;\n    if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n      axios\n        .delete(\"http://localhost:4000/api/city/\" + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status == 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n  componentDidMount() {\n    this.loadCityData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onCityDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditCity(params.data.data)}\n      />\n    );\n  }\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div className=\"p-4\">\n        <div className=\"d-flex justify-between aline-items-start mb-3\">\n          <div className=\" my-auto\">\n            <h3 className=\"fw-bold text-muted\">City Details</h3>\n            <p>You can create new city and view all cities details here !</p>\n          </div>\n\n          <Button\n            variant=\"primary\"\n            className=\"my-auto\"\n            id=\"add-button\"\n            onClick={this.props.onAddCity}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Add new City\n          </Button>\n        </div>\n        <div id=\"clear-both\" />\n\n        {!this.state.loading ? (\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Country\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  State\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  City\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.cityData.map((items, index) => (\n                <tr key={index}>\n                  <td>{items.state[0].country[0].CountryName}</td>\n                  <td>{items.state[0].StateName}</td>\n                  <td>{items.CityName}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CityTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Company\\CompanyForm.jsx",["1008","1009"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./CompanyForm.css\";\nimport BASE_URL from \"../config/config\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass CompanyForm extends Component {\n  state = {\n    countryData: [],\n    stateData: [],\n    cityData: [],\n    filteredCountryData: [],\n    filteredStateData: [],\n    filteredCityData: []\n  };\n\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ countryData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ stateData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadCityInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/city`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ cityData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n    this.loadCityInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n\n    let filteredState = this.state.stateData.filter(\n      (data) => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n  onStateChange(e) {\n    console.log(e.target.value);\n    let currentState = e.target.value;\n\n    let filteredCity = this.state.cityData.filter(\n      (data) => data[\"state\"][0][\"_id\"] == currentState\n    );\n    this.setState({ filteredCityData: filteredCity });\n  }\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add Company Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onCompanySubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company Name\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Company Name\"\n                  name=\"CompanyName\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Address\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  plassholder=\"address\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"CountryName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"state\"\n                  required\n                  onChange={this.onStateChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"StateName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredCityData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"CityName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                PostalCode\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"number\" placeholder=\"PostalCode\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Website\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"Website\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"email\" placeholder=\"Email\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Contact Person\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Contact Person\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Contact No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"Contact No\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                FaxNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"FaxNo\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                PanCard No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\" PanCard No  \"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                GSTNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"GSTNo\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                CINNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"CINNo\" required />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n\n        {/* </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default CompanyForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\StateTable.jsx",["1010","1011","1012"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\StateForm.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\StateFormEdit.jsx",["1013"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nclass StateForm extends Component {\n  state = {\n    StateData: this.props.editData[\"StateName\"],\n    countryInfo: []\n  };\n  countryData = [];\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.countryData = response.data;\n\n        this.setState({ portalsInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCountryInfo();\n  }\n  onChange(e) {\n    this.setState({ StateData: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit State Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onStateEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.countryData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"country\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"CountryName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"State\"\n                  name=\"StateName\"\n                  required\n                  value={this.state.StateData}\n                  onChange={(value) => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StateForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Company\\CompanyFormEdit.jsx",["1014","1015"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport \"./CompanyFormEdit.css\";\nimport BASE_URL from \"../config/config\";\n\nclass CompanyFormEdit extends Component {\n  state = {\n    status: \"\",\n    countryData: [],\n    stateData: [],\n    cityData: [],\n    filteredCountryData: [],\n    filteredStateData: [],\n    filteredCityData: [],\n\n    CompanyNameData: this.props.editData[\"CompanyName\"],\n    AddressData: this.props.editData[\"Address\"],\n    PostalCodeData: this.props.editData[\"PostalCode\"],\n    WebsiteData: this.props.editData[\"Website\"],\n    EmailData: this.props.editData[\"Email\"],\n    ContactPersonData: this.props.editData[\"ContactPerson\"],\n    ContactNoData: this.props.editData[\"ContactNo\"],\n    FaxNoData: this.props.editData[\"FaxNo\"],\n    PanNoData: this.props.editData[\"PanNo\"],\n    GSTNoData: this.props.editData[\"GSTNo\"],\n    CINNoData: this.props.editData[\"CINNo\"]\n  };\n  onCompanyNameDataChange(e) {\n    this.setState({ CompanyNameData: e.target.value });\n  }\n  onAddressDataChange(e) {\n    this.setState({ AddressData: e.target.value });\n  }\n  onPostalCodeDataChange(e) {\n    this.setState({ PostalCodeData: e.target.value });\n  }\n  onWebsiteDataChange(e) {\n    this.setState({ WebsiteData: e.target.value });\n  }\n  onEmailDataChange(e) {\n    this.setState({ EmailData: e.target.value });\n  }\n  onContactPersonDataChange(e) {\n    this.setState({ ContactPersonData: e.target.value });\n  }\n  onContactNoDataChange(e) {\n    this.setState({ ContactNoData: e.target.value });\n  }\n  onFaxNoDataChange(e) {\n    this.setState({ FaxNoData: e.target.value });\n  }\n  onPanNoDataChange(e) {\n    this.setState({ PanNoData: e.target.value });\n  }\n  onGSTNoDataChange(e) {\n    this.setState({ GSTNoData: e.target.value });\n  }\n  onCINNoDataChange(e) {\n    this.setState({ CINNoData: e.target.value });\n  }\n\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ countryData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ stateData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadCityInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/city`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ cityData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n    this.loadCityInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n\n    let filteredState = this.state.stateData.filter(\n      (data) => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n  onStateChange(e) {\n    console.log(e.target.value);\n    let currentState = e.target.value;\n    let filteredCity = this.state.cityData.filter(\n      (data) => data[\"state\"][0][\"_id\"] == currentState\n    );\n    this.setState({ filteredCityData: filteredCity });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2 id=\"role-form-title\">Edit Project Bid Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onCompanyEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company Name\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Company Name\"\n                  name=\"CompanyName\"\n                  value={this.state.CompanyNameData}\n                  onChange={(value) => this.onCompanyNameDataChange(value)}\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Address\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  plassholder=\"address\"\n                  required\n                  value={this.state.AddressData}\n                  onChange={(value) => this.onAddressDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"CountryName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"state\"\n                  required\n                  onChange={this.onStateChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"StateName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredCityData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"CityName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                PostalCode\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"PostalCode\"\n                  required\n                  value={this.state.PostalCodeData}\n                  onChange={(value) => this.onPostalCodeDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Website\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Website\"\n                  required\n                  value={this.state.WebsiteData}\n                  onChange={(value) => this.onWebsiteDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  value={this.state.EmailData}\n                  onChange={(value) => this.onEmailDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Contact Person\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Contact Person\"\n                  required\n                  value={this.state.ContactPersonData}\n                  onChange={(value) => this.onContactPersonDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Contact No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Contact No\"\n                  required\n                  value={this.state.ContactNoData}\n                  onChange={(value) => this.onContactNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                FaxNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"FaxNo\"\n                  required\n                  value={this.state.FaxNoData}\n                  onChange={(value) => this.onFaxNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                PanCard No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\" PanCard No  \"\n                  required\n                  value={this.state.PanNoData}\n                  onChange={(value) => this.onPanNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                GSTNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"GSTNo\"\n                  required\n                  value={this.state.GSTNoData}\n                  onChange={(value) => this.onGSTNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                CINNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"CINNo\"\n                  required\n                  value={this.state.CINNoData}\n                  onChange={(value) => this.onCINNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CompanyFormEdit;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Company\\CompanyTable.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CountryFormEdit.jsx",["1016","1017","1018"],"import React, { Component } from \"react\";\n// import \"./CountryForm.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass CountryForm extends Component {\n  state = {\n    CountryData: this.props.editData[\"CountryName\"]\n  };\n  onChange(e) {\n    this.setState({ CountryData: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Country Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={e =>\n              this.props.onCountryEditUpdate(\n                this.props.editData,\n                e\n                //   e.target[1].value\n              )\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Country\"\n                  name=\"CountryName\"\n                  required\n                  value={this.state.CountryData}\n                  onChange={value => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CountryForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpLeave\\LeaveApplicationEmpFormEdit.jsx",["1019"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpLeave\\LeaveApplicationEmpForm.jsx",["1020","1021","1022","1023"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpLeave\\LeaveApplicationEmpTable.jsx",["1024","1025","1026","1027","1028","1029","1030","1031"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpFamily\\FamilyInfoFormEdit.jsx",["1032"],"import React, { useState } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst FamilyInfoFormEdit = (props) => {\n  const [nameData, setNameData] = useState(props.editData[\"Name\"]);\n  const [relationshipData, setRelationshipData] = useState(\n    props.editData[\"Relationship\"]\n  );\n  const [dobData, setDOBData] = useState(props.editData[\"DOB\"].slice(0, 10));\n  const [occupationData, setOccupationData] = useState(\n    props.editData[\"Occupation\"]\n  );\n\n  const onNameDataChange = (e) => {\n    setNameData(e.target.value);\n  };\n\n  const onRelationshipDataChange = (e) => {\n    setRelationshipData(e.target.value);\n  };\n\n  const onOccupationDataChange = (e) => {\n    setOccupationData(e.target.value);\n  };\n\n  const onDOBDataChange = (e) => {\n    setDOBData(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Edit FamilyInfo Details</h2>\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) => props.onFamilyInfoEditUpdate(props.editData, e)}\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Name\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Name\"\n                required\n                value={nameData}\n                onChange={(e) => onNameDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Relationship\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Relationship\"\n                required\n                value={relationshipData}\n                onChange={(e) => onRelationshipDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              DOB\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"date\"\n                placeholder=\"DOB\"\n                required\n                value={dobData}\n                onChange={(e) => onDOBDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Occupation\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Occupation\"\n                required\n                value={occupationData}\n                onChange={(e) => onOccupationDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Update</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormEditClose}>\n                Cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default FamilyInfoFormEdit;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpFamily\\FamilyInfoTable.jsx",["1033","1034","1035","1036"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./FamilyInfoTable.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport BASE_URL from \"../../../Pages/config/config\";\nimport InnerDashContainer from \"../../InnerDashContainer\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst FamilyInfoTable = (props) => {\n  const [familyInfoData, setFamilyInfoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n\n  const familyInfoObj = [];\n\n  const loadFamilyInfoData = () => {\n    axios\n      .get(`${BASE_URL}/api/family-info/` + localStorage.getItem(\"_id\"), {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        familyInfoObj.push(response.data);\n        console.log(\"response\", response.data);\n        setFamilyInfoData(response.data);\n        setLoading(false);\n        const tempRowData = response.data.familyInfo.map((data) => ({\n          data,\n          Name: data[\"Name\"],\n          Relationship: data[\"Relationship\"],\n          DOB: data[\"DOB\"].slice(0, 10),\n          Occupation: data[\"Occupation\"]\n        }));\n        setRowData(tempRowData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onFamilyInfoDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \") === true) {\n      axios\n        .delete(`${BASE_URL}/api/family-info/` + e1 + \"/\" + e2, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadFamilyInfoData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    loadFamilyInfoData();\n  }, []);\n\n  const renderButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() =>\n          onFamilyInfoDelete(props.data[\"_id\"], params.data.data[\"_id\"])\n        }\n      />\n    );\n  };\n\n  const renderEditButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => props.onEditFamilyInfo(params.data.data)}\n      />\n    );\n  };\n\n  return (\n    <InnerDashContainer>\n      <h2 id=\"role-title\">\n        Employee Family Details{\" \"}\n        {props.back\n          ? \"of \" + props.data[\"FirstName\"] + \" \" + props.data[\"LastName\"]\n          : \"\"}\n      </h2>\n\n      {props.back ? (\n        <Link to=\"/hr/employee\">\n          <Button variant=\"primary\" id=\"add-button\">\n            Back\n          </Button>\n        </Link>\n      ) : (\n        <Button\n          variant=\"primary\"\n          id=\"add-button\"\n          onClick={props.onAddFamilyInfo}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Add\n        </Button>\n      )}\n\n      <div id=\"clear-both\" />\n\n      {!loading ? (\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                Name\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                Relationship\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                DOB\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                Occupation\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {rowData.map((items, index) => (\n              <tr key={index}>\n                <td className=\"text-uppercase\">{items.Name}</td>\n                <td className=\"text-uppercase\">{items.Relationship}</td>\n                <td className=\"text-uppercase\">{items.DOB}</td>\n                <td className=\"text-uppercase\">{items.Occupation}</td>\n                {/* <td>\n                  {\" \"}\n                  <button\n                    onClick={() => props.onEditFamilyInfo(items.data)}\n                    style={{\n                      zIndex: \"1\",\n                      cursor: \"pointer\"\n                    }}\n                    className=\"btn\"\n                  >\n                    <FaRegEdit className=\"fs-4 text-primary bg-white p-1 rounded-5\" />\n                  </button>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </InnerDashContainer>\n  );\n};\n\nexport default FamilyInfoTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpFamily\\FamilyInfoForm.jsx",["1037"],"import React from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst FamilyInfoForm = (props) => {\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Add FamilyInfo Details</h2>\n      <div id=\"role-form-outer-div\">\n        <Form id=\"form\" onSubmit={props.onFamilyInfoSubmit}>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Name\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Name\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Relationship\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Relationship\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              DOB\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"date\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Occupation\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Occupation\" required />\n            </Col>\n          </Form.Group>\n          {/* <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Contact No\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Contact No\" required />\n            </Col>\n          </Form.Group> */}\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Submit</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default FamilyInfoForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Notification\\NoticeBoard.jsx",["1038","1039"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\SelfAttendance.jsx",["1040","1041","1042","1043","1044","1045"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Chart\\DailyAttendChart.jsx",["1046"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst DailyAttendChart = () => {\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [statusCounts, setStatusCounts] = useState({\r\n    Present: 0,\r\n    Late: 0,\r\n    \"Half Day\": 0,\r\n    Absent: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchAttendanceData = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/api/todays-attendance`);\r\n        setAttendanceData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching today's attendance data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAttendanceData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const counts = attendanceData.reduce(\r\n      (acc, user) => {\r\n        const mark = getAttendanceMark(user);\r\n        acc[mark]++;\r\n        return acc;\r\n      },\r\n      { Late: 0, Present: 0, \"Half Day\": 0, Absent: 0 }\r\n    );\r\n\r\n    setStatusCounts(counts);\r\n  }, [attendanceData]);\r\n\r\n  const getAttendanceMark = (user) => {\r\n    const loginTime = user.attendance && user.attendance.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute >= 45)) {\r\n        return \"Half Day\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"Late\";\r\n      }\r\n    }\r\n    return loginTime ? \"Present\" : \"Absent\";\r\n  };\r\n\r\n  const seriesData = [\r\n    statusCounts.Late,\r\n    statusCounts.Present,\r\n    statusCounts[\"Half Day\"],\r\n    statusCounts.Absent\r\n  ];\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      type: \"polarArea\"\r\n    },\r\n    stroke: {\r\n      colors: [\"#fff\"]\r\n    },\r\n    fill: {\r\n      opacity: 0.8\r\n    },\r\n    labels: [\"Late\", \"Present\", \"Half Day\", \"Absent\"], // Labels for each segment\r\n    legend: {\r\n      position: \"bottom\",\r\n      labels: {\r\n        useSeriesColors: true // Apply series colors to legend labels\r\n      },\r\n      markers: {\r\n        width: 12,\r\n        height: 12,\r\n        strokeWidth: 0,\r\n        strokeColor: \"#fff\",\r\n        fillColors: undefined,\r\n        radius: 12,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        onClick: undefined,\r\n        customHTML: undefined,\r\n        onClick: undefined,\r\n        toggleOnLegendClick: true,\r\n        itemMargin: {\r\n          horizontal: 5,\r\n          vertical: 5\r\n        },\r\n        onItemClick: {\r\n          toggleDataSeries: true\r\n        },\r\n        onItemHover: {\r\n          highlightDataSeries: true\r\n        }\r\n      }\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            position: \"bottom\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Today's Attendance\r\n        </h6>\r\n      </div>\r\n      <ReactApexChart\r\n        options={chartOptions}\r\n        series={seriesData}\r\n        type=\"polarArea\"\r\n      />\r\n    </div>\r\n    // <div>\r\n    //   <div className=\"ChartCard shadow-sm \">\r\n    //     <div className=\"ChartHeader\">\r\n    //       <div className=\"d-flex justify-content-between \">\r\n    //         <h4 className=\"fw-bolder my-auto text-white \">\r\n    //           Today's Attendance\r\n    //         </h4>\r\n    //       </div>\r\n    //     </div>\r\n    //     <div id=\"chart\">\r\n    //       <ReactApexChart\r\n    //         options={chartOptions}\r\n    //         series={seriesData}\r\n    //         type=\"polarArea\"\r\n    //       />\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default DailyAttendChart;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import Chart from \"react-apexcharts\";\r\n// import ReactApexChart from \"react-apexcharts\";\r\n\r\n// const DailyAttendChart = () => {\r\n//   const [attendanceData, setAttendanceData] = useState([]);\r\n//   const [statusCounts, setStatusCounts] = useState({\r\n//     Present: 0,\r\n//     Late: 0,\r\n//     \"Half Day\": 0,\r\n//     Absent: 0\r\n//   });\r\n\r\n//   const [chartOption, setChartOption] = useState({\r\n//     options: {\r\n//       labels: [\"Late\", \"Present\", \"Half Day\", \"Absent\"],\r\n//       colors: [\"#FFC764\", \"#00FFAB\", \"#FF884B\", \"#F65A83\"],\r\n//       plotOptions: {\r\n//         pie: {\r\n//           donut: {\r\n//             labels: {\r\n//               show: true,\r\n//               total: {\r\n//                 show: true\r\n//               }\r\n//             }\r\n//           }\r\n//         }\r\n//       }\r\n//     },\r\n//     series: [\r\n//       statusCounts.Late,\r\n//       statusCounts.Present,\r\n//       statusCounts[\"Half Day\"],\r\n//       statusCounts.Absent\r\n//     ]\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchAttendanceData = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           \"${BASE_URL}/api/todays-attendance\"\r\n//         );\r\n//         setAttendanceData(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching today's attendance data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchAttendanceData();\r\n//   }, []);\r\n\r\n//   const Today = () => {\r\n//     const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\r\n//     return new Date()\r\n//       .toLocaleDateString(undefined, options)\r\n//       .split(\"/\")\r\n//       .reverse()\r\n//       .join(\"-\");\r\n//   };\r\n\r\n//   const today = new Date();\r\n//   const yyyy = today.getFullYear();\r\n//   let mm = today.getMonth() + 1;\r\n//   let dd = today.getDate();\r\n//   if (dd < 10) dd = \"0\" + dd;\r\n//   if (mm < 10) mm = \"0\" + mm;\r\n//   let dayCurrent = today.getDay();\r\n\r\n//   console.log(\"Today's Date:\", `${dd}-${mm}-${yyyy}`);\r\n//   console.log(\"Day of the Week:\", dayCurrent);\r\n\r\n//   useEffect(() => {\r\n//     const counts = attendanceData.reduce(\r\n//       (acc, user) => {\r\n//         const mark = getAttendanceMark(user);\r\n//         acc[mark]++;\r\n//         return acc;\r\n//       },\r\n//       { Late: 0, Present: 0, \"Half Day\": 0, Absent: 0 }\r\n//     );\r\n\r\n//     setStatusCounts(counts);\r\n//   }, [attendanceData]);\r\n\r\n//   useEffect(() => {\r\n//     setChartOption({\r\n//       options: {\r\n//         labels: [\"Late\", \"Present\", \"Half Day\", \"Absent\"],\r\n//         colors: [\"#FFC764\", \"#00FFAB\", \"#FF884B\", \"#F65A83\"],\r\n//         plotOptions: {\r\n//           pie: {\r\n//             donut: {\r\n//               labels: {\r\n//                 show: true,\r\n//                 total: {\r\n//                   show: true\r\n//                 }\r\n//               }\r\n//             }\r\n//           }\r\n//         }\r\n//       },\r\n//       series: [\r\n//         statusCounts.Late,\r\n//         statusCounts.Present,\r\n//         statusCounts[\"Half Day\"],\r\n//         statusCounts.Absent\r\n//       ]\r\n//     });\r\n//   }, [statusCounts]);\r\n\r\n//   const getAttendanceMark = (user) => {\r\n//     const loginTime = user.attendance && user.attendance.loginTime[0];\r\n//     if (loginTime) {\r\n//       const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n//       if (loginHour > 9 || (loginHour === 9 && loginMinute >= 45)) {\r\n//         return \"Half Day\";\r\n//       } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n//         return \"Late\";\r\n//       }\r\n//     }\r\n//     return loginTime ? \"Present\" : \"Absent\";\r\n//   };\r\n//   const status = (s) => {\r\n//     if (s == 0) {\r\n//       return \"Sunday\";\r\n//     }\r\n//     if (s == 1) {\r\n//       return \"Monday\";\r\n//     }\r\n//     if (s == 2) {\r\n//       return \"Tuesday\";\r\n//     }\r\n//     if (s == 3) {\r\n//       return \"Wednedsy\";\r\n//     }\r\n//     if (s == 4) {\r\n//       return \"Thrusday\";\r\n//     }\r\n//     if (s == 5) {\r\n//       return \"Friday\";\r\n//     }\r\n//     if (s == 6) {\r\n//       return \"Saturday\";\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2\">\r\n//       <div className=\"ChartHeader\">\r\n//         <h6\r\n//           style={{\r\n//             width: \"fit-content\",\r\n//             boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n//             color: \"var(--primaryDashColorDark)\"\r\n//           }}\r\n//           className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n//         >\r\n//           Today's Attendance\r\n//         </h6>\r\n//       </div>\r\n//       <Chart\r\n//         options={chartOption.options}\r\n//         series={chartOption.series}\r\n//         type=\"donut\"\r\n//         width=\"100%\"\r\n//         height=\"300px\"\r\n//       />\r\n//     </div>\r\n\r\n//   );\r\n// };\r\n\r\n// export default DailyAttendChart;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpWorkExp\\WorkExperienceFormEdit.jsx",["1047"],"import React, { Component } from \"react\";\n// import \"./WorkExperienceFormEdit.css\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nclass WorkExperienceForm extends Component {\n  state = {\n    // WorkExperienceData: this.props.editData[\"WorkExperienceName\"],\n\n    CompanyNameData: this.props.editData[\"CompanyName\"],\n    DesignationData: this.props.editData[\"Designation\"],\n    FromDateData: this.props.editData[\"FromDate\"].slice(0, 10),\n    ToDateData: this.props.editData[\"ToDate\"].slice(0, 10),\n  };\n  onCompanyNameDataChange(e) {\n    this.setState({ CompanyNameData: e.target.value });\n  }\n  onDesignationDataChange(e) {\n    this.setState({ DesignationData: e.target.value });\n  }\n  onFromDateDataChange(e) {\n    this.setState({ FromDateData: e.target.value });\n  }\n  onToDateDataChange(e) {\n    this.setState({ ToDateData: e.target.value });\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit WorkExperience Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={e =>\n              this.props.onWorkExperienceEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n              Company Name\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Company Name\"\n                  required\n                  value={this.state.CompanyNameData}\n                  onChange={value => this.onCompanyNameDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n              Designation\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Designation\"\n                  required\n                  value={this.state.DesignationData}\n                  onChange={value => this.onDesignationDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n              FromDate\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"date\"\n                  required\n                  value={this.state.FromDateData}\n                  onChange={value => this.onFromDateDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n              ToDate\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"date\"\n                  required\n                  value={this.state.ToDateData}\n                  onChange={value => this.onToDateDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkExperienceForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpWorkExp\\WorkExperienceForm.jsx",["1048"],"// import React, { Component } from \"react\";\n// import \"./WorkExperienceForm.css\";\n// import { Form, Button, Col, Row } from \"react-bootstrap\";\n// import axios from \"axios\";\n\n// class WorkExperienceForm extends Component {\n//   state = {};\n//   componentWillMount() {}\n//   render() {\n//     return (\n//       <div>\n//         <h2 id=\"role-form-title\">Add WorkExperience Details</h2>\n//         <div id=\"role-form-outer-div\">\n//           <Form id=\"form\" onSubmit={this.props.onWorkExperienceSubmit}>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Company Name\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"Text\" placeholder=\"CompanyName\" required />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Designation\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"Text\" placeholder=\"Designation\" required />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 FromDate\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"date\" required />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 ToDate\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"date\" placeholder=\"ToDate\" required />\n//               </Col>\n//             </Form.Group>\n\n//             <Form.Group as={Row} id=\"form-submit-button\">\n//               <Col sm={{ span: 10, offset: 2 }}>\n//                 <Button type=\"submit\">Submit</Button>\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row} id=\"form-cancel-button\">\n//               <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n//                 <Button type=\"reset\" onClick={this.props.onFormClose}>\n//                   cancel\n//                 </Button>\n//               </Col>\n//             </Form.Group>\n//           </Form>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default WorkExperienceForm;\n\nimport React from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./WorkExperienceForm.css\";\n\nconst WorkExperienceForm = (props) => {\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Add WorkExperience Details</h2>\n      <div id=\"role-form-outer-div\">\n        <Form id=\"form\" onSubmit={props.onWorkExperienceSubmit}>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Company Name\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"CompanyName\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Designation\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Designation\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              FromDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"date\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              ToDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"date\" placeholder=\"ToDate\" required />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Submit</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkExperienceForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpWorkExp\\WorkExperienceTable.jsx",["1049","1050","1051","1052","1053","1054"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpEducation\\EducationFormEdit.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpEducation\\EducationForm.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpEducation\\EducationTable.jsx",["1055","1056","1057","1058"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegEdit } from \"react-icons/fa\";\n\nimport InnerDashContainer from \"../../InnerDashContainer\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst EducationTable = (props) => {\n  const [educationData, setEducationData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n\n  useEffect(() => {\n    const loadEducationData = () => {\n      axios\n        // .get(`http://localhost:4000/api/education/${props.data[\"_id\"]}`,\n        .get(\n          \"http://localhost:4000/api/education/\" + localStorage.getItem(\"_id\"),\n          {\n            headers: {\n              authorization: localStorage.getItem(\"token\") || \"\"\n            }\n          }\n        )\n        .then((response) => {\n          const educationObj = response.data;\n          console.log(\"response\", response.data);\n          setEducationData(educationObj);\n          setLoading(false);\n\n          const rowDataT = educationObj.education.map((data) => ({\n            data,\n            SchoolUniversity: data[\"SchoolUniversity\"],\n            Degree: data[\"Degree\"],\n            Grade: data[\"Grade\"],\n            PassingOfYear: data[\"PassingOfYear\"]\n          }));\n\n          setRowData(rowDataT);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n\n    loadEducationData();\n  }, [localStorage.getItem(\"_id\")]);\n  // [props.data[\"_id\"]]);\n\n  const onEducationDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`http://localhost:4000/api/education/${e1}/${e2}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then(() => {\n          educationData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const renderButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() =>\n          onEducationDelete(props.data[\"_id\"], params.data.data[\"_id\"])\n        }\n      />\n    );\n  };\n\n  const renderEditButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => props.onEditEducation(params.data.data)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <InnerDashContainer>\n        <div className=\"py-1\">\n          <Button variant=\"primary\" onClick={props.onAddEducation}>\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Add Details\n          </Button>\n        </div>\n\n        <div id=\"clear-both\" />\n\n        {!loading ? (\n          <div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th\n                    style={{\n                      background: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\"\n                    }}\n                  >\n                    School/University\n                  </th>\n                  <th\n                    style={{\n                      background: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\"\n                    }}\n                  >\n                    Degree\n                  </th>\n                  <th\n                    style={{\n                      background: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\"\n                    }}\n                  >\n                    Grade\n                  </th>\n                  <th\n                    style={{\n                      background: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\"\n                    }}\n                    className=\"text-center\"\n                  >\n                    Passing Year\n                  </th>\n                  <th\n                    style={{\n                      background:\n                        \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                      color: \"white\"\n                    }}\n                  >\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {rowData.map((items, index) => (\n                  <tr key={index}>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"text-uppercase fw-bold\"\n                    >\n                      {items.SchoolUniversity}\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"text-uppercase fw-bold\"\n                    >\n                      {items.Degree}\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"text-uppercase fw-bold\"\n                    >\n                      <button className=\"btn btn-success w-100 fw-bold py-0 rounded-5\">\n                        {items.Grade}\n                      </button>\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"text-uppercase fw-bold text-center\"\n                    >\n                      {items.PassingOfYear}\n                    </td>\n                    <td style={{ verticalAlign: \"middle\" }}>\n                      <button\n                        onClick={() => props.onEditEducation(items.data)}\n                        style={{\n                          zIndex: \"1\",\n                          cursor: \"pointer\"\n                        }}\n                        className=\"d-flex btn py-0 px-3 shadow-sm justify-content-around align-items-center\"\n                      >\n                        <FaRegEdit className=\"fs-4 text-primary bg-white p-1 rounded-5\" />\n                        <span className=\"fw-bold text-muted\">Update</span>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </InnerDashContainer>\n    </div>\n  );\n};\n\nexport default EducationTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpPresonal\\PersonalInfoFormEdit.jsx",["1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073"],"import React, { useState } from \"react\";\nimport \"./PersonalInfoFormEdit.css\";\nimport axios from \"axios\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport personalinfoimage from \"./Personalinfo.svg\";\n\nconst PersonalInfoFormEdit = (props) => {\n  const [state, setState] = useState({\n    GenderData: props.editData[\"Gender\"],\n    EmailData: props.editData[\"Email\"],\n    FirstNameData: props.editData[\"FirstName\"],\n    MiddleNameData: props.editData[\"MiddleName\"],\n    LastNameData: props.editData[\"LastName\"],\n    DOBData: props.editData[\"DOB\"].slice(0, 10),\n    ContactNoData: props.editData[\"ContactNo\"],\n    EmergencyContactNoData: props.editData[\"EmergencyContactNo\"] || \"\",\n    PANcardNoData: props.editData[\"PANcardNo\"] || \"\",\n    HobbiesData: props.editData[\"Hobbies\"] || \"\",\n    PresentAddressData: props.editData[\"PresentAddress\"] || \"\",\n    PermanetAddressData: props.editData[\"PermanetAddress\"] || \"\",\n    presonalEmail: props.editData[\"presonalEmail\"] || \"\",\n    role: props.editData[\"role\"] || \"\"\n  });\n  const onEmailDataChange = (e) => {\n    setState({ ...state, EmailData: e.target.value });\n  };\n\n  const onFirstNameDataChange = (e) => {\n    setState({ ...state, FirstNameData: e.target.value });\n  };\n  const onMiddleNameDataChange = (e) => {\n    setState({ ...state, MiddleNameData: e.target.value });\n  };\n  const onLastNameDataChange = (e) => {\n    setState({ ...state, LastNameData: e.target.value });\n  };\n  const onContactNoDataChange = (e) => {\n    setState({ ...state, ContactNoData: e.target.value });\n  };\n  const onPANcardNoDataChange = (e) => {\n    setState({ ...state, PANcardNoData: e.target.value });\n  };\n  const onpresonalemailDataChange = (e) => {\n    setState({ presonalEmail: e.target.value });\n  };\n  const onEmergencyContactNoDataChange = (e) => {\n    setState({ ...state, EmergencyContactNoData: e.target.value });\n  };\n  const onHobbiesDataChange = (e) => {\n    setState({ ...state, HobbiesData: e.target.value });\n  };\n  const onPresentAddressDataChange = (e) => {\n    setState({ ...state, PresentAddressData: e.target.value });\n  };\n  const onPermanentAddressDataChange = (e) => {\n    setState({ ...state, PermanetAddressData: e.target.value });\n  };\n\n  const onGenderChange = (e) => {\n    setState({ ...state, GenderData: e.target.value });\n    props.onGenderChange(e);\n  };\n  const onDOBDataChange = (e) => {\n    console.log(e.target.value);\n    setState({ ...state, DOBData: e.target.value });\n  };\n\n  return (\n    <div className=\"container-fluid position-relative\">\n      <div\n        style={{ marginTop: \"-.5rem\", minHeight: \"95vh\" }}\n        className=\"row bg-light p-2\"\n      >\n        <div className=\"col-md-4 col-0\">\n          <img src={personalinfoimage} alt=\"\" />\n        </div>\n        <div className=\"col-md-8 col-0 \">\n          <div className=\"\">\n            <Form\n              style={{ overflow: \"auto\", maxHeight: \"600px\" }}\n              className=\"row row-gap-2 rounded-2 shadow-sm m-auto justify-content-between bg-white\"\n              onSubmit={(e) =>\n                props.onPersonalInfoEditUpdate(props.editData, e)\n              }\n            >\n              <h4\n                style={{ position: \"sticky\", top: \"0\", zIndex: \"2\" }}\n                className=\"fw-bold text-muted py-3 w-100 bg-light \"\n              >\n                Edit Employee info\n              </h4>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  First Name\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    required\n                    disabled\n                    value={state.FirstNameData}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Middle Name\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Middle Name\"\n                    required\n                    disabled\n                    value={state.MiddleNameData}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Last Name\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    disabled\n                    required\n                    value={state.LastNameData}\n                  />\n                </Col>\n              </Form.Group>\n\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" as=\"legend\" column>\n                  Gender\n                </Form.Label>\n                <Col className=\"d-flex gap-3\">\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"Male\"\n                    value=\"male\"\n                    name=\"gender\"\n                    className=\"d-flex gap-1 shadow-sm py-1 px-5 rounded-5\"\n                    onChange={onGenderChange}\n                    checked={state.GenderData == \"male\"}\n                    required\n                  />\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"Female\"\n                    value=\"female\"\n                    name=\"gender\"\n                    className=\"d-flex gap-1 shadow-sm py-1 px-5 rounded-5\"\n                    onChange={onGenderChange}\n                    checked={state.GenderData == \"female\"}\n                    required\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Contact No\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Contact No \"\n                    required\n                    value={state.ContactNoData}\n                    onChange={(value) => onContactNoDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Emergency Contact\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Emergency Contact No\"\n                    required\n                    value={state.EmergencyContactNoData}\n                    onChange={(value) => onEmergencyContactNoDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Work Email\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    disabled\n                    required\n                    value={state.EmailData}\n                    onChange={(value) => onEmailDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  PAN Card No\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"PAN Card No\"\n                    required\n                    value={state.PANcardNoData}\n                    onChange={(value) => onPANcardNoDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Presonal Email\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Presonal Email\"\n                    required\n                    value={state.presonalEmail}\n                    onChange={(value) => onpresonalemailDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  DOB\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"DOB\"\n                    required\n                    //   value={props.editData[\"DOB\"].slice(0, 10)}\n                    value={state.DOBData}\n                    onChange={(value) => onDOBDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Blood Group\n                </Form.Label>\n\n                <Col className=\"form-input\">\n                  <Form.Control as=\"select\" required>\n                    <option value=\"\" disabled selected>\n                      Select your option\n                    </option>\n                    <option\n                      value=\"A+\"\n                      selected={props.editData[\"BloodGroup\"] == \"A+\"}\n                    >\n                      A+\n                    </option>\n                    <option\n                      value=\"A-\"\n                      selected={props.editData[\"BloodGroup\"] == \"A-\"}\n                    >\n                      A-\n                    </option>\n                    <option\n                      value=\"B+\"\n                      selected={props.editData[\"BloodGroup\"] == \"B+\"}\n                    >\n                      B+\n                    </option>\n                    <option\n                      value=\"B-\"\n                      selected={props.editData[\"BloodGroup\"] == \"B-\"}\n                    >\n                      B-\n                    </option>\n                    <option\n                      value=\"AB+\"\n                      selected={props.editData[\"BloodGroup\"] == \"AB+\"}\n                    >\n                      AB+\n                    </option>\n                    <option\n                      value=\"AB-\"\n                      selected={props.editData[\"BloodGroup\"] == \"AB-\"}\n                    >\n                      AB-\n                    </option>\n                    <option\n                      value=\"O+\"\n                      selected={props.editData[\"BloodGroup\"] == \"O+\"}\n                    >\n                      O+\n                    </option>\n                    <option\n                      value=\"O-\"\n                      selected={props.editData[\"BloodGroup\"] == \"O-\"}\n                    >\n                      O-\n                    </option>\n                  </Form.Control>\n                </Col>\n              </Form.Group>\n\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Hobbies\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Hobbies\"\n                    required\n                    value={state.HobbiesData}\n                    onChange={(value) => onHobbiesDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Present Address\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    as=\"textarea\"\n                    rows=\"3\"\n                    plassholder=\"Present Address\"\n                    required\n                    value={state.PresentAddressData}\n                    onChange={(value) => onPresentAddressDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Permanet Address\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    as=\"textarea\"\n                    rows=\"3\"\n                    plassholder=\" Permanet Address\"\n                    value={state.PermanetAddressData}\n                    onChange={(value) => onPermanentAddressDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n\n              <div className=\"d-flex m-0 gap-3 py-2\">\n                <button className=\"btn btn-primary px-5\" type=\"submit\">\n                  Submit\n                </button>\n                <button\n                  className=\"btn btn-danger px-5\"\n                  type=\"reset\"\n                  onClick={props.onFormEditClose}\n                >\n                  cancel\n                </button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PersonalInfoFormEdit;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\EmpPresonal\\PersonalInfoTable.jsx",["1074","1075","1076","1077","1078","1079","1080"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\CountData\\EmpProfile.jsx",["1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/core\";\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./profilePage.css\";\r\nimport { FaCamera, FaEye, FaFilePdf, FaRegEdit } from \"react-icons/fa\";\r\nimport { IoMdDownload } from \"react-icons/io\";\r\nimport FloralAbstract from \"../../EmpPresonal/FloralAbstract.jpg\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { IoArrowBackCircle, IoEye } from \"react-icons/io5\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst EmpProfile = (props) => {\r\n  const [personalInfoData, setPersonalInfoData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [activeSection, setActiveSection] = useState(\"personalInfo\");\r\n  const [showDownloadbtn, setShowDownloadbtn] = useState(false);\r\n  const [visibleDocs, setVisibleDocs] = useState(true);\r\n\r\n  const loadPersonalInfoData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/personal-info/` + localStorage.getItem(\"_id\"), {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        const data = response.data;\r\n        setPersonalInfoData(data);\r\n        setLoading(false);\r\n\r\n        const temp = {\r\n          data,\r\n          FirstName: data[\"FirstName\"] || \"Not Avaiable\",\r\n          MiddleName: data[\"MiddleName\"] || \"Not Avaiable\",\r\n          LastName: data[\"LastName\"] || \"Not Avaiable\",\r\n          empID: data[\"empID\"] || \"Not Avaiable\",\r\n          Gender: data[\"Gender\"] || \"Not Avaiable\",\r\n          ContactNo: data[\"ContactNo\"] || \"Not Avaiable\",\r\n          Email: data[\"Email\"] || \"Not Avaiable\",\r\n          PANcardNo: data[\"PANcardNo\"] || \"Not Avaiable\",\r\n          DOB: data[\"DOB\"].slice(0, 10) || \"Not Avaiable\",\r\n          BloodGroup: data[\"BloodGroup\"] || \"Not Avaiable\",\r\n          EmergencyContactNo: data[\"EmergencyContactNo\"] || \"Not Avaiable\",\r\n          Hobbies: data[\"Hobbies\"] || \"Not Avaiable\",\r\n          PresentAddress: data[\"PresentAddress\"] || \"Not Avaiable\",\r\n          PermanetAddress: data[\"PermanetAddress\"] || \"Not Avaiable\",\r\n          RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n          DateOfJoining: data[\"DateOfJoining\"].slice(0, 10),\r\n\r\n          DepartmentName: data[\"department\"][0]\r\n            ? data[\"department\"][0][\"DepartmentName\"]\r\n            : \"\",\r\n          Account:\r\n            data[\"Account\"] === 1\r\n              ? \"Admin\"\r\n              : data[\"Account\"] === 2\r\n              ? \"HR\"\r\n              : data[\"Account\"] === 3\r\n              ? \"Employee\"\r\n              : data[\"Account\"] === 4\r\n              ? \"Manager\"\r\n              : \"\",\r\n          PositionName: data[\"position\"][0]\r\n            ? data[\"position\"][0][\"PositionName\"]\r\n            : \"\"\r\n        };\r\n\r\n        setRowData([temp]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPersonalInfoData();\r\n  }, [props.data]);\r\n\r\n  const onToggleSection = (section) => {\r\n    setActiveSection(section);\r\n  };\r\n\r\n  const onPersonalInfoDelete = (e) => {\r\n    console.log(e);\r\n    if (window.confirm(\"Are you sure to delete this record? \")) {\r\n      axios\r\n        .delete(`${BASE_URL}/api/personalInfo/${e}`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then(() => {\r\n          loadPersonalInfoData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    if (props.back) {\r\n      return <React.Fragment />;\r\n    }\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        onClick={() => props.onEditPersonalInfo(params.data.data)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"33rem\",\r\n        background: `url(${FloralAbstract})`,\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"cover\",\r\n        overflow: \"hidden\"\r\n      }}\r\n      className=\" m-0 p-0 rounded-3 bg-white shadow\"\r\n    >\r\n      {rowData.map((items, index) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              backgroundColor: \"rgba(258,258,258,.95)\",\r\n              position: \"relative\"\r\n            }}\r\n            className=\"d-flex flex-column gap-3 py-2 h-100\"\r\n            key={index}\r\n          >\r\n            <div\r\n              className=\"d-flex flex-column gap-2\"\r\n              style={{ width: \"100%\", padding: \"1rem 1rem\" }}\r\n            >\r\n              <div\r\n                className=\"mx-auto\"\r\n                style={{\r\n                  height: \"120px\",\r\n                  width: \"120px\",\r\n                  border: \"6px solid #39A7FF\",\r\n                  borderRadius: \"50%\",\r\n                  position: \"relative\"\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                    borderRadius: \"50%\",\r\n                    objectFit: \"cover\"\r\n                  }}\r\n                  src={\r\n                    items?.data?.profile?.image_url\r\n                      ? items?.data?.profile?.image_url\r\n                      : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\r\n                  }\r\n                  alt=\"employee\"\r\n                />\r\n                <button\r\n                  style={{\r\n                    height: \"30px\",\r\n                    width: \"30px\",\r\n                    borderRadius: \"50%\",\r\n                    border: \"3px solid white\",\r\n                    position: \"absolute\",\r\n                    bottom: \"0\",\r\n                    right: \"0\"\r\n                  }}\r\n                  className=\"btn btn-primary text-white d-flex p-1 \"\r\n                >\r\n                  <FaCamera className=\"m-auto\" />\r\n                </button>\r\n              </div>\r\n              <p\r\n                style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\r\n                className=\"btn btn-success px-2 py-0 m-2 rounded-5 fw-bold shadow\"\r\n              >\r\n                {items.empID}\r\n              </p>\r\n              {/* <p className=\"m-auto fw-bold fs-6\">{items.empID}</p> */}\r\n              <h3 className=\"text-capitalize my-0 fw-bold text-muted text-center\">\r\n                {items.FirstName} {personalInfoData.LastName}\r\n              </h3>\r\n              <p className=\"text-capitalize my-0 fw-bold text-center\">\r\n                {items.RoleName} {items.DepartmentName}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpProfile;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Notification\\NoticeBoard.jsx",["1100","1101"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\CountData\\EmpTaskCount.jsx",["1102","1103","1104","1105","1106"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst EmpTaskCount = (props) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const id = localStorage.getItem(\"_id\");\r\n\r\n  useEffect(() => {\r\n    const loadPersonalInfoData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/personal-info/${id}`,\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        );\r\n        setEmail(response.data.Email);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n\r\n    loadPersonalInfoData();\r\n  }, []);\r\n\r\n  const calculateRemainingTime = (endDate) => {\r\n    const now = new Date();\r\n    const endDateTime = new Date(endDate);\r\n    let remainingTime = endDateTime - now;\r\n\r\n    if (remainingTime < 0) {\r\n      // If remaining time is negative, consider it as delay\r\n      remainingTime = Math.abs(remainingTime);\r\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\r\n    } else {\r\n      // Calculate remaining days, hours, minutes, and seconds\r\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\r\n      );\r\n      return { delay: false, days, hours, minutes };\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      setError(\"Error fetching tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n      setTimeout(fetchData, 60000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    return () => clearTimeout();\r\n  }, []);\r\n\r\n  // Count of different task statuses for the current employee\r\n  const acceptedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Accepted\"\r\n    )\r\n  ).length;\r\n\r\n  const rejectedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Rejected\"\r\n    )\r\n  ).length;\r\n\r\n  const completedTasksCount = tasks.filter(\r\n    (task) =>\r\n      task.status === \"Pending\" &&\r\n      task.employees.some((emp) => emp.emptaskStatus === \"Completed\")\r\n  ).length;\r\n\r\n  const pendingTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) => taskemp.empemail === email && task.status === \"Pending\"\r\n    )\r\n  ).length;\r\n\r\n  const assignedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Task Assigned\"\r\n    )\r\n  ).length;\r\n\r\n  const acceptedTasksNotCompletedOnTimeCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Accepted\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const completedTasksOnTimeCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Completed\" &&\r\n        !calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const lateCompletedAcceptedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Accepted\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const lateCompletedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Completed\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  // const notAcceptedAssignedTasksCount = tasks.filter((task) =>\r\n  //   task.employees.some(\r\n  //     (taskemp) =>\r\n  //       taskemp.empemail === email &&\r\n  //       taskemp.emptaskStatus === \"Task Assigned\" &&\r\n  //       taskemp.emptaskStatus !== \"Accepted\"\r\n  //   )\r\n  // ).length;\r\n\r\n  // const notAssignedButNotAcceptedTasksCount = tasks.filter(\r\n  //   (task) =>\r\n  //     !task.employees.some((taskemp) => taskemp.empemail === email) &&\r\n  //     task.employees.every((taskemp) => taskemp.emptaskStatus !== \"Accepted\")\r\n  // ).length;\r\n\r\n  // const assignedTasksNotAcceptedOnTimeCount = tasks.filter((task) =>\r\n  //   task.employees.some(\r\n  //     (taskemp) =>\r\n  //       taskemp.empemail === email &&\r\n  //       taskemp.emptaskStatus === \"Task Assigned\" &&\r\n  //       calculateRemainingTime(task.endDate).delay\r\n  //   )\r\n  // ).length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid  mt-4\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total New Task\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {pendingTasksCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Accept Task{\" \"}\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {/* {acceptedTasks.length}{\" \"} */}\r\n                    {acceptedTasksCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/leave-application-hr\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"row row-gap-4\"></div> */}\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Complete Task\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {completedTasksCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Reject Task\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {rejectedTasksCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Pending Task\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {assignedTasksCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Overdue Task\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {acceptedTasksNotCompletedOnTimeCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Time complete\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {/* {onTimeTasks} */}\r\n                    {completedTasksOnTimeCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Late Complete\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {/* {onTimeTasks} */}\r\n                    {lateCompletedAcceptedTasksCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-9\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpTaskCount;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Employee\\Dashboard\\EmpChart.jsx\\EmpTaskChart.jsx",["1107","1108","1109","1110","1111","1112","1113","1114","1115"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { FaChartLine } from \"react-icons/fa\";\r\nimport \"./chart.css\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst EmpTaskChart = (props) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const id = localStorage.getItem(\"_id\");\r\n\r\n  useEffect(() => {\r\n    const loadPersonalInfoData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/personal-info/${id}`,\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        );\r\n        setEmail(response.data.Email);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n\r\n    loadPersonalInfoData();\r\n  }, []);\r\n\r\n  const calculateRemainingTime = (endDate) => {\r\n    const now = new Date();\r\n    const endDateTime = new Date(endDate);\r\n    let remainingTime = endDateTime - now;\r\n\r\n    if (remainingTime < 0) {\r\n      remainingTime = Math.abs(remainingTime);\r\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\r\n    } else {\r\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\r\n      );\r\n      return { delay: false, days, hours, minutes };\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"${BASE_URL}/api/tasks\");\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      setError(\"Error fetching tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n      setTimeout(fetchData, 60000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    return () => clearTimeout();\r\n  }, []);\r\n\r\n  // Count of different task statuses for the current employee\r\n  const acceptedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Accepted\"\r\n    )\r\n  ).length;\r\n\r\n  const rejectedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Rejected\"\r\n    )\r\n  ).length;\r\n\r\n  const completedTasksCount = tasks.filter(\r\n    (task) =>\r\n      task.status === \"Pending\" &&\r\n      task.employees.some((emp) => emp.emptaskStatus === \"Completed\")\r\n  ).length;\r\n\r\n  const pendingTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) => taskemp.empemail === email && task.status === \"Pending\"\r\n    )\r\n  ).length;\r\n\r\n  const assignedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Task Assigned\"\r\n    )\r\n  ).length;\r\n\r\n  const acceptedTasksNotCompletedOnTimeCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Accepted\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const completedTasksOnTimeCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Completed\" &&\r\n        !calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const lateCompletedAcceptedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Accepted\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const lateCompletedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Completed\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const barChartData = {\r\n    options: {\r\n      chart: {\r\n        id: \"bar\"\r\n      },\r\n      fill: {\r\n        colors: [\"var(--primaryDashColorDark)\"]\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"New Task\",\r\n          \"Pending\",\r\n          \"Accept\",\r\n          \"Complete\",\r\n          \"Reject\",\r\n          \"Overdue\",\r\n          \"Ontime C\",\r\n          \"Late C\"\r\n        ],\r\n        labels: {\r\n          style: {\r\n            fontSize: \"8px\"\r\n          }\r\n        }\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            fontSize: \"14px\"\r\n          }\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: \"50%\"\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Total Task\",\r\n        data: [\r\n          pendingTasksCount,\r\n          assignedTasksCount,\r\n          acceptedTasksCount,\r\n          completedTasksCount,\r\n          rejectedTasksCount,\r\n          acceptedTasksNotCompletedOnTimeCount,\r\n          completedTasksOnTimeCount,\r\n          lateCompletedAcceptedTasksCount\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2 pb-0\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Task Progress Report\r\n        </h6>\r\n      </div>\r\n      <div className=\"chartBody\">\r\n        <Chart\r\n          options={barChartData.options}\r\n          series={barChartData.series}\r\n          type=\"bar\"\r\n          height=\"340px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpTaskChart;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Chart\\DepartmentChart.jsx",["1116"],"import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./chart.css\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst DepartmentChart = () => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [chartOption, setChartOption] = useState({\r\n    options: {\r\n      labels: [],\r\n      legend: {\r\n        position: \"bottom\"\r\n      },\r\n      fill: {\r\n        colors: [\r\n          \"#008DDA\",\r\n          \"#4CCD99\",\r\n          \"#FFC700\",\r\n          \"#FF407D\",\r\n          \"#9F70FD\",\r\n          \"#FE7A36\"\r\n        ]\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    series: []\r\n  });\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map(\r\n              (data) => data[\"department\"][0]?.DepartmentName || \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const updateChartOptions = () => {\r\n    const departmentCounts = {};\r\n    departmentData.forEach((department) => {\r\n      departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n    });\r\n\r\n    const labels = Object.keys(departmentCounts);\r\n    const series = labels.map((label) => departmentCounts[label]);\r\n\r\n    setChartOption({\r\n      options: {\r\n        labels: labels,\r\n        fill: {\r\n          colors: [\r\n            \"#008DDA\",\r\n            \"#4CCD99\",\r\n            \"#FFC700\",\r\n            \"#FF407D\",\r\n            \"#9F70FD\",\r\n            \"#FE7A36\"\r\n          ]\r\n        },\r\n        legend: {\r\n          position: \"bottom\",\r\n          labels: {\r\n            colors: [\r\n              \"#008DDA\",\r\n              \"#4CCD99\",\r\n              \"#FFC700\",\r\n              \"#FF407D\",\r\n              \"#9F70FD\",\r\n              \"#FE7A36\"\r\n            ]\r\n          }\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                colors: [\r\n                  \"#008DDA\",\r\n                  \"#4CCD99\",\r\n                  \"#FFC700\",\r\n                  \"#FF407D\",\r\n                  \"#9F70FD\",\r\n                  \"#FE7A36\"\r\n                ],\r\n                show: true,\r\n                total: {\r\n                  show: true,\r\n                  colors: [\r\n                    \"#008DDA\",\r\n                    \"#4CCD99\",\r\n                    \"#FFC700\",\r\n                    \"#FF407D\",\r\n                    \"#9F70FD\",\r\n                    \"#FE7A36\"\r\n                  ]\r\n                }\r\n              },\r\n              colors: [\r\n                \"#008DDA\",\r\n                \"#4CCD99\",\r\n                \"#FFC700\",\r\n                \"#FF407D\",\r\n                \"#9F70FD\",\r\n                \"#FE7A36\"\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: series\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateChartOptions();\r\n  }, [departmentData]);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2\">\r\n        <div className=\"ChartHeader\">\r\n          <h6\r\n            style={{\r\n              width: \"fit-content\",\r\n              boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n              color: \"var(--primaryDashColorDark)\"\r\n            }}\r\n            className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n          >\r\n            Employee By Department\r\n          </h6>\r\n        </div>\r\n        <Chart\r\n          options={chartOption.options}\r\n          series={chartOption.series}\r\n          type=\"donut\"\r\n          width=\"100%\"\r\n          height=\"380\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepartmentChart;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\LeaveCalendar\\HolidayList.jsx",["1117","1118"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Chart\\TaskChart.jsx",["1119","1120","1121","1122"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { FaChartLine } from \"react-icons/fa\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst TaskChart = () => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map(\r\n              (data) => data[\"department\"][0]?.DepartmentName || \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadTaskData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      setError(\"Error fetching tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n    loadTaskData();\r\n\r\n    return () => clearTimeout();\r\n  }, []);\r\n\r\n  const departmentCounts = {};\r\n  departmentData.forEach((department) => {\r\n    departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n  });\r\n\r\n  const taskStatusCounts = {\r\n    Total: tasks.length,\r\n    Completed: tasks.filter((task) => task.status === \"Completed\").length,\r\n    Rejected: tasks.filter((task) => task.status === \"Rejected\").length,\r\n    Canceled: tasks.filter((task) => task.status === \"Canceled\").length,\r\n    Active: tasks.filter((task) => task.status === \"Active\").length,\r\n    Pending: tasks.filter((task) => task.status === \"Pending\").length,\r\n    Overdue: tasks.filter((task) => task.status === \"Overdue\").length\r\n  };\r\n\r\n  const chartData = {\r\n    series: [\r\n      {\r\n        name: \"Total Employee\",\r\n        data: Object.values(departmentCounts)\r\n      }\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"40%\",\r\n          endingShape: \"rounded\"\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(departmentCounts),\r\n        title: {\r\n          text: \"Department Wise Employee\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Employee\"\r\n        }\r\n      },\r\n\r\n      fill: {\r\n        opacity: 1,\r\n        colors: [\"rgb(100, 150, 200)\"]\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter: function (val) {\r\n            return \" \" + val + \"\";\r\n          }\r\n        },\r\n        markers: {\r\n          colors: \"yellow\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const taskStatusChartData = {\r\n    options: {\r\n      chart: {\r\n        id: \"task-status-chart\",\r\n        type: \"bar\"\r\n      },\r\n      fill: {\r\n        colors: [\"var(--primaryDashColorDark)\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(taskStatusCounts),\r\n        title: {\r\n          text: \"Task Status\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Tasks\"\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Task Status\",\r\n        data: Object.values(taskStatusCounts)\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2 pb-0\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Task Progress Report\r\n        </h6>\r\n      </div>\r\n      <div className=\"chartBody\">\r\n        <Chart\r\n          options={taskStatusChartData.options}\r\n          series={taskStatusChartData.series}\r\n          type=\"bar\"\r\n          height=\"340px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskChart;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\CountData\\LeavesCount.jsx",["1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\CountData\\EmployeeCount.jsx",["1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CountryForm.jsx",["1158","1159","1160"],"import React, { Component } from \"react\";\nimport \"./CountryForm.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Form,Button,Col,Row } from \"react-bootstrap\";\n// import Form from 'react-bootstrap/Form'\n\n\nclass CountryForm extends Component {\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div>\n  \n        <h2 id=\"role-form-title\">Add Country Details</h2>\n     \n            \n <div id=\"role-form-outer-div\"><Form id=\"form\" onSubmit={this.props.onCountrySubmit}>\n  \n\n\n  <Form.Group as={Row}>\n    <Form.Label column sm={2}>\n    Country\n    </Form.Label>\n    <Col sm={10}  className=\"form-input\">\n      <Form.Control type=\"Text\" placeholder=\"Country\" name=\"Country\" required/>\n    </Col>\n  </Form.Group>\n \n  \n\n  <Form.Group as={Row} id=\"form-submit-button\">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Button type=\"submit\">Submit</Button>\n    </Col>\n  </Form.Group>\n  <Form.Group as={Row} id=\"form-cancel-button\">\n    <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n      <Button type=\"reset\" onClick={this.props.onFormClose}>cancel</Button>\n    </Col>\n  </Form.Group>\n</Form></div>\n\n\n\n\n\n          {/* </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default CountryForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Location\\CountryTable.jsx",["1161","1162","1163","1164","1165"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Salary\\SalaryFormEdit.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Salary\\SalaryForm.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Salary\\SalaryTable.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\EmployeeInfo.jsx",["1166","1167","1168"],"import React, { Component } from \"react\";\nimport \"./EmployeeInfo.css\";\nimport { Button, Col } from \"react-bootstrap\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./EmployeeInfo.css\";\n\nexport class EmployeeInfo extends Component {\n  render() {\n    return (\n      <div>\n        <div\n          onClick={\n            this.props.onBack\n            // console.log(\"back1\")\n          }\n        >\n          {\" \"}\n          <Button variant=\"primary\" id=\"add-button\">\n            Back\n          </Button>\n        </div>\n\n        <h2 id=\"role-title\">\n          Employee Information of{\" \"}\n          {this.props.data[\"FirstName\"] + \" \" + this.props.data[\"LastName\"]}\n        </h2>\n        <div id=\"outer-empingo-div\">\n          <Link to=\"/hr/employee/info/personal-info\">\n            <Button\n              variant=\"outline-primary\"\n              size=\"lg\"\n              block\n              className=\"empinfo-button\"\n            >\n              Personal Information\n            </Button>\n          </Link>\n          <Link to=\"/hr/employee/info/education\">\n            <Button\n              variant=\"outline-primary\"\n              size=\"lg\"\n              block\n              className=\"empinfo-button\"\n            >\n              Education\n            </Button>\n          </Link>\n          <Link to=\"/hr/employee/info/family-info\">\n            <Button\n              variant=\"outline-primary\"\n              size=\"lg\"\n              block\n              className=\"empinfo-button\"\n            >\n              Dependents\n            </Button>\n          </Link>\n          <Link to=\"/hr/employee/info/work-experience\">\n            <Button\n              variant=\"outline-primary\"\n              size=\"lg\"\n              block\n              className=\"empinfo-button\"\n            >\n              Work Experience\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeInfo;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\EmployeeFormEdit.jsx",["1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport \"./EmployeeFormEdit.css\";\nimport BASE_URL from \"../config/config\";\n\nconst EmployeeFormEdit = (props) => {\n  const [roleData, setRoleData] = useState([]);\n  const [positionData, setPositionData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [filterManagerData, setFilterManagerData] = useState([]);\n  const [filterHrData, setFilterHrData] = useState([]);\n  const [rowData, setRowData] = useState([]);\n\n  const [genderData, setGenderData] = useState(props.editData[\"Gender\"]);\n  const [emailData, setEmailData] = useState(props.editData[\"Email\"]);\n  const [firstNameData, setFirstNameData] = useState(\n    props.editData[\"FirstName\"]\n  );\n  // const [middleNameData, setMiddleNameData] = useState(\n  //   props.editData[\"MiddleName\"]\n  // );\n  const [lastNameData, setLastNameData] = useState(props.editData[\"LastName\"]);\n  const [dobData, setDobData] = useState(props.editData[\"DOB\"].slice(0, 10));\n  const [contactNoData, setContactNoData] = useState(\n    props.editData[\"ContactNo\"]\n  );\n  const [profile, setProfile] = useState(props.editData[\"profile\"]);\n  const [employeeCodeData, setEmployeeCodeData] = useState(\n    props.editData[\"EmployeeCode\"]\n  );\n  const [dateOfJoiningData, setDateOfJoiningData] = useState(\n    props.editData[\"DateOfJoining\"].slice(0, 10)\n  );\n\n  useEffect(() => {\n    loadRoleInfo();\n    loadPositionInfo();\n    loadDepartmentInfo();\n    loadEmployeeData();\n  }, []);\n\n  const loadEmployeeData = () => {\n    axios\n      .get(\"http://localhost:4000/api/employee\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        if (Array.isArray(response.data)) {\n          setRowData([]);\n          response.data.forEach((data) => {\n            let temp = {\n              Email: data[\"Email\"],\n              Account:\n                data[\"Account\"] === 1\n                  ? 1\n                  : data[\"Account\"] === 2\n                  ? 2\n                  : data[\"Account\"] === 3\n                  ? 3\n                  : data[\"Account\"] === 4\n                  ? 4\n                  : \"\",\n              FirstName: data[\"FirstName\"],\n              LastName: data[\"LastName\"],\n              empID: data[\"empID\"]\n            };\n\n            // Use set function to update state\n            setRowData((prevData) => [...prevData, temp]);\n          });\n        } else {\n          console.error(\"Data received is not an array:\", response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const loadRoleInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/role`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setRoleData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const loadPositionInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/position`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setPositionData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const loadDepartmentInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/department`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setDepartmentData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const managerFilterHandler = (value) => {\n    console.log(value);\n    if (+value === 2 || +value === 4 || +value === 1) {\n      const data = rowData.filter((val) => {\n        return +val.Account === 1;\n      });\n\n      setFilterManagerData(data);\n    } else if (+value === 3) {\n      const data = rowData.filter((val) => {\n        return +val.Account === 4;\n      });\n\n      setFilterManagerData(data);\n    }\n    const hrData = rowData.filter((val) => {\n      return val.Account === 2;\n    });\n    setFilterHrData(hrData);\n  };\n  console.log(filterHrData);\n\n  const onEmailDataChange = (e) => {\n    setEmailData(e.target.value);\n  };\n\n  const onFirstNameDataChange = (e) => {\n    setFirstNameData(e.target.value);\n  };\n\n  // const onMiddleNameDataChange = (e) => {\n  //   setMiddleNameData(e.target.value);\n  // };\n\n  const onLastNameDataChange = (e) => {\n    setLastNameData(e.target.value);\n  };\n\n  const onContactNoDataChange = (e) => {\n    setContactNoData(e.target.value);\n  };\n\n  const onEmployeeCodeDataChange = (e) => {\n    setEmployeeCodeData(e.target.value);\n  };\n\n  const onGenderChange = (e) => {\n    setGenderData(e.target.value);\n    props.onGenderChange(e);\n  };\n\n  const onDOBDataChange = (e) => {\n    setDobData(e.target.value);\n  };\n\n  const onDateOfJoiningDataChange = (e) => {\n    setDateOfJoiningData(e.target.value);\n  };\n\n  const onProfileDataChange = (e) => {\n    setProfile(e.target.files[0]);\n  };\n\n  const onFormSubmit = (e) => {\n    props.onEmployeeEditUpdate(props.editData, e);\n  };\n\n  const onFormClose = () => {\n    props.onFormEditClose();\n  };\n\n  return (\n    <React.Fragment\n      style={{ height: \"100vh\", width: \"100%\" }}\n      className=\"registration-page py-4\"\n    >\n      <h2\n        id=\"role-form-title\"\n        className=\"text-center text-black text-uppercase fw-bold my-4\"\n      >\n        Edit Employee Details\n      </h2>\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) => props.onEmployeeEditUpdate(props.editData, e)}\n        >\n          <div className=\"d-flex w-100 flex-column gap-2 rounded \">\n            <div className=\"row row-gap-3 \">\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Email\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={emailData}\n                    disabled\n                    onChange={(value) => onEmailDataChange(value)}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Account access\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    as=\"select\"\n                    required\n                    onBlur={(e) => managerFilterHandler(e.target.value)}\n                  >\n                    <option value=\"1\" selected={props.editData[\"Account\"] == 1}>\n                      Admin\n                    </option>\n                    <option value=\"2\" selected={props.editData[\"Account\"] == 2}>\n                      HR\n                    </option>\n                    <option value=\"3\" selected={props.editData[\"Account\"] == 3}>\n                      Employee\n                    </option>\n                    <option value=\"4\" selected={props.editData[\"Account\"] == 4}>\n                      Manager\n                    </option>\n                  </Form.Control>\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Role\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"role\">\n                    <option disabled selected>\n                      Select your option\n                    </option>\n                    {roleData.map((data, index) => (\n                      <option\n                        key={index}\n                        value={data[\"_id\"]}\n                        selected={\n                          props.editData[\"role\"][0][\"_id\"] == data[\"_id\"]\n                        }\n                      >\n                        {data[\"RoleName\"]}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label as=\"legend\" column sm={6}>\n                  Gender\n                </Form.Label>\n                <Col sm={10}>\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"Male\"\n                    value=\"male\"\n                    name=\"gender\"\n                    onChange={onGenderChange}\n                    checked={genderData == \"male\"}\n                    required\n                  />\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"Female\"\n                    value=\"female\"\n                    name=\"gender\"\n                    onChange={onGenderChange}\n                    checked={genderData == \"female\"}\n                    required\n                  />\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  First Name\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    required\n                    value={firstNameData}\n                    onChange={(value) => onFirstNameDataChange(value)}\n                  />\n                </Col>\n              </div>\n              {/* <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Middle Name\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Middle Name\"\n                    required\n                    value={middleNameData}\n                    onChange={(value) => onMiddleNameDataChange(value)}\n                  />\n                </Col>\n              </div> */}\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Last Name\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    required\n                    value={lastNameData}\n                    onChange={(value) => onLastNameDataChange(value)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  DOB\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"DOB\"\n                    required\n                    //   value={this.props.editData[\"DOB\"].slice(0, 10)}\n                    value={dobData}\n                    onChange={(value) => onDOBDataChange(value)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Contact No\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Contact No \"\n                    required\n                    value={contactNoData}\n                    onChange={(value) => onContactNoDataChange(value)}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Department\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"department\" required>\n                    <option value=\"\" disabled selected>\n                      Select your option\n                    </option>\n                    {departmentData.map((data, index) => (\n                      <option\n                        key={index}\n                        value={data[\"_id\"]}\n                        selected={\n                          props.editData[\"department\"][0][\"_id\"] == data[\"_id\"]\n                        }\n                      >\n                        {data[\"DepartmentName\"]}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Position\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"position\" required>\n                    <option value=\"\" disabled selected>\n                      Select your option\n                    </option>\n                    {positionData.map((data, index) => (\n                      <option\n                        key={index}\n                        value={data[\"_id\"]}\n                        selected={\n                          props.editData[\"position\"][0][\"_id\"] == data[\"_id\"]\n                        }\n                      >\n                        {data[\"PositionName\"]}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Date Of Joining\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"Date Of Joining\"\n                    required\n                    // value={this.props.editData[\"DateOfJoining\"].slice(0, 10)}\n                    value={dateOfJoiningData}\n                    onChange={(value) => onDateOfJoiningDataChange(value)}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Profile Image\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"file\"\n                    //  value={profile}\n                    //  onChange={(value) => onProfileDataChange(value)}\n                    // required\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6 p-0\">\n                <Form.Label column sm={12}>\n                  Reporting Manager\n                </Form.Label>\n                <Col sm={12} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"role\">\n                    <option selected>Select your option</option>\n                    {filterManagerData.map((data, index) => (\n                      <option key={index} value={data[\"Email\"]}>\n                        {data[\"Email\"]}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6 p-0\">\n                <Form.Label column sm={12}>\n                  Reporting Hr\n                </Form.Label>\n                <Col sm={12} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"role\">\n                    <option selected>Select your option</option>\n                    {filterHrData.map((data, index) => (\n                      <option key={index} value={data.Email}>\n                        {data.Email}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n\n              <div\n                className=\"form-group col-12 col-md-6\"\n                id=\"form-submit-button\"\n              >\n                <Col sm={{ span: 10, offset: 2 }}>\n                  <Button type=\"submit\">Submit</Button>\n                </Col>\n              </div>\n              <div\n                className=\"form-group col-12 col-md-6\"\n                id=\"form-cancel-button\"\n              >\n                <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                  <Button type=\"reset\" onClick={onFormClose}>\n                    cancel\n                  </Button>\n                </Col>\n              </div>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default EmployeeFormEdit;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\EmployeeForm.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\DepartmentFormEdit.jsx",["1183"],"import React, { Component } from \"react\";\n// import \"./DepartmentFormEdit.css\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass DepartmentForm extends Component {\n  state = {\n    DepartmentData: this.props.editData[\"DepartmentName\"],\n    companyInfo: []\n  };\n  onChange(e) {\n    this.setState({ DepartmentData: e.target.value });\n  }\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // if(response.data.length==0){this.roleObj=[\"temp\"];}\n        // else{\n\n        // }\n        this.companyData = response.data;\n\n        // this.portalsData=this.portalsData.filter((data)=>data[\"Status\"]==1);\n\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Department Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onDepartmentEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"company\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"CompanyName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Department\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Department\"\n                  name=\"DepartmentName\"\n                  required\n                  value={this.state.DepartmentData}\n                  onChange={(value) => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DepartmentForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\DepartmentForm.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\DepartmentTable.jsx",["1184"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nconst DepartmentTable = ({ onAddDepartment, onEditDepartment }) => {\n  const [departmentData, setDepartmentData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDepartmentData();\n  }, []);\n\n  const loadDepartmentData = () => {\n    axios\n      .get(`${BASE_URL}/api/department`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const departmentObj = response.data;\n        console.log(\"response\", response.data);\n        setDepartmentData(departmentObj);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onDepartmentDelete = (id) => {\n    if (window.confirm(\"Are you sure to delete this record ?\")) {\n      axios\n        .delete(`${BASE_URL}/api/department/${id}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadDepartmentData();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status === 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"d-flex justify-between aline-items-start mb-3\">\n        <div className=\"my-auto\">\n          <h3 className=\"fw-bold text-muted\">Department Details</h3>\n        </div>\n        <Button\n          className=\"my-auto\"\n          variant=\"primary shadow-sm\"\n          onClick={onAddDepartment}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Create Department\n        </Button>\n      </div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th>Department</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {departmentData.map((item, index) => (\n            <tr key={index}>\n              <td className=\"text-capitalize fw-bold\">\n                {item.company[0].CompanyName}\n              </td>\n              <td className=\"text-capitalize fw-bold\">{item.DepartmentName}</td>\n              <td>\n                <div className=\"d-flex wrap-nowrap justify-content-end gap-3\">\n                  <span\n                    onClick={() => onEditDepartment(item)}\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Update\"\n                    className=\"text-primary d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                  >\n                    <FontAwesomeIcon icon={faEdit} />\n                    <span>Edit</span>\n                  </span>\n                  <span\n                    onClick={() => onDepartmentDelete(item._id)}\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Delete\"\n                    className=\"text-danger d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                    <span>Delete</span>\n                  </span>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DepartmentTable;\n\n// import React, { Component } from \"react\";\n// import \"./DepartmentTable.css\";\n// import axios from \"axios\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\n// import { Button } from \"react-bootstrap\";\n// import BASE_URL from \"../config/config\";\n\n// class DepartmentTable extends Component {\n//   state = {\n//     departmentData: [],\n//     loading: true\n//   };\n//   departmentObj = [];\n//   rowDataT = [];\n\n//   loadDepartmentData = () => {\n//     axios\n//       .get(`${BASE_URL}/api/department`, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       })\n//       .then((response) => {\n//         this.departmentObj = response.data;\n//         console.log(\"response\", response.data);\n//         this.setState({ departmentData: response.data });\n//         this.setState({ loading: false });\n//         this.rowDataT = [];\n\n//         this.departmentObj.map((data) => {\n//           let temp = {\n//             data,\n//             CompanyName: data[\"company\"][0][\"CompanyName\"],\n//             DepartmentName: data[\"DepartmentName\"]\n//           };\n\n//           this.rowDataT.push(temp);\n//         });\n//         this.setState({ rowData: this.rowDataT });\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };\n\n//   onDepartmentDelete = (e) => {\n//     console.log(e);\n//     if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n//       axios\n//         .delete(`${BASE_URL}/api/department/` + e, {\n//           headers: {\n//             authorization: localStorage.getItem(\"token\") || \"\"\n//           }\n//         })\n//         .then((res) => {\n//           this.componentDidMount();\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//           console.log(err.response);\n//           if (err.response.status == 403) {\n//             window.alert(err.response.data);\n//           }\n//         });\n//     }\n//   };\n//   componentDidMount() {\n//     this.loadDepartmentData();\n//   }\n\n//   renderButton(params) {\n//     console.log(params);\n//     return (\n//       <FontAwesomeIcon\n//         icon={faTrash}\n//         onClick={() => this.onDepartmentDelete(params.data.data[\"_id\"])}\n//       />\n//     );\n//   }\n//   renderEditButton(params) {\n//     console.log(params);\n//     return (\n//       <FontAwesomeIcon\n//         icon={faEdit}\n//         onClick={() => this.props.onEditDepartment(params.data.data)}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"p-4\">\n//         <div className=\"d-flex justify-between aline-items-start mb-3\">\n//           <div className=\" my-auto\">\n//             <h3 className=\"fw-bold text-muted\">Department Details</h3>\n//           </div>\n\n//           <Button\n//             className=\"my-auto\"\n//             variant=\"primary shadow-sm\"\n//             onClick={this.props.onAddDepartment}\n//           >\n//             <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n//             Create Department\n//           </Button>\n//         </div>\n//         <table className=\"table\">\n//           <thead>\n//             <th\n//               style={{\n//                 background: \"var(--primaryDashColorDark)\",\n//                 color: \"var(--primaryDashMenuColor)\"\n//               }}\n//               className=\"py-1\"\n//             >\n//               Company\n//             </th>\n//             <th\n//               style={{\n//                 background: \"var(--primaryDashColorDark)\",\n//                 color: \"var(--primaryDashMenuColor)\"\n//               }}\n//               className=\"py-1\"\n//             >\n//               Department\n//             </th>\n//             <th\n//               style={{\n//                 background: \"var(--primaryDashColorDark)\",\n//                 color: \"var(--primaryDashMenuColor)\"\n//               }}\n//               className=\"py-1\"\n//             >\n//               Action\n//             </th>\n//           </thead>\n\n//           <tbody>\n//             {this.state.departmentData.map((items, index) => (\n//               <tr key={index}>\n//                 <td className=\"text-capitalize fw-bold\">\n//                   {items[\"company\"][0][\"CompanyName\"]}\n//                 </td>\n//                 <td className=\"text-capitalize fw-bold\">\n//                   {items.DepartmentName}\n//                 </td>\n//                 <td>\n//                   <div className=\"d-flex wrap-nowrap justify-content-end gap-3\">\n//                     <span\n//                       onClick={() => this.props.onEditDepartment(items)}\n//                       style={{ cursor: \"pointer\" }}\n//                       title=\"Update\"\n//                       className=\"text-primary d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n//                     >\n//                       <FontAwesomeIcon icon={faEdit} />\n//                       <span>Edit</span>\n//                     </span>\n//                     <span\n//                       onClick={() => this.onDepartmentDelete(items[\"_id\"])}\n//                       style={{ cursor: \"pointer\" }}\n//                       title=\"Delete\"\n//                       className=\"text-danger d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n//                     >\n//                       <FontAwesomeIcon icon={faTrash} />\n//                       <span>Delete</span>\n//                     </span>\n//                   </div>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//       // <div id=\"table-outer-div-scroll\">\n//       //   <h2 id=\"role-title\">Department Details</h2>\n//       //   <Button\n//       //     variant=\"primary\"\n//       //     id=\"add-button\"\n//       //     onClick={this.props.onAddDepartment}\n//       //   >\n//       //     <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n//       //     Add\n//       //   </Button>\n\n//       //   <div id=\"clear-both\" />\n//       //   {!this.state.loading ? (\n//       //     <div\n//       //       id=\"table-div\"\n//       //       className=\"ag-theme-balham\"\n//       //       //   style={\n//       //       //     {\n//       //       //     height: \"500px\",\n//       //       //     width: \"100%\"\n//       //       //   }\n//       //       // }\n//       //     >\n//       //       <AgGridReact\n//       //         columnDefs={this.state.columnDefs}\n//       //         defaultColDef={this.state.defaultColDef}\n//       //         columnTypes={this.state.columnTypes}\n//       //         rowData={this.state.rowData}\n//       //         // floatingFilter={true}\n//       //         // onGridReady={this.onGridReady}\n//       //         pagination={true}\n//       //         paginationPageSize={10}\n//       //         getRowHeight={this.state.getRowHeight}\n//       //       />\n//       //     </div>\n//       //   ) : (\n//       //     <div id=\"loading-bar\">\n//       //       <RingLoader\n//       //         css={override}\n//       //         sizeUnit={\"px\"}\n//       //         size={50}\n//       //         color={\"#0000ff\"}\n//       //         loading={true}\n//       //       />\n//       //     </div>\n//       //   )}\n//       //\n//       // </div>\n//     );\n//   }\n// }\n\n// export default DepartmentTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\PositionFormEdit.jsx",["1185","1186","1187","1188"],"import React, { Component } from \"react\";\n// import \"./PositionForm.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass PositionForm extends Component {\n  state = {\n    PositionData: this.props.editData[\"PositionName\"],\n    companyInfo: []\n  };\n  onChange(e) {\n    this.setState({ PositionData: e.target.value });\n  }\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // if(response.data.length==0){this.roleObj=[\"temp\"];}\n        // else{\n\n        // }\n        this.companyData = response.data;\n\n        // this.portalsData=this.portalsData.filter((data)=>data[\"Status\"]==1);\n\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Position Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onPositionEditUpdate(\n                this.props.editData,\n                e.target[0].value,\n                e.target[1].value\n              )\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"company\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"CompanyName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Position\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Position\"\n                  name=\"PositionName\"\n                  required\n                  value={this.state.PositionData}\n                  onChange={(value) => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PositionForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\PositionForm.jsx",["1189"],"import React, { Component } from \"react\";\nimport \"./PositionForm.css\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass PositionForm extends Component {\n  state = {\n    companyInfo: []\n  };\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.companyData = response.data;\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n  render() {\n    return (\n      <div>\n        <h2 className=\"p-3 fw-bold text-muted text-center mt-3\">\n          Add Position 🪑\n        </h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onPositionSubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                <h5>Company :</h5>\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CompanyName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                <h5>Position :</h5>\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Position\"\n                  name=\"Position\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <div className=\"row mt- \">\n              <div className=\"col-2\"></div>\n\n              <div className=\"col-10 d-flex justify-between \">\n                <button className=\"btn btn-primary\" type=\"submit\">\n                  Submit\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  type=\"reset\"\n                  onClick={this.props.onFormClose}\n                >\n                  cancel\n                </button>\n              </div>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PositionForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\PositionTable.jsx",["1190","1191","1192","1193","1194","1195","1196","1197","1198","1199"],"import React, { Component } from \"react\";\nimport \"./PositionTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\n// import { Button } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\nimport {\n  Form,\n  Button,\n  Col,\n  Row,\n  Table,\n  Dropdown,\n  DropdownButton\n} from \"react-bootstrap\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass PositionTable extends Component {\n  state = {\n    positionData: [],\n    loading: true,\n    totalPositions: 0,\n    rowData: [],\n\n    getRowHeight: function (params) {\n      return 35;\n    }\n  };\n  positionObj = [];\n  rowDataT = [];\n\n  loadPositionData = () => {\n    axios\n      .get(`${BASE_URL}/api/position`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.positionObj = response.data;\n        console.log(\"response\", response.data);\n        this.setState({ positionData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.positionObj.map((data) => {\n          let temp = {\n            data,\n            CompanyName: data[\"company\"][0][\"CompanyName\"],\n            PositionName: data[\"PositionName\"]\n          };\n\n          this.rowDataT.push(temp);\n        });\n        // this.setState({ totalPositions: response.data.length });\n        this.props.updateTotalPositions(response.data.length); // Update this line\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onPositionDelete = (e) => {\n    console.log(e);\n    if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n      axios\n        .delete(`${BASE_URL}/api/position/` + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status == 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n  componentDidMount() {\n    this.loadPositionData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onPositionDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditPosition(params.data.data)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{ height: \"100vh\", width: \"100%\", scrollbarWidth: \"thin\" }}\n        className=\"p-4\"\n      >\n        <div className=\"d-flex justify-between mb-3\">\n          <div>\n            <h2 className=\"fw-bold text-muted my-auto\">Position Details</h2>\n          </div>\n          <Button\n            className=\"my-auto shadow-sm\"\n            variant=\"primary\"\n            onClick={this.props.onAddPosition}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Create Position\n          </Button>\n        </div>\n        <div id=\"clear-both\" />\n        <Table className=\"table\">\n          <thead>\n            <tr>\n              <th\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\"\n                }}\n                className=\"py-1\"\n              >\n                Company\n              </th>\n              <th\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\"\n                }}\n                className=\"py-1\"\n              >\n                Position\n              </th>\n              <th\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\",\n                  textAlign: \"center\"\n                }}\n                className=\"py-1\"\n              >\n                {\" \"}\n                Action\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.positionObj.map((data, index) => (\n              <tr key={index}>\n                <td className=\"text-capitalize fw-bold\">\n                  {data[\"company\"][0][\"CompanyName\"]}\n                </td>\n                <td className=\"text-capitalize fw-bold\">\n                  {data[\"PositionName\"]}\n                </td>\n\n                <td>\n                  <div className=\"d-flex wrap-nowrap justify-content-end gap-3\">\n                    <span\n                      onClick={() => this.props.onEditPosition(data)}\n                      style={{ cursor: \"pointer\" }}\n                      title=\"Update\"\n                      className=\"text-primary d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                    >\n                      <FontAwesomeIcon icon={faEdit} />\n                      <span>Edit</span>\n                    </span>\n                    <span\n                      onClick={() => this.onPositionDelete(data[\"_id\"])}\n                      style={{ cursor: \"pointer\" }}\n                      title=\"Delete\"\n                      className=\"text-danger d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                      <span>Delete</span>\n                    </span>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default PositionTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\RoleForm.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\RoleFormEdit.jsx",["1200"],"import React, { Component } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass RoleForm extends Component {\n  state = {\n    RoleData: this.props.editData[\"RoleName\"],\n    companyInfo: []\n  };\n  onChange(e) {\n    this.setState({ RoleData: e.target.value });\n  }\n\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.companyData = response.data;\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Role Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onRoleEditUpdate(\n                this.props.editData,\n                e.target[0].value,\n                e.target[1].value\n              )\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"company\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"CompanyName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Role\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Role\"\n                  name=\"RoleName\"\n                  required\n                  value={this.state.RoleData}\n                  onChange={(value) => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RoleForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\Department\\RoleTable.jsx",["1201","1202","1203"],"import React, { Component } from \"react\";\nimport \"./RoleTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass RoleTable extends Component {\n  state = {\n    roleData: [],\n    loading: true,\n    updateTotalRole: \"\",\n\n    rowData: [],\n\n    getRowHeight: function (params) {\n      return 35;\n    }\n  };\n  roleObj = [];\n  rowDataT = [];\n\n  loadRoleData = () => {\n    axios\n      .get(`${BASE_URL}/api/role`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.roleObj = response.data;\n\n        console.log(\"response\", response.data);\n        this.setState({ roleData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.roleObj.map((data) => {\n          let temp = {\n            data,\n            CompanyName: data[\"company\"][0][\"CompanyName\"],\n            RoleName: data[\"RoleName\"]\n          };\n\n          this.rowDataT.push(temp);\n        });\n\n        this.props.updateTotalRole(response.data.length);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onRoleDelete = (e) => {\n    console.log(e);\n    if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n      axios\n        .delete(`${BASE_URL}/api/role/` + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status == 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n\n  componentDidMount() {\n    this.loadRoleData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onRoleDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditRole(params.data.data)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{ height: \"100vh\", width: \"100%\", scrollbarWidth: \"thin\" }}\n        className=\"p-4\"\n      >\n        <div className=\"d-flex justify-between aline-items-start mb-3\">\n          <div className=\" my-auto\">\n            <h3 className=\"fw-bold text-muted\">Role Details</h3>\n          </div>\n\n          <Button\n            variant=\"primary\"\n            className=\"my-auto shadow-sm\"\n            onClick={this.props.onAddRole}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Create Role\n          </Button>\n        </div>\n        <div id=\"clear-both\" />\n        {!this.state.loading ? (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Company\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Role\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    textAlign: \"center\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Action\n                </th>\n              </tr>\n            </thead>\n\n            {!this.state.loading ? (\n              <React.Fragment>\n                {this.roleObj.map((data, index) => (\n                  <tbody key={index}>\n                    <tr>\n                      <td className=\"fw-bold text-capitalize\">\n                        {data[\"company\"][0][\"CompanyName\"]}\n                      </td>\n                      <td className=\"fw-bold text-capitalize\">\n                        {data[\"RoleName\"]}\n                      </td>\n\n                      <td>\n                        <div className=\"d-flex wrap-nowrap justify-content-end gap-3\">\n                          <span\n                            onClick={() => this.props.onEditRole(data)}\n                            style={{ cursor: \"pointer\" }}\n                            title=\"Update\"\n                            className=\"text-primary d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                          >\n                            <FontAwesomeIcon icon={faEdit} />\n                            <span>Edit</span>\n                          </span>\n                          <span\n                            onClick={() => this.onRoleDelete(data[\"_id\"])}\n                            style={{ cursor: \"pointer\" }}\n                            title=\"Delete\"\n                            className=\"text-danger d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                          >\n                            <FontAwesomeIcon icon={faTrash} />\n                            <span>Delete</span>\n                          </span>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </React.Fragment>\n            ) : (\n              <tbody>\n                <tr>\n                  <td />\n                  <td>\n                    <div id=\"loading-bar\">\n                      <RingLoader\n                        css={override}\n                        sizeUnit={\"px\"}\n                        size={150}\n                        color={\"#0000ff\"}\n                        loading={true}\n                      />\n                    </div>\n                  </td>\n                  <td />\n                  <td />\n                </tr>\n              </tbody>\n            )}\n          </table>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default RoleTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\AddEmployee\\UpcomingBirthdays.jsx",["1204","1205","1206","1207","1208","1209","1210","1211","1212"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\attendance\\SelfAttendance.jsx",["1213","1214","1215","1216","1217","1218"],"import React, { useState, useEffect, memo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport { MdOutlineRefresh } from \"react-icons/md\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst SelfAttendance = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n  const empMail = localStorage.getItem(\"Email\");\r\n  const employeeId = localStorage.getItem(\"_id\");\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     fetchEmployees();\r\n  //   }, []);\r\n\r\n  //   const fetchEmployees = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(\"${BASE_URL}/api/employee\", {\r\n  //         headers: {\r\n  //           authorization: localStorage.getItem(\"token\") || \"\"\r\n  //         }\r\n  //       });\r\n  //       setEmployees(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching employees:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  // const handleFetchAttendance = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `${BASE_URL}/api/attendance/${employeeId}`,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n  //         }\r\n  //       }\r\n  //     );\r\n  //     let singleUser = response.data.filter((val) => {\r\n  //       return val.employeeObjID._id === employeeId;\r\n  //     });\r\n  //     setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching attendance data:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // setIsButtonClicked(true);\r\n  useEffect(() => {\r\n    const handleFetchAttendance = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/attendance/${employeeId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n            }\r\n          }\r\n        );\r\n\r\n        let singleUser = response.data.filter((val) => {\r\n          return val.employeeObjID && val.employeeObjID.Email === empMail;\r\n        });\r\n\r\n        setAttendanceData(() => {\r\n          return singleUser.length > 0 ? singleUser[0] : null;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching attendance data:\", error);\r\n      }\r\n    };\r\n\r\n    handleFetchAttendance();\r\n  }, [employeeId, empMail]);\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {/* <div className=\"d-flex gap-3 \">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  🪪 ({employee.empID}) {employee.FirstName}-{employee.LastName}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          Fetch Attendance\r\n        </button>\r\n      </div> */}\r\n      <div className=\"d-flex gap-3 justify-content-between\">\r\n        {/* <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  <p>\r\n                    🪪 ({employee.empID}) {employee.FirstName}\r\n                  </p>\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div> */}\r\n        {/* <button\r\n          disabled={!employeeId}\r\n          style={{ display: \"flex\", alignItems: \"center\", gap: \".5rem\" }}\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          <MdOutlineRefresh\r\n            className={`fs-4 ${isButtonClicked ? \"rotate\" : \"\"}`}\r\n          />{\" \"}\r\n          Get\r\n        </button> */}\r\n      </div>\r\n\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">\r\n                <th className=\"bg-dark text-white text-center\">Date</th>\r\n                <th className=\"bg-dark text-white text-center\">Status</th>\r\n                <th className=\"bg-dark text-white\">Login Time</th>\r\n                <th className=\"bg-dark text-white\">Logout Time</th>\r\n                <th className=\"bg-dark text-white\">Break</th>\r\n                <th className=\"bg-dark text-white\">Total Login</th>\r\n                <th className=\"bg-dark text-white\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`} // Assign unique ID to each row\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <span className=\"fw-bold bg-info py-1 px-2  shadow-sm text-white\">\r\n                              {date.date}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"center\" }}\r\n                          >\r\n                            {getAttendanceMark(date)}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ scale: \"0.7\" }}\r\n                                className=\"bg-warning py-0  text-white  px-2 rounded-5 my-auto\"\r\n                              >\r\n                                {date.breakTime.length}\r\n                              </span>\r\n                              <span className=\"fw-bold text-dark fs-6\">\r\n                                {millisecondsToTime(date.totalBrake)}\r\n                              </span>{\" \"}\r\n                              <FaCircleInfo\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"text-info \"\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{ zIndex: \"5\", right: \"0%\" }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering &&\r\n                                hoveredDate === date.date && ( // Check if info button is hovered and the date is the hovered date\r\n                                  <table className=\"table table-bordered table-striped\">\r\n                                    <thead>\r\n                                      <tr className=\"shadow-sm p-0\">\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Break\r\n                                        </th>\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Resume\r\n                                        </th>\r\n                                        <th\r\n                                          className=\"text-end  py-0 bg-info text-white\"\r\n                                          style={{ whiteSpace: \"pre\" }}\r\n                                        >\r\n                                          Total Break\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {date.breakTime.map(\r\n                                        (breakTime, index) => (\r\n                                          <tr className=\"shadow-sm\" key={index}>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {breakTime}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {date.ResumeTime[index]}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-end py-1 \"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {millisecondsToTime(\r\n                                                date.BreakData[index]\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                )}\r\n                            </div>\r\n                          </td>\r\n                          <td>{millisecondsToTime(date.totalLogAfterBreak)}</td>\r\n                          <td>{date.status}</td>\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(SelfAttendance);\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\LeaveCalendar\\Container.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminPortalForm.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\AdminPortalTable.jsx",["1219","1220","1221","1222"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminPortalForm.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass AdminPortalTable extends Component {\n  state = {\n    portalData: [],\n    loading: true\n  };\n  portalObj = [];\n  rowDataT = [];\n\n  loadPortalData = () => {\n    axios\n      .get(\"http://localhost:4000/api/admin/portal\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.portalObj = response.data;\n        // }\n        console.log(\"response\", response.data);\n        this.setState({ portalData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.portalObj.map((data) => {\n          let temp = {\n            data,\n            PortalName: data[\"PortalName\"],\n            Status: data[\"Status\"] == 1 ? \"enable\" : \"disable\"\n          };\n\n          this.rowDataT.push(temp);\n        });\n        this.setState({ rowData: this.rowDataT });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onPortalDelete = (e) => {\n    console.log(e);\n    if (\n      window.confirm(\n        \"Are you sure to delete this record,It Will Delete All Projects Related to This Portal? \"\n      ) == true\n    ) {\n      axios\n        .delete(\"http://localhost:4000/api/admin/portal/\" + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  componentDidMount() {\n    this.loadPortalData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onPortalDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditPortal(params.data.data)}\n      />\n    );\n  }\n\n  Status = (s) => {\n    if (s == 1) {\n      return \"enabled\";\n    } else {\n      return \"disabled\";\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"p-4\">\n        <div className=\"d-flex justify-between aline-items-start mb-3\">\n          <div className=\" my-auto\">\n            <h3 className=\"fw-bold text-muted\">Portal Details</h3>\n            <p className=\"text-muted\">\n              You can create new bid and view all Bidding details of the\n              companies here !\n            </p>\n          </div>\n\n          <Button\n            className=\"my-auto\"\n            variant=\"primary\"\n            id=\"add-button\"\n            onClick={this.props.onAddPortal}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Add new Details\n          </Button>\n        </div>\n        <div id=\"clear-both\" />\n\n        {!this.state.loading ? (\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                >\n                  Portal\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                >\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.portalData.map((items, index) => (\n                <tr key={index}>\n                  <td>{items.PortalName}</td>\n                  <td>{items.Status}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AdminPortalTable;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\attendance\\Attendance.jsx",["1223","1224","1225","1226","1227"],"// import React, { useEffect, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\n\r\n// function SetLog() {\r\n//   // const [employees, setEmployees] = useState([]);\r\n//   // const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n//   // const [attencenceID, setAttencenceID] = useState(\"\");\r\n//   // const [message, setMessage] = useState(\"\");\r\n\r\n//   const {employees, setEmployees, selectedEmployee, setSelectedEmployee, attencenceID, setAttencenceID, message, setMessage} = useContext(AttendanceContext)\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:4000/api/employee\", {\r\n//           headers: {\r\n//             authorization: localStorage.getItem(\"token\") || \"\",\r\n//           },\r\n//         });\r\n//         setEmployees(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching employees:\", error);\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleUserChange = (employeeID) => {\r\n//     const selectedEmployee = employees.find(\r\n//       (employee) => employee._id === employeeID\r\n//     );\r\n\r\n//     if (selectedEmployee) {\r\n//       setAttencenceID(selectedEmployee.attendanceObjID);\r\n//       setSelectedEmployee(employeeID);\r\n//       getMessage(employeeID);\r\n//     }\r\n//   };\r\n\r\n//   const getMessage = async (employeeID) => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:4000/api/attendance/${employeeID}`\r\n//       );\r\n//       const lastEntry = response.data[response.data.length - 1];\r\n\r\n//       if (lastEntry) {\r\n//         setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\r\n//       } else {\r\n//         setMessage(\"\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching attendance data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogin = async () => {\r\n//     try {\r\n//       if (!selectedEmployee) {\r\n//         setMessage(\"Please select a user\");\r\n//         return;\r\n//       }\r\n\r\n//       const currentTime = new Date().toLocaleTimeString();\r\n//       await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n//         employeeId: selectedEmployee,\r\n//         year: new Date().getFullYear(),\r\n//         month: new Date().getMonth() + 1,\r\n//         date: new Date().getDate(),\r\n//         loginTime: [currentTime],\r\n//         status: \"login\",\r\n//       });\r\n//       setMessage(\"Login time recorded successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error recording login time:\", error);\r\n//       setMessage(\"Error recording login time\");\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     try {\r\n//       if (!selectedEmployee) {\r\n//         setMessage(\"Please select an employee\");\r\n//         return;\r\n//       }\r\n\r\n//       const currentTime = new Date().toLocaleTimeString();\r\n//       await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n//         employeeId: selectedEmployee,\r\n//         year: new Date().getFullYear(),\r\n//         month: new Date().getMonth() + 1,\r\n//         date: new Date().getDate(),\r\n//         logoutTime: [currentTime],\r\n//         status: \"logout\",\r\n//       });\r\n//       setMessage(\"Logout time recorded successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error recording logout time:\", error);\r\n//       setMessage(\"Error recording logout time\");\r\n//     }\r\n//   };\r\n\r\n//   const handleResume = async () => {\r\n//     try {\r\n//       if (!selectedEmployee) {\r\n//         setMessage(\"Please select an employee\");\r\n//         return;\r\n//       }\r\n\r\n//       const currentTime = new Date().toLocaleTimeString();\r\n//       const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n//       await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n//         employeeId: selectedEmployee,\r\n//         year: new Date().getFullYear(),\r\n//         month: new Date().getMonth() + 1,\r\n//         date: new Date().getDate(),\r\n//         ResumeTime: [currentTime],\r\n//         resumeTimeMS: [currentTimeMs],\r\n//         status: \"resume\",\r\n//       });\r\n\r\n//       setMessage(\"Resumed time recorded successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error recording resume time:\", error);\r\n//       setMessage(\"Error recording resume time\");\r\n//     }\r\n//   };\r\n\r\n//   const handleBreak = async () => {\r\n//     try {\r\n//       if (!selectedEmployee) {\r\n//         setMessage(\"Please select an employee\");\r\n//         return;\r\n//       }\r\n\r\n//       const currentTime = new Date().toLocaleTimeString();\r\n//       const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n//       await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n//         employeeId: selectedEmployee,\r\n//         year: new Date().getFullYear(),\r\n//         month: new Date().getMonth() + 1,\r\n//         date: new Date().getDate(),\r\n//         breakTime: [currentTime],\r\n//         breakTimeMs: [currentTimeMs],\r\n//         status: \"break\",\r\n//       });\r\n//       setMessage(\"Break time recorded successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error recording break time:\", error);\r\n//       setMessage(\"Error recording break time\");\r\n//     }\r\n//   };\r\n\r\n//   console.log(employees);\r\n\r\n//   return (\r\n//     <div className=\"App row\">\r\n//       <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\r\n//       <div\r\n//         className=\"form-control d-flex  gap-3 p-3 m-3\"\r\n//         style={{ height: \"fit-content\" }}\r\n//       >\r\n//         <select\r\n//           className=\"form-select mx-2 w-25 \"\r\n//           onChange={(e) => handleUserChange(e.target.value)}\r\n//         >\r\n//           <option value=\"\">-- Select User --</option>\r\n//           {employees.map((employee) => (\r\n//             <option key={employee._id} value={employee._id}>\r\n//               {employee.FirstName}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         <div className=\"d-flex gap-3\">\r\n//           <button className=\"btn btn-success\" onClick={handleLogin}>\r\n//             Login\r\n//           </button>\r\n//           <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n//             Logout\r\n//           </button>\r\n//           <div className=\"d-flex gap-3\">\r\n//             <button className=\"btn btn-warning\" onClick={handleBreak}>\r\n//               Break\r\n//             </button>\r\n//             <button className=\"btn btn-primary\" onClick={handleResume}>\r\n//               Resume\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SetLog;\r\n\r\nimport React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport SelfAttendance from \"./SelfAttendance\";\r\nimport Moment from \"moment\";\r\n\r\nfunction SetLog(props) {\r\n  // const [employees, setEmployees] = useState([]);\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n  // const [attencenceID, setAttencenceID] = useState(\"\");\r\n  // const [message, setMessage] = useState(\"\");\r\n  const [empName, setEmpName] = useState(null);\r\n\r\n  const {\r\n    employees,\r\n    setEmployees,\r\n    selectedEmployee,\r\n    setSelectedEmployee,\r\n    attencenceID,\r\n    setAttencenceID,\r\n    message,\r\n    setMessage\r\n  } = useContext(AttendanceContext);\r\n\r\n  useEffect(() => {\r\n    const loadEmployeeData = async (email) => {\r\n      await axios\r\n        .get(\"http://localhost:4000/api/employee\", {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((response) => {\r\n          // Ensure that response.data is an array\r\n          let hr = response.data.filter((val) => {\r\n            return val.Account === 2;\r\n          });\r\n          setEmployees(hr);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    loadEmployeeData();\r\n  }, []);\r\n  // hello\r\n\r\n  useEffect(() => {\r\n    const loadPersonalInfoData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:4000/api/personal-info/\" + props.data[\"_id\"],\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        );\r\n        console.log(response.data.FirstName);\r\n        setEmpName(response.data.FirstName);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n\r\n    loadPersonalInfoData();\r\n  }, []);\r\n\r\n  // hello\r\n  const handleUserChange = (employeeID) => {\r\n    const selectedEmployee = employees.find(\r\n      (employee) => employee._id === employeeID\r\n    );\r\n\r\n    if (selectedEmployee) {\r\n      setAttencenceID(selectedEmployee.attendanceObjID);\r\n      setSelectedEmployee(employeeID);\r\n      getMessage(employeeID);\r\n    }\r\n  };\r\n\r\n  const getMessage = async (employeeID) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:4000/api/attendance/${employeeID}`\r\n      );\r\n      const lastEntry = response.data[response.data.length - 1];\r\n\r\n      if (lastEntry) {\r\n        setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\r\n      } else {\r\n        setMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    console.log(data);\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select a user\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = Moment().filter(\"HH:mm:ss\");\r\n      await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        loginTime: [currentTime],\r\n        status: \"login\"\r\n      });\r\n      setMessage(\"Login time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording login time:\", error);\r\n      setMessage(\"Error recording login time\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select an employee\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = Moment().filter(\"HH:mm:ss\");\r\n      await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        logoutTime: [currentTime],\r\n        status: \"logout\"\r\n      });\r\n      setMessage(\"Logout time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording logout time:\", error);\r\n      setMessage(\"Error recording logout time\");\r\n    }\r\n  };\r\n\r\n  const handleResume = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().filter(\"HH:mm:ss\");\r\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n        await axios.post(\r\n          `http://localhost:4000/api/attendance/${attencenceID}`,\r\n          {\r\n            employeeId: selectedEmployee,\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            date: new Date().getDate(),\r\n            ResumeTime: [currentTime],\r\n            resumeTimeMS: [currentTimeMs],\r\n            status: \"resume\"\r\n          }\r\n        );\r\n\r\n        setMessage(\"Resumed time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording resume time:\", error);\r\n        setMessage(\"Error recording resume time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBreak = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      console.log(email);\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().filter(\"HH:mm:ss\");\r\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n        await axios.post(\r\n          `http://localhost:4000/api/attendance/${attencenceID}`,\r\n          {\r\n            employeeId: selectedEmployee,\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            date: new Date().getDate(),\r\n            breakTime: [currentTime],\r\n            breakTimeMs: [currentTimeMs],\r\n            status: \"break\"\r\n          }\r\n        );\r\n        setMessage(\"Break time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording break time:\", error);\r\n        setMessage(\"Error recording break time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(employees);\r\n\r\n  return (\r\n    <div className=\"App row\">\r\n      <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\r\n      <div\r\n        className=\"form-control d-flex  gap-3 p-3 m-3\"\r\n        style={{ height: \"fit-content\" }}\r\n      >\r\n        {/* <select\r\n          className=\"form-select mx-2 w-25 \"\r\n          onChange={(e) => handleUserChange(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select User --</option>\r\n          {employees.map((employee) => (\r\n            <option key={employee._id} value={employee._id}>\r\n              {employee.FirstName}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n        <input value={empName} style={{ display: \"none\" }} />\r\n\r\n        <div className=\"d-flex gap-3\">\r\n          <button className=\"btn btn-success\" onClick={handleLogin}>\r\n            Mark Attendance\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n          <div className=\"d-flex gap-3\">\r\n            <button className=\"btn btn-warning\" onClick={handleBreak}>\r\n              Break\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleResume}>\r\n              Resume\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && <p>{message}</p>}\r\n\r\n      <div className=\"view\">\r\n        <SelfAttendance />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetLog;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerCompletedTask.jsx",["1228"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerActiveTask.jsx",["1229","1230","1231","1232","1233","1234","1235","1236","1237","1238"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerRejectedTask.jsx",["1239","1240"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerCencelledTask.jsx",["1241"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\ManagerTaskManagement\\ManagerNewTask.jsx",["1242","1243"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\LeaveApplicationHR.jsx",["1244","1245"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\ManagerDash.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Notification\\NoticeBoard.jsx",["1246","1247"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\Chart\\DailyAttendChart.jsx",["1248","1249","1250","1251","1252","1253","1254","1255","1256","1257"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nconst DailyAttendChart = () => {\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [statusCounts, setStatusCounts] = useState({\r\n    Present: 0,\r\n    Late: 0,\r\n    \"Half Day\": 0,\r\n    Absent: 0\r\n  });\r\n\r\n  const [chartOption, setChartOption] = useState({\r\n    options: {\r\n      labels: [\"Late\", \"Present\", \"Half Day\", \"Absent\"],\r\n      colors: [\"#FFC764\", \"#00FFAB\", \"#FF884B\", \"#F65A83\"],\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      statusCounts.Late,\r\n      statusCounts.Present,\r\n      statusCounts[\"Half Day\"],\r\n      statusCounts.Absent\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchAttendanceData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:4000/api/todays-attendance\"\r\n        );\r\n        setAttendanceData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching today's attendance data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAttendanceData();\r\n  }, []);\r\n\r\n  const Today = () => {\r\n    const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\r\n    return new Date()\r\n      .toLocaleDateString(undefined, options)\r\n      .split(\"/\")\r\n      .reverse()\r\n      .join(\"-\");\r\n  };\r\n\r\n  const today = new Date();\r\n  const yyyy = today.getFullYear();\r\n  let mm = today.getMonth() + 1;\r\n  let dd = today.getDate();\r\n  if (dd < 10) dd = \"0\" + dd;\r\n  if (mm < 10) mm = \"0\" + mm;\r\n  let dayCurrent = today.getDay();\r\n\r\n  console.log(\"Today's Date:\", `${dd}-${mm}-${yyyy}`);\r\n  console.log(\"Day of the Week:\", dayCurrent);\r\n\r\n  useEffect(() => {\r\n    const counts = attendanceData.reduce(\r\n      (acc, user) => {\r\n        const mark = getAttendanceMark(user);\r\n        acc[mark]++;\r\n        return acc;\r\n      },\r\n      { Late: 0, Present: 0, \"Half Day\": 0, Absent: 0 }\r\n    );\r\n\r\n    setStatusCounts(counts);\r\n  }, [attendanceData]);\r\n\r\n  useEffect(() => {\r\n    setChartOption({\r\n      options: {\r\n        labels: [\"Late\", \"Present\", \"Half Day\", \"Absent\"],\r\n        colors: [\"#FFC764\", \"#00FFAB\", \"#FF884B\", \"#F65A83\"],\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  show: true\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: [\r\n        statusCounts.Late,\r\n        statusCounts.Present,\r\n        statusCounts[\"Half Day\"],\r\n        statusCounts.Absent\r\n      ]\r\n    });\r\n  }, [statusCounts]);\r\n\r\n  const getAttendanceMark = (user) => {\r\n    const loginTime = user.attendance && user.attendance.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute >= 45)) {\r\n        return \"Half Day\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"Late\";\r\n      }\r\n    }\r\n    return loginTime ? \"Present\" : \"Absent\";\r\n  };\r\n  const status = (s) => {\r\n    if (s == 0) {\r\n      return \"Sunday\";\r\n    }\r\n    if (s == 1) {\r\n      return \"Monday\";\r\n    }\r\n    if (s == 2) {\r\n      return \"Tuesday\";\r\n    }\r\n    if (s == 3) {\r\n      return \"Wednedsy\";\r\n    }\r\n    if (s == 4) {\r\n      return \"Thrusday\";\r\n    }\r\n    if (s == 5) {\r\n      return \"Friday\";\r\n    }\r\n    if (s == 6) {\r\n      return \"Saturday\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ChartCard shadow-sm \">\r\n        <div className=\"ChartHeader\">\r\n          <div className=\"d-flex justify-content-between \">\r\n            <h4 className=\"fw-bolder my-auto text-white \">\r\n              Today's Attendance\r\n            </h4>\r\n            <span className=\"p-0 fw-bolder fs-6 text-muted d-flex flex-column \">\r\n              <span className=\"m-0 p-0 fs-6 text-center bg-white shadow-sm rounded-5 px-2\">\r\n                {\" \"}\r\n                <span className=\"fw-bold\">{dd}</span>-\r\n                <span className=\"fw-bold\">{mm}</span>-\r\n                <span className=\"fw-bold\">{yyyy}</span>\r\n              </span>\r\n              {/* <span className=\"text-uppercase m-0 p-0 text-primary fs-4 text-center\">\r\n                {status(dayCurrent)}\r\n              </span> */}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <Chart\r\n          options={chartOption.options}\r\n          series={chartOption.series}\r\n          type=\"donut\"\r\n          width=\"100%\"\r\n          height=\"300px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyAttendChart;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import Chart from \"react-apexcharts\";\r\n\r\n// const DailyAttendChart = () => {\r\n//   const [attendanceData, setAttendanceData] = useState([]);\r\n//   const [statusCounts, setStatusCounts] = useState({\r\n//     Present: 0,\r\n//     Late: 0,\r\n//     \"Half Day\": 0,\r\n//     Absent: 0\r\n//   });\r\n\r\n//   const [chartOption, setChartOption] = useState({\r\n//     options: {\r\n//       labels: [\"Present\", \"Late\", \"Half Day\", \"Absent\"],\r\n//       colors: [\"#008000\", \"#FFA500\", \"#FFD700\", \"#FF0000\"],\r\n//       plotOptions: {\r\n//         pie: {\r\n//           donut: {\r\n//             labels: {\r\n//               show: true,\r\n//               total: {\r\n//                 show: true\r\n//               }\r\n//             }\r\n//           }\r\n//         }\r\n//       }\r\n//     },\r\n//     series: [\r\n//       statusCounts.Present,\r\n//       statusCounts.Late,\r\n//       statusCounts[\"Half Day\"],\r\n//       statusCounts.Absent\r\n//     ]\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchAttendanceData = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           \"http://localhost:4000/api/todays-attendance\"\r\n//         );\r\n//         setAttendanceData(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching today's attendance data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchAttendanceData();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const counts = attendanceData.reduce(\r\n//       (acc, user) => {\r\n//         const mark = getAttendanceMark(user);\r\n//         acc[mark]++;\r\n//         return acc;\r\n//       },\r\n//       { Present: 0, Late: 0, \"Half Day\": 0, Absent: 0 }\r\n//     );\r\n\r\n//     setStatusCounts(counts);\r\n//   }, [attendanceData]);\r\n\r\n//   const getAttendanceMark = (user) => {\r\n//     const loginTime = user.attendance && user.attendance.loginTime[0];\r\n//     if (loginTime) {\r\n//       const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n//       if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n//         return \"Half Day\";\r\n//       } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n//         return \"Late\";\r\n//       }\r\n//     }\r\n//     return loginTime ? \"Present\" : \"Absent\";\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* <div className=\"donut-chart\">\r\n//           <ReactApexChart\r\n//             options={{\r\n//               labels: [\"Present\", \"Late\", \"Half Day\", \"Absent\"],\r\n//               colors: [\"#008000\", \"#FFA500\", \"#FFD700\", \"#FF0000\"]\r\n//             }}\r\n//             series={[\r\n//               statusCounts.Present,\r\n//               statusCounts.Late,\r\n//               statusCounts[\"Half Day\"],\r\n//               statusCounts.Absent\r\n\r\n//             ]}\r\n//             type=\"donut\"\r\n//             height={300}\r\n//           />\r\n//         </div> */}\r\n\r\n//       <div className=\"ChartCard shadow-sm \">\r\n//         <div className=\"ChartHeader\">\r\n//           <h5 className=\"fw-bolder d-flex gap-3\">Employee By Department</h5>\r\n//         </div>\r\n//         <Chart\r\n//           options={chartOption.options}\r\n//           series={chartOption.series}\r\n//           type=\"donut\"\r\n//           width=\"100%\"\r\n//           height=\"300px\"\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DailyAttendChart;\r\n",["1258","1259"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\Chart\\TaskChart.jsx",["1260","1261","1262","1263","1264"],"// EmployeeChart.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./chart.css\";\r\nimport { FaChartLine } from \"react-icons/fa6\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst TaskChart = () => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map(\r\n              (data) => data[\"department\"][0]?.DepartmentName || \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadTaskData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      setError(\"Error fetching tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n    loadTaskData();\r\n  }, []);\r\n\r\n  const calculateRemainingTime = (endDate) => {\r\n    const now = new Date();\r\n    const endDateTime = new Date(endDate);\r\n    let remainingTime = endDateTime - now;\r\n\r\n    if (remainingTime < 0) {\r\n      // If remaining time is negative, consider it as delay\r\n      remainingTime = Math.abs(remainingTime);\r\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\r\n    } else {\r\n      // Calculate remaining days, hours, minutes, and seconds\r\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\r\n      );\r\n      return { delay: false, days, hours, minutes };\r\n    }\r\n  };\r\n\r\n  const countLateAndOnTimeTasks = () => {\r\n    const lateTasksCount = tasks.filter(\r\n      (task) =>\r\n        task.status === \"Pending\" && calculateRemainingTime(task.endDate).delay\r\n    ).length;\r\n\r\n    const onTimeTasksCount = tasks.filter(\r\n      (task) =>\r\n        task.status === \"Pending\" && !calculateRemainingTime(task.endDate).delay\r\n    ).length;\r\n\r\n    return { lateTasksCount, onTimeTasksCount };\r\n  };\r\n\r\n  const departmentCounts = {};\r\n  departmentData.forEach((department) => {\r\n    departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n  });\r\n\r\n  const taskStatusCounts = {\r\n    Total: tasks.length,\r\n    Assigned: tasks.filter((tasks) => tasks.status === \"Assigned\").length,\r\n    ActiveTask: tasks.filter((task) => task.status === \"Assigned\").length,\r\n    canceled: tasks.filter((task) => task.status === \"Cancelled\").length,\r\n    Completed: tasks.filter((task) => task.status === \"Completed\").length,\r\n    overdue: tasks.filter(\r\n      (task) =>\r\n        task.status === \"Assigned\" && calculateRemainingTime(task.endDate).delay\r\n    ).length,\r\n\r\n    onTime: tasks.filter(\r\n      (task) =>\r\n        task.status === \"Assigned\" &&\r\n        !calculateRemainingTime(task.endDate).delay\r\n    ).length\r\n\r\n    // Rejected: tasks.filter((task) => task.status === \"Rejected\").length,\r\n    // Active: tasks.filter((task) => task.status === \"Pending\").length,\r\n    // Overdue: tasks.filter(\r\n    //   (task) =>\r\n    //     task.status === \"Pending\" && calculateRemainingTime(task.endDate).delay\r\n    // ).length,\r\n    // Ontime: tasks.filter(\r\n    //   (task) =>\r\n    //     task.status === \"Pending\" && !calculateRemainingTime(task.endDate).delay\r\n    // ).length\r\n  };\r\n\r\n  const chartData = {\r\n    series: [\r\n      {\r\n        name: \"Total Employee\",\r\n        data: Object.values(departmentCounts)\r\n      }\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"40%\",\r\n          endingShape: \"rounded\"\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(departmentCounts),\r\n        title: {\r\n          text: \"Department Wise Employee\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Employee\"\r\n        }\r\n      },\r\n\r\n      fill: {\r\n        opacity: 1,\r\n        colors: [\"rgb(100, 150, 200)\"] // Change bar colors\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter: function (val) {\r\n            return \" \" + val + \"\";\r\n          }\r\n        },\r\n        markers: {\r\n          colors: \"yellow\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const taskStatusChartData = {\r\n    options: {\r\n      chart: {\r\n        id: \"task-status-chart\",\r\n        type: \"bar\"\r\n      },\r\n      fill: {\r\n        colors: [\"var(--primaryDashColorDark)\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(taskStatusCounts),\r\n        title: {\r\n          text: \"Task Status\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Tasks\"\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Task Status\",\r\n        data: Object.values(taskStatusCounts)\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2 pb-0\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Task Progress Report\r\n        </h6>\r\n      </div>\r\n      <div className=\"chartBody\">\r\n        <Chart\r\n          options={taskStatusChartData.options}\r\n          series={taskStatusChartData.series}\r\n          type=\"bar\"\r\n          height=\"340px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskChart;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\CountData\\EmployeeCount.jsx",["1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281"],"import React, { useState, useEffect } from \"react\";\r\n// import \"./EmployeeTable.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faEdit,\r\n  faInfoCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/core\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\n// *************csv & pdf **************//\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n// *************csv & pdf **************//\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst AdminEmployeeTable = (props) => {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\r\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\r\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\r\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // Ensure that response.data is an array\r\n        if (Array.isArray(response.data)) {\r\n          setEmployeeData(response.data);\r\n          setLoading(false);\r\n\r\n          // Clear the state arrays\r\n          setRowData([]);\r\n\r\n          response.data.forEach((data) => {\r\n            let temp = {\r\n              data,\r\n              Email: data[\"Email\"],\r\n              Password: data[\"Password\"],\r\n              Account:\r\n                data[\"Account\"] === 1\r\n                  ? \"Admin\"\r\n                  : data[\"Account\"] === 2\r\n                  ? \"HR\"\r\n                  : data[\"Account\"] === 3\r\n                  ? \"Employee\"\r\n                  : data[\"Account\"] === 4\r\n                  ? \"Manager\"\r\n                  : \"\",\r\n\r\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n              FirstName: data[\"FirstName\"],\r\n              MiddleName: data[\"MiddleName\"],\r\n              LastName: data[\"LastName\"],\r\n              DOB: data[\"DOB\"].slice(0, 10),\r\n              ContactNo: data[\"ContactNo\"],\r\n              // EmployeeCode: data[\"EmployeeCode\"],\r\n              empID: data[\"empID\"],\r\n              DepartmentName: data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\",\r\n              PositionName: data[\"position\"][0]\r\n                ? data[\"position\"][0][\"PositionName\"]\r\n                : \"\",\r\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\r\n            };\r\n\r\n            // Use set function to update state\r\n            setRowData((prevData) => [...prevData, temp]);\r\n          });\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onEmployeeDelete = (e) => {\r\n    if (window.confirm(\"Are you sure to delete this record? \")) {\r\n      axios\r\n        .delete(`${BASE_URL}/api/employee/${e}`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then(() => {\r\n          loadEmployeeData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    window.confirm(\"Are you sure to download Employee record? \");\r\n    const doc = new jsPDF({\r\n      orientation: \"landscape\",\r\n      unit: \"mm\",\r\n      format: [297, 210]\r\n    });\r\n\r\n    doc.setFontSize(18);\r\n    doc.text(\"Employee Details\", 297 / 2, 15, \"center\");\r\n    const headers = [\r\n      \"Emp Id\",\r\n      \"Email\",\r\n      \"Account Access\",\r\n      \"First Name\",\r\n      \"Last Name\",\r\n      \"DOB\",\r\n      \"ContactNo\",\r\n      \"Role\",\r\n      \"Position\",\r\n      \"Department\",\r\n      \"D.O.J\"\r\n    ];\r\n    const data = rowData.map((row) => [\r\n      row.empID,\r\n      row.Email,\r\n      row.Account,\r\n      row.FirstName,\r\n      row.LastName,\r\n      row.DOB,\r\n      row.ContactNo,\r\n      row.RoleName,\r\n      row.PositionName,\r\n      row.DepartmentName,\r\n      row.DateOfJoining,\r\n      \"\"\r\n    ]);\r\n    doc.setFontSize(12);\r\n    doc.autoTable({\r\n      head: [headers],\r\n      body: data,\r\n      startY: 25\r\n    });\r\n\r\n    doc.save(\"employee_data.pdf \");\r\n  };\r\n\r\n  const renderInfoButton = (params) => {\r\n    if (params.data && params.data.data) {\r\n      return (\r\n        <div>\r\n          <FontAwesomeIcon\r\n            icon={faInfoCircle}\r\n            onClick={() => props.onEmpInfo(params.data.data)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderButton = (params) => {\r\n    if (params.data && params.data.data && params.data.data[\"_id\"]) {\r\n      return (\r\n        <FontAwesomeIcon\r\n          icon={faTrash}\r\n          onClick={() => onEmployeeDelete(params.data.data[\"_id\"])}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    if (params.data && params.data.data) {\r\n      return (\r\n        <FontAwesomeIcon\r\n          icon={faEdit}\r\n          onClick={() => props.onEditEmployee(params.data.data)}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getBackgroundColor = (accountType) => {\r\n    switch (accountType) {\r\n      case \"Admin\":\r\n        return \"#8EAC50\";\r\n      case \"HR\":\r\n        return \"#0079FF\";\r\n      case \"Employee\":\r\n        return \"purple\";\r\n      case \"Manager\":\r\n        return \"red\";\r\n      default:\r\n        return \"#FF9B50\";\r\n    }\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    setSearchInput(event.target.value);\r\n  };\r\n\r\n  const handleToggleIdSort = () => {\r\n    setIsIdSortAscending(!isIdSortAscending);\r\n  };\r\n\r\n  const sortById = (a, b) => {\r\n    const idA = a.empID.toLowerCase();\r\n    const idB = b.empID.toLowerCase();\r\n\r\n    if (isIdSortAscending) {\r\n      return idA.localeCompare(idB);\r\n    } else {\r\n      return idB.localeCompare(idA);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const calculateUpcomingBirthdays = () => {\r\n    const today = new Date();\r\n    const upcomingBirthdaysData = rowData.filter((employee) => {\r\n      const dob = new Date(employee.DOB);\r\n      dob.setFullYear(today.getFullYear());\r\n\r\n      // Check if the upcoming birthday is within the next 7 days\r\n      const timeDiff = dob - today;\r\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n      return daysDiff >= 0 && daysDiff <= 7;\r\n    });\r\n\r\n    setUpcomingBirthdays(upcomingBirthdaysData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateUpcomingBirthdays();\r\n  }, [rowData]);\r\n\r\n  let filteredData = rowData.filter((item) => {\r\n    const isMatchingId = isIdFilterActive\r\n      ? item.empID.toLowerCase() === searchInput.toLowerCase()\r\n      : true;\r\n\r\n    const isMatchingFirstName = item.FirstName.toLowerCase().includes(\r\n      searchInput.toLowerCase()\r\n    );\r\n\r\n    return isMatchingId && isMatchingFirstName;\r\n  });\r\n\r\n  filteredData = filteredData.sort(sortById);\r\n\r\n  // Calculate the total length for each status\r\n  const adminCount = filteredData.filter(\r\n    (data) => data.Account === \"Admin\"\r\n  ).length;\r\n  const hrCount = filteredData.filter((data) => data.Account === \"HR\").length;\r\n  const managerCount = filteredData.filter(\r\n    (data) => data.Account === \"Manager\"\r\n  ).length;\r\n  const employeeCount = filteredData.filter(\r\n    (data) => data.Account === \"Employee\"\r\n  ).length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Admins\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {adminCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/user\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total HR{\" \"}\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {hrCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/user\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"row row-gap-4\"></div> */}\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Manager\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {managerCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/user\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Employee\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {employeeCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/user\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-9\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEmployeeTable;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Admin\\Dashboard\\CountData\\LeavesCount.jsx",["1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309"],"import React, { useState, useEffect } from \"react\";\r\n// import \"./LeaveApplicationHRTable.css\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\nimport { css } from \"@emotion/core\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Dropdown,\r\n  DropdownButton\r\n} from \"react-bootstrap\";\r\n\r\n// *************csv & pdf **************//\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\r\n// *************csv & pdf **************//\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst LeaveApplicationHRTable = (props) => {\r\n  const [leaveApplicationHRData, setLeaveApplicationHRData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [totalLeaves, setTotalLeaves] = useState(0);\r\n  const [sortColumn, setSortColumn] = useState(null);\r\n  const [sortDirection, setSortDirection] = useState(\"asc\");\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  // ...\r\n\r\n  let leaveApplicationHRObj = [];\r\n  let rowDataT = [];\r\n\r\n  const loadLeaveApplicationHRData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/leave-application-hr/`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        leaveApplicationHRObj = response.data;\r\n        console.log(\"response\", response.data);\r\n        setLeaveApplicationHRData(response.data);\r\n        setLoading(false);\r\n\r\n        rowDataT = [];\r\n\r\n        leaveApplicationHRObj.map((data) => {\r\n          let temp = {\r\n            data,\r\n            empID:\r\n              data[\"employee\"] &&\r\n              data[\"employee\"][0] &&\r\n              data[\"employee\"][0][\"empID\"],\r\n            Name:\r\n              data[\"employee\"] &&\r\n              data[\"employee\"][0] &&\r\n              data[\"employee\"][0][\"FirstName\"] +\r\n                \" \" +\r\n                data[\"employee\"][0][\"LastName\"],\r\n            Leavetype: data[\"Leavetype\"],\r\n            FromDate: data[\"FromDate\"].slice(0, 10),\r\n            ToDate: data[\"ToDate\"].slice(0, 10),\r\n            Reasonforleave: data[\"Reasonforleave\"],\r\n            Status: status(data[\"Status\"])\r\n          };\r\n\r\n          rowDataT.push(temp);\r\n        });\r\n\r\n        setRowData(rowDataT);\r\n\r\n        setTotalLeaves(response.data.length);\r\n        props.updateTotalLeaves(response.data.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // ...\r\n\r\n  const onLeaveApplicationHRDelete = (e1, e2) => {\r\n    console.log(e1, e2);\r\n    if (window.confirm(\"Are you sure to delete this record? \") == true) {\r\n      axios\r\n        .delete(\"${BASE_URL}/api/leave-application-hr/\" + e1 + \"/\" + e2, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((res) => {\r\n          loadLeaveApplicationHRData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    if (window.confirm(\"Are you sure to download Leave record? \")) {\r\n      // Set A4 landscape dimensions\r\n      const pdfWidth = 297; // A4 width in mm\r\n      const pdfHeight = 210; // A4 height in mm\r\n      const doc = new jsPDF({\r\n        orientation: \"landscape\",\r\n        unit: \"mm\",\r\n        format: [pdfWidth, pdfHeight]\r\n      });\r\n\r\n      doc.setFontSize(18);\r\n      doc.text(\"Employee Leave Details\", pdfWidth / 2, 15, \"center\");\r\n      const headers = [\r\n        \"Emp Id\",\r\n        \"Leave Type\",\r\n        \"Start Date\",\r\n        \"End Date\",\r\n        \"Remarks\",\r\n        \"Status\"\r\n      ];\r\n      const data = rowData.map((row) => [\r\n        row.empID,\r\n        row.Leavetype,\r\n        row.FromDate,\r\n        row.ToDate,\r\n        row.Reasonforleave,\r\n        row.Status,\r\n\r\n        \"\" // Action column - you can customize this based on your requirements\r\n      ]);\r\n      doc.setFontSize(12);\r\n      doc.autoTable({\r\n        head: [headers],\r\n        body: data,\r\n        startY: 25\r\n      });\r\n\r\n      doc.save(\"leaveApplication_data.pdf\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLeaveApplicationHRData();\r\n  }, []);\r\n\r\n  const renderButton = (params) => {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faTrash}\r\n        onClick={() =>\r\n          onLeaveApplicationHRDelete(\r\n            params.data.data[\"employee\"][0][\"_id\"],\r\n            params.data.data[\"_id\"]\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        onClick={() => props.onEditLeaveApplicationHR(params.data.data)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const status = (s) => {\r\n    if (s == 1) {\r\n      return \"Pending\";\r\n    }\r\n    if (s == 2) {\r\n      return \"Approved\";\r\n    }\r\n    if (s == 3) {\r\n      return \"Rejected\";\r\n    }\r\n    // Add a default case or return a meaningful value for unknown status\r\n    return \"Unknown\";\r\n  };\r\n\r\n  const renderSortIcon = (field) => {\r\n    if (sortColumn === field) {\r\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const sortData = (columnName) => {\r\n    const newSortDirection =\r\n      sortColumn === columnName && sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n    const sortedData = [...rowData];\r\n\r\n    sortedData.sort((a, b) => {\r\n      const valueA = a[columnName];\r\n      const valueB = b[columnName];\r\n\r\n      let comparison = 0;\r\n\r\n      if (valueA > valueB) {\r\n        comparison = 1;\r\n      } else if (valueA < valueB) {\r\n        comparison = -1;\r\n      }\r\n\r\n      return newSortDirection === \"desc\" ? comparison * -1 : comparison;\r\n    });\r\n\r\n    setRowData(sortedData);\r\n    setSortColumn(columnName);\r\n    setSortDirection(newSortDirection);\r\n  };\r\n\r\n  // Calculate the total length for each status\r\n  const pendingLeaves = rowData.filter(\r\n    (data) => data.Status === \"Pending\"\r\n  ).length;\r\n  const approvedLeaves = rowData.filter(\r\n    (data) => data.Status === \"Approved\"\r\n  ).length;\r\n  const rejectedLeaves = rowData.filter(\r\n    (data) => data.Status === \"Rejected\"\r\n  ).length;\r\n\r\n  return (\r\n    // <div className=\"p-4\">\r\n    //   <div className=\"d-flex justify-between\">\r\n    //     <h3 className=\"fw-bold text-muted\">Leave Request ({totalLeaves})</h3>\r\n\r\n    //     <button\r\n    //       className=\"btn px-3 d-flex justify-center aline-center gap-2\"\r\n    //       onClick={exportToPDF}\r\n    //     >\r\n    //       <BsFillFileEarmarkPdfFill className=\"text-danger fs-4\" />\r\n    //       <p className=\"my-auto fs-5 fw-bold\">PDF</p>\r\n    //     </button>\r\n    //   </div>\r\n\r\n    //   <div id=\"clear-both\" />\r\n\r\n    //   <div className=\"mt-3\">\r\n    //     {/* Display the total length for each status */}\r\n    //     <p>Total Pending Leaves: {pendingLeaves}</p>\r\n    //     <p>Total Approved Leaves: {approvedLeaves}</p>\r\n    //     <p>Total Rejected Leaves: {rejectedLeaves}</p>\r\n\r\n    //     {/* Display the table */}\r\n    //     {!loading ? (\r\n    //       <div\r\n    //         style={{\r\n    //           overflow: \"auto\",\r\n    //           height: \"85vh\",\r\n    //           width: \"100%\",\r\n    //           scrollbarWidth: \"thin\"\r\n    //         }}\r\n    //       >\r\n    //         <table className=\"table table-striped\">\r\n    //           <thead>{/* ... (existing code) */}</thead>\r\n    //           <tbody>\r\n    //             {rowData\r\n    //               .filter((e) => e.Status == \"Pending\")\r\n    //               .map((data, index) => (\r\n    //                 <tr key={index}>{/* ... (existing code) */}</tr>\r\n    //               ))}\r\n    //           </tbody>\r\n    //         </table>\r\n    //       </div>\r\n    //     ) : (\r\n    //       <div id=\"loading-bar\">\r\n    //         <RingLoader\r\n    //           css={override}\r\n    //           sizeUnit={\"px\"}\r\n    //           size={50}\r\n    //           color={\"#0000ff\"}\r\n    //           loading={true}\r\n    //         />\r\n    //       </div>\r\n    //     )}\r\n    //   </div>\r\n    // </div>\r\n    <div>\r\n      <div className=\"container-fluid  mt-4\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Pending Leaves\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {pendingLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/pendingLeave\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Approved Leaves{\" \"}\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {approvedLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/leaveAccepted\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"row row-gap-4\"></div> */}\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Rejected Leaves\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {rejectedLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/leaveRejected\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Role\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/role\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaveApplicationHRTable;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\LeaveApplicationHRTable.jsx",["1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\LeaveApplicationHRFormEdit.jsx",["1323","1324","1325","1326","1327","1328","1329","1330"],"import React, { useState } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nconst LeaveApplicationHRForm = (props) => {\n  const [FromDateData, setFromDateData] = useState(\n    props.editData[\"FromDate\"].slice(0, 10)\n  );\n  const [ToDateData, setToDateData] = useState(\n    props.editData[\"ToDate\"].slice(0, 10)\n  );\n  const [ReasonforleaveData, setReasonforleaveData] = useState(\n    props.editData[\"Reasonforleave\"]\n  );\n\n  const handleLeaveApplicationHREditUpdate = (e) => {\n    e.preventDefault();\n    props.onLeaveApplicationHREditUpdate(props.editData, e);\n  };\n\n  return (\n    <div className=\"registration-page py-4\">\n      <h2\n        id=\"role-form-title\"\n        className=\"text-center text-black text-uppercase fw-bold my-4\"\n      >\n        Edit Leave Application Of {props.editData[\"employee\"][0][\"FirstName\"]}{\" \"}\n        {props.editData[\"employee\"][0][\"LastName\"]}\n      </h2>\n      <div id=\"role-form-outer-div\">\n      <Form id=\"form\" onSubmit={handleLeaveApplicationHREditUpdate}>\n          <div className=\"d-flex  flex-column gap-2 rounded \">\n            <div style={{ padding: \"70px\" }} className=\"row \">\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Leave Type\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control as=\"select\" required>\n                      <option value=\"\" disabled selected>\n                        Select your option\n                      </option>\n                      <option\n                        value=\"Sick Leave\"\n                        selected={props.editData[\"Leavetype\"] == \"Sick Leave\"}\n                        disabled\n                      >\n                        Sick Leave\n                      </option>\n                      <option\n                        value=\"Casual Leave\"\n                        selected={props.editData[\"Leavetype\"] == \"Casual Leave\"}\n                        disabled\n                      >\n                        Casual Leave\n                      </option>\n                      <option\n                        value=\"Privilege Leave\"\n                        selected={\n                          props.editData[\"Leavetype\"] == \"Privilege Leave\"\n                        }\n                        disabled\n                      >\n                        Privilege Leave\n                      </option>\n                    </Form.Control>\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    FromDate\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control\n                      type=\"date\"\n                      required\n                      disabled\n                      value={FromDateData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    ToDate\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control\n                      type=\"date\"\n                      required\n                      disabled\n                      value={ToDateData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Leave Status\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control as=\"select\" required>\n                      <option value=\"Pending\" selected disabled>\n                        Pending\n                      </option>\n                      <option\n                        value=\"2\"\n                        selected={props.editData[\"Status\"] == 2}\n                      >\n                        Approve\n                      </option>\n                      <option\n                        value=\"3\"\n                        selected={props.editData[\"Status\"] == 3}\n                      >\n                        Reject\n                      </option>\n                    </Form.Control>\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Reason for leave\n                  </Form.Label>\n                  <Col sm={11} className=\"form-input\">\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={3}\n                      placeholder=\"Reason for leave\"\n                      required\n                      disabled\n                      value={ReasonforleaveData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div\n                className=\"form-group col-12 d-flex  gap-5\"\n                id=\"form-submit-button\"\n              >\n                <Button className=\"mx-3\" type=\"submit\">\n                  Submit\n                </Button>\n                <Button\n                  className=\"mx-3\"\n                  type=\"reset\"\n                  onClick={props.onFormClose}\n                >\n                  cancel\n                </Button>\n              </div>\n              <div\n                className=\"form-group col-12 col-md-6\"\n                id=\"form-cancel-button\"\n              ></div>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default LeaveApplicationHRForm;\n\n// import React, { useState } from \"react\";\n// import { Form, Button, Col, Row } from \"react-bootstrap\";\n\n// const LeaveApplicationHRForm = (props) => {\n//   const [FromDateData, setFromDateData] = useState(\n//     props.editData[\"FromDate\"].slice(0, 10)\n//   );\n//   const [ToDateData, setToDateData] = useState(\n//     props.editData[\"ToDate\"].slice(0, 10)\n//   );\n//   const [ReasonforleaveData, setReasonforleaveData] = useState(\n//     props.editData[\"Reasonforleave\"]\n//   );\n\n//   const handleLeaveApplicationHREditUpdate = (e) => {\n//     e.preventDefault();\n//     props.onLeaveApplicationHREditUpdate(props.editData, e);\n//   };\n\n//   return (\n//     <div className=\"registration-page py-4\">\n//       <h2 id=\"role-form-title\" className=\"text-center text-black text-uppercase fw-bold my-4\">\n//         Edit Leave Application Of {props.editData[\"employee\"][0][\"FirstName\"]}{\" \"}\n//         {props.editData[\"employee\"][0][\"LastName\"]}\n//       </h2>\n\n//       <div id=\"role-form-outer-div\">\n//         <Form id=\"form\" onSubmit={handleLeaveApplicationHREditUpdate}>\n//           <div className=\"d-flex flex-column gap-2 rounded\">\n//             <div style={{ padding: '70px' }} className=\"row\">\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Leave Type\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control as=\"select\" required disabled>\n//                       <option value=\"\" disabled selected>\n//                         Select your option\n//                       </option>\n//                       <option\n//                         value=\"Sick Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Sick Leave\"}\n//                         disabled\n//                       >\n//                         Sick Leave\n//                       </option>\n//                       <option\n//                         value=\"Casual Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Casual Leave\"}\n//                         disabled\n//                       >\n//                         Casual Leave\n//                       </option>\n//                       <option\n//                         value=\"Privilege Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Privilege Leave\"}\n//                         disabled\n//                       >\n//                         Privilege Leave\n//                       </option>\n//                     </Form.Control>\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     FromDate\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control type=\"date\" required disabled value={FromDateData} />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     ToDate\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control type=\"date\" required disabled value={ToDateData} />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Leave Status\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control as=\"select\" required >\n//                       <option value=\"Pending\" selected disabled>\n//                         Pending\n//                       </option>\n//                       <option value=\"2\" selected={props.editData[\"Status\"] === 2}>\n//                         Approve\n//                       </option>\n//                       <option value=\"3\" selected={props.editData[\"Status\"] === 3}>\n//                         Reject\n//                       </option>\n//                     </Form.Control>\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Reason for leave\n//                   </Form.Label>\n//                   <Col sm={11} className=\"form-input\">\n//                     <Form.Control\n//                       as=\"textarea\"\n//                       rows={3}\n//                       placeholder=\"Reason for leave\"\n//                       required\n//                       disabled\n//                       value={ReasonforleaveData}\n//                     />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 d-flex gap-5\" id=\"form-submit-button\">\n//                 <Button className=\"mx-3\" type=\"submit\">\n//                   Submit\n//                 </Button>\n//                 <Button className=\"mx-3\" type=\"reset\" onClick={props.onFormClose}>\n//                   Cancel\n//                 </Button>\n//               </div>\n//             </div>\n//           </div>\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LeaveApplicationHRForm;\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\attendance\\SelfAttendance.jsx",["1331","1332","1333","1334","1335"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Notification\\NoticeBoard.jsx",["1336","1337"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\attendance\\TodaysAttendance.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\Chart\\TaskChart.jsx",["1338","1339"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\Chart\\DepartmentChart.jsx",["1340","1341","1342","1343","1344"],"import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./chart.css\";\r\nimport axios from \"axios\";\r\n\r\nconst DepartmentChart = () => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartOption, setChartOption] = useState({\r\n    options: {\r\n      labels: [],\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    series: []\r\n  });\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(\"http://localhost:4000/api/employee\", {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map(\r\n              (data) => data[\"department\"][0]?.DepartmentName || \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const updateChartOptions = () => {\r\n    const departmentCounts = {};\r\n    departmentData.forEach((department) => {\r\n      departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n    });\r\n\r\n    const labels = Object.keys(departmentCounts);\r\n    const series = labels.map((label) => departmentCounts[label]);\r\n\r\n    setChartOption({\r\n      options: {\r\n        labels: labels,\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  show: true\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: series\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateChartOptions();\r\n  }, [departmentData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ChartCard shadow-sm \">\r\n        <div className=\"ChartHeader\">\r\n          <h5 className=\"fw-bolder d-flex gap-3\">Employee By Department</h5>\r\n        </div>\r\n        <Chart\r\n          options={chartOption.options}\r\n          series={chartOption.series}\r\n          type=\"donut\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepartmentChart;\r\n","C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\CountData\\LeavesCount.jsx",["1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\Manager\\Dashboard\\CountData\\EmployeeCount.jsx",["1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\CountData\\LoginstatusCount.jsx",[],["1377","1378"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHR.jsx",["1379","1380"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHRTable.jsx",["1381","1382","1383","1384","1385","1386","1387"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\LeaveStatus\\LeaveApplicationHRFormEdit.jsx",["1388","1389","1390","1391","1392","1393","1394","1395"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\DailyAttendance\\TodaysAttendance.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\ManualAttendance.jsx",["1396"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Pages\\config\\config.js",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\Dashboard\\CountData\\AttendanceCount.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Context\\AttendanceContext\\smallSidebarcontext.jsx",[],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\SidebarSmallScreen.jsx",["1397"],"C:\\Users\\Afroz Zeelani\\Desktop\\ZeelaniCRM\\frontend\\src\\Component\\HrManager\\attendance\\AttendanceRegister.jsx",["1398","1399"],{"ruleId":"1400","replacedBy":"1401"},{"ruleId":"1402","replacedBy":"1403"},{"ruleId":"1404","severity":1,"message":"1405","line":254,"column":28,"nodeType":"1406","messageId":"1407","endLine":254,"endColumn":30},{"ruleId":"1404","severity":1,"message":"1405","line":256,"column":32,"nodeType":"1406","messageId":"1407","endLine":256,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1405","line":258,"column":32,"nodeType":"1406","messageId":"1407","endLine":258,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1405","line":260,"column":32,"nodeType":"1406","messageId":"1407","endLine":260,"endColumn":34},{"ruleId":"1404","severity":1,"message":"1405","line":270,"column":28,"nodeType":"1406","messageId":"1407","endLine":270,"endColumn":30},{"ruleId":"1404","severity":1,"message":"1405","line":280,"column":28,"nodeType":"1406","messageId":"1407","endLine":280,"endColumn":30},{"ruleId":"1404","severity":1,"message":"1405","line":290,"column":28,"nodeType":"1406","messageId":"1407","endLine":290,"endColumn":30},{"ruleId":"1404","severity":1,"message":"1405","line":300,"column":28,"nodeType":"1406","messageId":"1407","endLine":300,"endColumn":30},{"ruleId":"1408","severity":1,"message":"1409","line":2,"column":27,"nodeType":"1410","messageId":"1411","endLine":2,"endColumn":36},{"ruleId":"1408","severity":1,"message":"1412","line":30,"column":21,"nodeType":"1410","messageId":"1411","endLine":30,"endColumn":33},{"ruleId":"1413","severity":1,"message":"1414","line":54,"column":6,"nodeType":"1415","endLine":54,"endColumn":17,"suggestions":"1416"},{"ruleId":"1408","severity":1,"message":"1417","line":94,"column":13,"nodeType":"1410","messageId":"1411","endLine":94,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1418","line":9,"column":8,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":26},{"ruleId":"1408","severity":1,"message":"1419","line":13,"column":11,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1420","line":220,"column":3,"nodeType":"1410","messageId":"1411","endLine":220,"endColumn":10},{"ruleId":"1408","severity":1,"message":"1421","line":222,"column":3,"nodeType":"1410","messageId":"1411","endLine":222,"endColumn":12},{"ruleId":"1408","severity":1,"message":"1422","line":231,"column":10,"nodeType":"1410","messageId":"1411","endLine":231,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1423","line":232,"column":10,"nodeType":"1410","messageId":"1411","endLine":232,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1424","line":235,"column":10,"nodeType":"1410","messageId":"1411","endLine":235,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1425","line":235,"column":23,"nodeType":"1410","messageId":"1411","endLine":235,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1426","line":237,"column":10,"nodeType":"1410","messageId":"1411","endLine":237,"endColumn":26},{"ruleId":"1408","severity":1,"message":"1427","line":1,"column":8,"nodeType":"1410","messageId":"1411","endLine":1,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1428","line":3,"column":10,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1429","line":3,"column":32,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":38},{"ruleId":"1408","severity":1,"message":"1428","line":3,"column":10,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1429","line":3,"column":32,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":38},{"ruleId":"1413","severity":1,"message":"1430","line":55,"column":6,"nodeType":"1415","endLine":55,"endColumn":8,"suggestions":"1431"},{"ruleId":"1413","severity":1,"message":"1432","line":195,"column":6,"nodeType":"1415","endLine":195,"endColumn":14,"suggestions":"1433"},{"ruleId":"1434","severity":1,"message":"1435","line":291,"column":68,"nodeType":"1436","messageId":"1437","endLine":291,"endColumn":69},{"ruleId":"1408","severity":1,"message":"1438","line":4,"column":10,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1439","line":18,"column":8,"nodeType":"1410","messageId":"1411","endLine":18,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1422","line":38,"column":10,"nodeType":"1410","messageId":"1411","endLine":38,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1423","line":39,"column":10,"nodeType":"1410","messageId":"1411","endLine":39,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1438","line":40,"column":10,"nodeType":"1410","messageId":"1411","endLine":40,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1440","line":41,"column":10,"nodeType":"1410","messageId":"1411","endLine":41,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1424","line":42,"column":10,"nodeType":"1410","messageId":"1411","endLine":42,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1441","line":42,"column":35,"nodeType":"1410","messageId":"1411","endLine":42,"endColumn":44},{"ruleId":"1408","severity":1,"message":"1442","line":43,"column":10,"nodeType":"1410","messageId":"1411","endLine":43,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1426","line":44,"column":10,"nodeType":"1410","messageId":"1411","endLine":44,"endColumn":26},{"ruleId":"1408","severity":1,"message":"1443","line":45,"column":10,"nodeType":"1410","messageId":"1411","endLine":45,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1444","line":8,"column":8,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1445","line":4,"column":18,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1446","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1447","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1448","line":103,"column":11,"nodeType":"1410","messageId":"1411","endLine":103,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1449","line":15,"column":10,"nodeType":"1410","messageId":"1411","endLine":15,"endColumn":34},{"ruleId":"1408","severity":1,"message":"1450","line":16,"column":10,"nodeType":"1410","messageId":"1411","endLine":16,"endColumn":38},{"ruleId":"1408","severity":1,"message":"1451","line":21,"column":3,"nodeType":"1410","messageId":"1411","endLine":21,"endColumn":12},{"ruleId":"1408","severity":1,"message":"1452","line":23,"column":10,"nodeType":"1410","messageId":"1411","endLine":23,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1453","line":24,"column":10,"nodeType":"1410","messageId":"1411","endLine":24,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1454","line":25,"column":10,"nodeType":"1410","messageId":"1411","endLine":25,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1455","line":28,"column":10,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1456","line":28,"column":16,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1457","line":28,"column":24,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1458","line":28,"column":29,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1459","line":29,"column":10,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1460","line":36,"column":10,"nodeType":"1410","messageId":"1411","endLine":36,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1461","line":47,"column":10,"nodeType":"1410","messageId":"1411","endLine":47,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1462","line":51,"column":28,"nodeType":"1410","messageId":"1411","endLine":51,"endColumn":47},{"ruleId":"1408","severity":1,"message":"1463","line":53,"column":10,"nodeType":"1410","messageId":"1411","endLine":53,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1464","line":182,"column":9,"nodeType":"1410","messageId":"1411","endLine":182,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1465","line":196,"column":9,"nodeType":"1410","messageId":"1411","endLine":196,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":208,"column":9,"nodeType":"1410","messageId":"1411","endLine":208,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1467","line":220,"column":9,"nodeType":"1410","messageId":"1411","endLine":220,"endColumn":27},{"ruleId":"1413","severity":1,"message":"1468","line":275,"column":6,"nodeType":"1415","endLine":275,"endColumn":15,"suggestions":"1469"},{"ruleId":"1408","severity":1,"message":"1470","line":292,"column":9,"nodeType":"1410","messageId":"1411","endLine":292,"endColumn":17},{"ruleId":"1471","severity":1,"message":"1472","line":534,"column":21,"nodeType":"1473","messageId":"1474","endLine":543,"endColumn":22,"fix":"1475"},{"ruleId":"1471","severity":1,"message":"1472","line":546,"column":21,"nodeType":"1473","messageId":"1474","endLine":555,"endColumn":22,"fix":"1476"},{"ruleId":"1408","severity":1,"message":"1477","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1477","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1477","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1478","line":3,"column":10,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1479","line":15,"column":10,"nodeType":"1410","messageId":"1411","endLine":15,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1477","line":16,"column":10,"nodeType":"1410","messageId":"1411","endLine":16,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1480","line":17,"column":10,"nodeType":"1410","messageId":"1411","endLine":17,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1481","line":173,"column":9,"nodeType":"1410","messageId":"1411","endLine":173,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1478","line":3,"column":10,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1482","line":4,"column":10,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1477","line":17,"column":10,"nodeType":"1410","messageId":"1411","endLine":17,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1480","line":18,"column":10,"nodeType":"1410","messageId":"1411","endLine":18,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1483","line":19,"column":10,"nodeType":"1410","messageId":"1411","endLine":19,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1484","line":19,"column":24,"nodeType":"1410","messageId":"1411","endLine":19,"endColumn":39},{"ruleId":"1408","severity":1,"message":"1485","line":18,"column":5,"nodeType":"1410","messageId":"1411","endLine":18,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1486","line":20,"column":5,"nodeType":"1410","messageId":"1411","endLine":20,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1487","line":46,"column":6,"nodeType":"1415","endLine":46,"endColumn":8,"suggestions":"1488"},{"ruleId":"1413","severity":1,"message":"1489","line":68,"column":6,"nodeType":"1415","endLine":68,"endColumn":8,"suggestions":"1490"},{"ruleId":"1408","severity":1,"message":"1491","line":71,"column":9,"nodeType":"1410","messageId":"1411","endLine":71,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1492","line":101,"column":9,"nodeType":"1410","messageId":"1411","endLine":101,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1409","line":1,"column":27,"nodeType":"1410","messageId":"1411","endLine":1,"endColumn":36},{"ruleId":"1408","severity":1,"message":"1493","line":22,"column":10,"nodeType":"1410","messageId":"1411","endLine":22,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1494","line":69,"column":6,"nodeType":"1415","endLine":69,"endColumn":8,"suggestions":"1495"},{"ruleId":"1413","severity":1,"message":"1496","line":73,"column":6,"nodeType":"1415","endLine":73,"endColumn":19,"suggestions":"1497"},{"ruleId":"1404","severity":1,"message":"1405","line":141,"column":11,"nodeType":"1406","messageId":"1407","endLine":141,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":144,"column":11,"nodeType":"1406","messageId":"1407","endLine":144,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":147,"column":11,"nodeType":"1406","messageId":"1407","endLine":147,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":317,"column":43,"nodeType":"1406","messageId":"1407","endLine":317,"endColumn":45},{"ruleId":"1408","severity":1,"message":"1493","line":22,"column":10,"nodeType":"1410","messageId":"1411","endLine":22,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1494","line":69,"column":6,"nodeType":"1415","endLine":69,"endColumn":8,"suggestions":"1498"},{"ruleId":"1413","severity":1,"message":"1496","line":73,"column":6,"nodeType":"1415","endLine":73,"endColumn":19,"suggestions":"1499"},{"ruleId":"1404","severity":1,"message":"1405","line":141,"column":11,"nodeType":"1406","messageId":"1407","endLine":141,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":144,"column":11,"nodeType":"1406","messageId":"1407","endLine":144,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":147,"column":11,"nodeType":"1406","messageId":"1407","endLine":147,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":317,"column":43,"nodeType":"1406","messageId":"1407","endLine":317,"endColumn":45},{"ruleId":"1408","severity":1,"message":"1409","line":1,"column":27,"nodeType":"1410","messageId":"1411","endLine":1,"endColumn":36},{"ruleId":"1408","severity":1,"message":"1500","line":1,"column":38,"nodeType":"1410","messageId":"1411","endLine":1,"endColumn":48},{"ruleId":"1408","severity":1,"message":"1445","line":3,"column":18,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":27},{"ruleId":"1413","severity":1,"message":"1430","line":32,"column":6,"nodeType":"1415","endLine":32,"endColumn":8,"suggestions":"1501"},{"ruleId":"1413","severity":1,"message":"1430","line":39,"column":6,"nodeType":"1415","endLine":39,"endColumn":14,"suggestions":"1502"},{"ruleId":"1408","severity":1,"message":"1477","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1477","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1477","line":14,"column":10,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":15},{"ruleId":"1503","severity":1,"message":"1504","line":135,"column":7,"nodeType":"1473","endLine":135,"endColumn":54},{"ruleId":"1408","severity":1,"message":"1477","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1492","line":78,"column":9,"nodeType":"1410","messageId":"1411","endLine":78,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1505","line":120,"column":9,"nodeType":"1410","messageId":"1411","endLine":120,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1506","line":261,"column":9,"nodeType":"1410","messageId":"1411","endLine":261,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1507","line":267,"column":11,"nodeType":"1410","messageId":"1411","endLine":267,"endColumn":25},{"ruleId":"1413","severity":1,"message":"1430","line":32,"column":6,"nodeType":"1415","endLine":32,"endColumn":8,"suggestions":"1508"},{"ruleId":"1413","severity":1,"message":"1430","line":39,"column":6,"nodeType":"1415","endLine":39,"endColumn":14,"suggestions":"1509"},{"ruleId":"1408","severity":1,"message":"1478","line":3,"column":10,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1510","line":23,"column":32,"nodeType":"1410","messageId":"1411","endLine":23,"endColumn":55},{"ruleId":"1408","severity":1,"message":"1461","line":28,"column":10,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1511","line":29,"column":10,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1512","line":29,"column":22,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1513","line":31,"column":10,"nodeType":"1410","messageId":"1411","endLine":31,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1514","line":31,"column":20,"nodeType":"1410","messageId":"1411","endLine":31,"endColumn":31},{"ruleId":"1408","severity":1,"message":"1515","line":32,"column":10,"nodeType":"1410","messageId":"1411","endLine":32,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1516","line":32,"column":20,"nodeType":"1410","messageId":"1411","endLine":32,"endColumn":31},{"ruleId":"1408","severity":1,"message":"1517","line":33,"column":10,"nodeType":"1410","messageId":"1411","endLine":33,"endColumn":24},{"ruleId":"1413","severity":1,"message":"1430","line":32,"column":6,"nodeType":"1415","endLine":32,"endColumn":8,"suggestions":"1518"},{"ruleId":"1413","severity":1,"message":"1430","line":39,"column":6,"nodeType":"1415","endLine":39,"endColumn":14,"suggestions":"1519"},{"ruleId":"1408","severity":1,"message":"1485","line":13,"column":5,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1486","line":15,"column":5,"nodeType":"1410","messageId":"1411","endLine":15,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1487","line":41,"column":6,"nodeType":"1415","endLine":41,"endColumn":8,"suggestions":"1520"},{"ruleId":"1408","severity":1,"message":"1491","line":66,"column":9,"nodeType":"1410","messageId":"1411","endLine":66,"endColumn":25},{"ruleId":"1413","severity":1,"message":"1430","line":32,"column":6,"nodeType":"1415","endLine":32,"endColumn":8,"suggestions":"1521"},{"ruleId":"1413","severity":1,"message":"1430","line":39,"column":6,"nodeType":"1415","endLine":39,"endColumn":14,"suggestions":"1522"},{"ruleId":"1408","severity":1,"message":"1461","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1479","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1523","line":11,"column":10,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1524","line":11,"column":23,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1525","line":12,"column":10,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":26},{"ruleId":"1408","severity":1,"message":"1462","line":12,"column":28,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":47},{"ruleId":"1408","severity":1,"message":"1526","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1527","line":13,"column":29,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1468","line":95,"column":6,"nodeType":"1415","endLine":95,"endColumn":15,"suggestions":"1528"},{"ruleId":"1408","severity":1,"message":"1459","line":3,"column":10,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1529","line":4,"column":8,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1530","line":8,"column":8,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1531","line":10,"column":8,"nodeType":"1410","messageId":"1411","endLine":10,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1532","line":11,"column":8,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1533","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1534","line":14,"column":8,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1535","line":17,"column":10,"nodeType":"1410","messageId":"1411","endLine":17,"endColumn":28},{"ruleId":"1408","severity":1,"message":"1536","line":20,"column":9,"nodeType":"1410","messageId":"1411","endLine":20,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1479","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1537","line":9,"column":19,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":29},{"ruleId":"1408","severity":1,"message":"1477","line":10,"column":10,"nodeType":"1410","messageId":"1411","endLine":10,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1538","line":10,"column":17,"nodeType":"1410","messageId":"1411","endLine":10,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1448","line":11,"column":9,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":11},{"ruleId":"1413","severity":1,"message":"1539","line":95,"column":6,"nodeType":"1415","endLine":95,"endColumn":22,"suggestions":"1540"},{"ruleId":"1408","severity":1,"message":"1541","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":19},{"ruleId":"1413","severity":1,"message":"1542","line":35,"column":6,"nodeType":"1415","endLine":35,"endColumn":8,"suggestions":"1543"},{"ruleId":"1413","severity":1,"message":"1544","line":94,"column":6,"nodeType":"1415","endLine":94,"endColumn":8,"suggestions":"1545"},{"ruleId":"1408","severity":1,"message":"1492","line":95,"column":9,"nodeType":"1410","messageId":"1411","endLine":95,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1546","line":4,"column":10,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1541","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1547","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1548","line":14,"column":10,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1549","line":25,"column":9,"nodeType":"1410","messageId":"1411","endLine":25,"endColumn":29},{"ruleId":"1408","severity":1,"message":"1550","line":29,"column":9,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":29},{"ruleId":"1413","severity":1,"message":"1542","line":35,"column":6,"nodeType":"1415","endLine":35,"endColumn":8,"suggestions":"1551"},{"ruleId":"1413","severity":1,"message":"1544","line":76,"column":6,"nodeType":"1415","endLine":76,"endColumn":35,"suggestions":"1552"},{"ruleId":"1408","severity":1,"message":"1492","line":78,"column":9,"nodeType":"1410","messageId":"1411","endLine":78,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1477","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1477","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1485","line":14,"column":5,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1486","line":16,"column":5,"nodeType":"1410","messageId":"1411","endLine":16,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1553","line":40,"column":6,"nodeType":"1415","endLine":40,"endColumn":8,"suggestions":"1554"},{"ruleId":"1413","severity":1,"message":"1489","line":62,"column":6,"nodeType":"1415","endLine":62,"endColumn":8,"suggestions":"1555"},{"ruleId":"1408","severity":1,"message":"1491","line":65,"column":9,"nodeType":"1410","messageId":"1411","endLine":65,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1477","line":11,"column":10,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1480","line":12,"column":10,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1483","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1556","line":14,"column":10,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1557","line":15,"column":10,"nodeType":"1410","messageId":"1411","endLine":15,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1481","line":55,"column":9,"nodeType":"1410","messageId":"1411","endLine":55,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1558","line":58,"column":9,"nodeType":"1410","messageId":"1411","endLine":58,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1559","line":89,"column":9,"nodeType":"1410","messageId":"1411","endLine":89,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1560","line":114,"column":9,"nodeType":"1410","messageId":"1411","endLine":114,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1561","line":14,"column":10,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1562","line":14,"column":21,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1563","line":17,"column":9,"nodeType":"1410","messageId":"1411","endLine":17,"endColumn":15},{"ruleId":"1413","severity":1,"message":"1564","line":40,"column":6,"nodeType":"1415","endLine":40,"endColumn":8,"suggestions":"1565"},{"ruleId":"1566","severity":1,"message":"1567","line":95,"column":64,"nodeType":"1568","messageId":"1569","endLine":95,"endColumn":66},{"ruleId":"1566","severity":1,"message":"1567","line":170,"column":64,"nodeType":"1568","messageId":"1569","endLine":170,"endColumn":66},{"ruleId":"1404","severity":1,"message":"1405","line":62,"column":36,"nodeType":"1406","messageId":"1407","endLine":62,"endColumn":38},{"ruleId":"1404","severity":1,"message":"1405","line":142,"column":65,"nodeType":"1406","messageId":"1407","endLine":142,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":192,"column":65,"nodeType":"1406","messageId":"1407","endLine":192,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":198,"column":65,"nodeType":"1406","messageId":"1407","endLine":198,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":204,"column":65,"nodeType":"1406","messageId":"1407","endLine":204,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":220,"column":61,"nodeType":"1406","messageId":"1407","endLine":220,"endColumn":63},{"ruleId":"1404","severity":1,"message":"1405","line":226,"column":61,"nodeType":"1406","messageId":"1407","endLine":226,"endColumn":63},{"ruleId":"1404","severity":1,"message":"1405","line":232,"column":61,"nodeType":"1406","messageId":"1407","endLine":232,"endColumn":63},{"ruleId":"1404","severity":1,"message":"1405","line":238,"column":61,"nodeType":"1406","messageId":"1407","endLine":238,"endColumn":63},{"ruleId":"1404","severity":1,"message":"1405","line":58,"column":64,"nodeType":"1406","messageId":"1407","endLine":58,"endColumn":66},{"ruleId":"1404","severity":1,"message":"1405","line":30,"column":36,"nodeType":"1406","messageId":"1407","endLine":30,"endColumn":38},{"ruleId":"1404","severity":1,"message":"1405","line":57,"column":35,"nodeType":"1406","messageId":"1407","endLine":57,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1405","line":67,"column":37,"nodeType":"1406","messageId":"1407","endLine":67,"endColumn":39},{"ruleId":"1408","severity":1,"message":"1570","line":4,"column":8,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1571","line":8,"column":8,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":26},{"ruleId":"1408","severity":1,"message":"1572","line":19,"column":10,"nodeType":"1410","messageId":"1411","endLine":19,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1573","line":22,"column":9,"nodeType":"1410","messageId":"1411","endLine":22,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1574","line":60,"column":9,"nodeType":"1410","messageId":"1411","endLine":60,"endColumn":36},{"ruleId":"1404","severity":1,"message":"1405","line":79,"column":11,"nodeType":"1406","messageId":"1407","endLine":79,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":82,"column":11,"nodeType":"1406","messageId":"1407","endLine":82,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":85,"column":11,"nodeType":"1406","messageId":"1407","endLine":85,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1575","line":91,"column":9,"nodeType":"1410","messageId":"1411","endLine":91,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1576","line":3,"column":24,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":30},{"ruleId":"1408","severity":1,"message":"1577","line":3,"column":32,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1459","line":3,"column":39,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":58,"column":43,"nodeType":"1406","messageId":"1407","endLine":58,"endColumn":45},{"ruleId":"1404","severity":1,"message":"1405","line":64,"column":65,"nodeType":"1406","messageId":"1407","endLine":64,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":112,"column":64,"nodeType":"1406","messageId":"1407","endLine":112,"endColumn":66},{"ruleId":"1408","severity":1,"message":"1455","line":2,"column":10,"nodeType":"1410","messageId":"1411","endLine":2,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1456","line":2,"column":16,"nodeType":"1410","messageId":"1411","endLine":2,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1457","line":2,"column":24,"nodeType":"1410","messageId":"1411","endLine":2,"endColumn":27},{"ruleId":"1413","severity":1,"message":"1430","line":29,"column":6,"nodeType":"1415","endLine":29,"endColumn":8,"suggestions":"1578"},{"ruleId":"1404","severity":1,"message":"1405","line":56,"column":43,"nodeType":"1406","messageId":"1407","endLine":56,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1579","line":43,"column":33,"nodeType":"1568","messageId":"1580","endLine":43,"endColumn":35},{"ruleId":"1404","severity":1,"message":"1405","line":63,"column":65,"nodeType":"1406","messageId":"1407","endLine":63,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":76,"column":35,"nodeType":"1406","messageId":"1407","endLine":76,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1405","line":70,"column":43,"nodeType":"1406","messageId":"1407","endLine":70,"endColumn":45},{"ruleId":"1404","severity":1,"message":"1405","line":79,"column":41,"nodeType":"1406","messageId":"1407","endLine":79,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1581","line":20,"column":10,"nodeType":"1410","messageId":"1411","endLine":20,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1465","line":70,"column":9,"nodeType":"1410","messageId":"1411","endLine":70,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":77,"column":9,"nodeType":"1410","messageId":"1411","endLine":77,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1405","line":60,"column":66,"nodeType":"1406","messageId":"1407","endLine":60,"endColumn":68},{"ruleId":"1404","severity":1,"message":"1405","line":115,"column":43,"nodeType":"1406","messageId":"1407","endLine":115,"endColumn":45},{"ruleId":"1404","severity":1,"message":"1405","line":123,"column":41,"nodeType":"1406","messageId":"1407","endLine":123,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1576","line":3,"column":24,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":30},{"ruleId":"1408","severity":1,"message":"1577","line":3,"column":32,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1459","line":3,"column":39,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1570","line":4,"column":8,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1455","line":2,"column":10,"nodeType":"1410","messageId":"1411","endLine":2,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1456","line":2,"column":16,"nodeType":"1410","messageId":"1411","endLine":2,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1457","line":2,"column":24,"nodeType":"1410","messageId":"1411","endLine":2,"endColumn":27},{"ruleId":"1413","severity":1,"message":"1430","line":29,"column":6,"nodeType":"1415","endLine":29,"endColumn":8,"suggestions":"1582"},{"ruleId":"1408","severity":1,"message":"1572","line":19,"column":10,"nodeType":"1410","messageId":"1411","endLine":19,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1573","line":22,"column":9,"nodeType":"1410","messageId":"1411","endLine":22,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1574","line":59,"column":9,"nodeType":"1410","messageId":"1411","endLine":59,"endColumn":36},{"ruleId":"1404","severity":1,"message":"1405","line":78,"column":11,"nodeType":"1406","messageId":"1407","endLine":78,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":81,"column":11,"nodeType":"1406","messageId":"1407","endLine":81,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":84,"column":11,"nodeType":"1406","messageId":"1407","endLine":84,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1575","line":90,"column":9,"nodeType":"1410","messageId":"1411","endLine":90,"endColumn":15},{"ruleId":"1413","severity":1,"message":"1583","line":102,"column":6,"nodeType":"1415","endLine":102,"endColumn":30,"suggestions":"1584"},{"ruleId":"1408","severity":1,"message":"1570","line":3,"column":8,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1585","line":21,"column":10,"nodeType":"1410","messageId":"1411","endLine":21,"endColumn":24},{"ruleId":"1413","severity":1,"message":"1586","line":73,"column":6,"nodeType":"1415","endLine":73,"endColumn":8,"suggestions":"1587"},{"ruleId":"1408","severity":1,"message":"1465","line":75,"column":9,"nodeType":"1410","messageId":"1411","endLine":75,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":90,"column":9,"nodeType":"1410","messageId":"1411","endLine":90,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1570","line":3,"column":8,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":13},{"ruleId":"1413","severity":1,"message":"1430","line":27,"column":6,"nodeType":"1415","endLine":27,"endColumn":8,"suggestions":"1588"},{"ruleId":"1413","severity":1,"message":"1430","line":40,"column":6,"nodeType":"1415","endLine":40,"endColumn":14,"suggestions":"1589"},{"ruleId":"1408","severity":1,"message":"1590","line":5,"column":8,"nodeType":"1410","messageId":"1411","endLine":5,"endColumn":16},{"ruleId":"1408","severity":1,"message":"1541","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1591","line":7,"column":21,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1592","line":11,"column":10,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1593","line":11,"column":27,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":45},{"ruleId":"1408","severity":1,"message":"1492","line":97,"column":9,"nodeType":"1410","messageId":"1411","endLine":97,"endColumn":25},{"ruleId":"1594","severity":1,"message":"1595","line":88,"column":9,"nodeType":"1596","messageId":"1407","endLine":88,"endColumn":16},{"ruleId":"1408","severity":1,"message":"1570","line":5,"column":8,"nodeType":"1410","messageId":"1411","endLine":5,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1570","line":71,"column":8,"nodeType":"1410","messageId":"1411","endLine":71,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1451","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1597","line":21,"column":10,"nodeType":"1410","messageId":"1411","endLine":21,"endColumn":28},{"ruleId":"1566","severity":1,"message":"1579","line":42,"column":53,"nodeType":"1568","messageId":"1580","endLine":42,"endColumn":55},{"ruleId":"1413","severity":1,"message":"1598","line":80,"column":6,"nodeType":"1415","endLine":80,"endColumn":8,"suggestions":"1599"},{"ruleId":"1408","severity":1,"message":"1465","line":83,"column":9,"nodeType":"1410","messageId":"1411","endLine":83,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":99,"column":9,"nodeType":"1410","messageId":"1411","endLine":99,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1459","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":14},{"ruleId":"1413","severity":1,"message":"1600","line":59,"column":7,"nodeType":"1601","endLine":59,"endColumn":34},{"ruleId":"1408","severity":1,"message":"1465","line":80,"column":9,"nodeType":"1410","messageId":"1411","endLine":80,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":95,"column":9,"nodeType":"1410","messageId":"1411","endLine":95,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1570","line":3,"column":8,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1456","line":4,"column":16,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1602","line":28,"column":9,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":30},{"ruleId":"1408","severity":1,"message":"1603","line":31,"column":9,"nodeType":"1410","messageId":"1411","endLine":31,"endColumn":31},{"ruleId":"1408","severity":1,"message":"1604","line":34,"column":9,"nodeType":"1410","messageId":"1411","endLine":34,"endColumn":29},{"ruleId":"1404","severity":1,"message":"1405","line":160,"column":47,"nodeType":"1406","messageId":"1407","endLine":160,"endColumn":49},{"ruleId":"1404","severity":1,"message":"1405","line":171,"column":47,"nodeType":"1406","messageId":"1407","endLine":171,"endColumn":49},{"ruleId":"1404","severity":1,"message":"1405","line":296,"column":62,"nodeType":"1406","messageId":"1407","endLine":296,"endColumn":64},{"ruleId":"1404","severity":1,"message":"1405","line":302,"column":62,"nodeType":"1406","messageId":"1407","endLine":302,"endColumn":64},{"ruleId":"1404","severity":1,"message":"1405","line":308,"column":62,"nodeType":"1406","messageId":"1407","endLine":308,"endColumn":64},{"ruleId":"1404","severity":1,"message":"1405","line":314,"column":62,"nodeType":"1406","messageId":"1407","endLine":314,"endColumn":64},{"ruleId":"1404","severity":1,"message":"1405","line":320,"column":62,"nodeType":"1406","messageId":"1407","endLine":320,"endColumn":64},{"ruleId":"1404","severity":1,"message":"1405","line":326,"column":62,"nodeType":"1406","messageId":"1407","endLine":326,"endColumn":64},{"ruleId":"1404","severity":1,"message":"1405","line":332,"column":62,"nodeType":"1406","messageId":"1407","endLine":332,"endColumn":64},{"ruleId":"1404","severity":1,"message":"1405","line":338,"column":62,"nodeType":"1406","messageId":"1407","endLine":338,"endColumn":64},{"ruleId":"1408","severity":1,"message":"1605","line":41,"column":10,"nodeType":"1410","messageId":"1411","endLine":41,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1606","line":41,"column":23,"nodeType":"1410","messageId":"1411","endLine":41,"endColumn":37},{"ruleId":"1413","severity":1,"message":"1607","line":101,"column":6,"nodeType":"1415","endLine":101,"endColumn":18,"suggestions":"1608"},{"ruleId":"1408","severity":1,"message":"1609","line":107,"column":9,"nodeType":"1410","messageId":"1411","endLine":107,"endColumn":29},{"ruleId":"1408","severity":1,"message":"1466","line":125,"column":9,"nodeType":"1410","messageId":"1411","endLine":125,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1467","line":136,"column":9,"nodeType":"1410","messageId":"1411","endLine":136,"endColumn":27},{"ruleId":"1471","severity":1,"message":"1472","line":758,"column":29,"nodeType":"1473","messageId":"1474","endLine":763,"endColumn":30,"fix":"1610"},{"ruleId":"1408","severity":1,"message":"1611","line":5,"column":10,"nodeType":"1410","messageId":"1411","endLine":5,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1459","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1612","line":9,"column":20,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1613","line":9,"column":27,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":36},{"ruleId":"1408","severity":1,"message":"1451","line":9,"column":38,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":47},{"ruleId":"1408","severity":1,"message":"1614","line":10,"column":10,"nodeType":"1410","messageId":"1411","endLine":10,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1615","line":12,"column":10,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1616","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1617","line":13,"column":29,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":34},{"ruleId":"1408","severity":1,"message":"1618","line":16,"column":7,"nodeType":"1410","messageId":"1411","endLine":16,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1479","line":25,"column":10,"nodeType":"1410","messageId":"1411","endLine":25,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1619","line":27,"column":10,"nodeType":"1410","messageId":"1411","endLine":27,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1620","line":28,"column":10,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1621","line":28,"column":27,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":45},{"ruleId":"1408","severity":1,"message":"1605","line":29,"column":10,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1606","line":29,"column":23,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1622","line":91,"column":9,"nodeType":"1410","messageId":"1411","endLine":91,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1609","line":95,"column":9,"nodeType":"1410","messageId":"1411","endLine":95,"endColumn":29},{"ruleId":"1408","severity":1,"message":"1466","line":113,"column":9,"nodeType":"1410","messageId":"1411","endLine":113,"endColumn":25},{"ruleId":"1413","severity":1,"message":"1430","line":29,"column":6,"nodeType":"1415","endLine":29,"endColumn":8,"suggestions":"1623"},{"ruleId":"1413","severity":1,"message":"1430","line":42,"column":6,"nodeType":"1415","endLine":42,"endColumn":14,"suggestions":"1624"},{"ruleId":"1408","severity":1,"message":"1479","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1477","line":10,"column":10,"nodeType":"1410","messageId":"1411","endLine":10,"endColumn":15},{"ruleId":"1413","severity":1,"message":"1564","line":33,"column":6,"nodeType":"1415","endLine":33,"endColumn":8,"suggestions":"1625"},{"ruleId":"1413","severity":1,"message":"1626","line":74,"column":6,"nodeType":"1415","endLine":74,"endColumn":8,"suggestions":"1627"},{"ruleId":"1408","severity":1,"message":"1628","line":137,"column":9,"nodeType":"1410","messageId":"1411","endLine":137,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1533","line":3,"column":10,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1459","line":4,"column":10,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1629","line":6,"column":10,"nodeType":"1410","messageId":"1411","endLine":6,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1479","line":12,"column":10,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1477","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":15},{"ruleId":"1413","severity":1,"message":"1564","line":36,"column":6,"nodeType":"1415","endLine":36,"endColumn":8,"suggestions":"1630"},{"ruleId":"1631","severity":1,"message":"1632","line":60,"column":40,"nodeType":"1633","messageId":"1634","endLine":60,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1626","line":75,"column":6,"nodeType":"1415","endLine":75,"endColumn":8,"suggestions":"1635"},{"ruleId":"1408","severity":1,"message":"1628","line":138,"column":9,"nodeType":"1410","messageId":"1411","endLine":138,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1539","line":146,"column":6,"nodeType":"1415","endLine":146,"endColumn":22,"suggestions":"1636"},{"ruleId":"1408","severity":1,"message":"1637","line":14,"column":9,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":29},{"ruleId":"1413","severity":1,"message":"1638","line":40,"column":6,"nodeType":"1415","endLine":40,"endColumn":18,"suggestions":"1639"},{"ruleId":"1408","severity":1,"message":"1629","line":4,"column":10,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1479","line":10,"column":10,"nodeType":"1410","messageId":"1411","endLine":10,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1477","line":11,"column":10,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1640","line":70,"column":9,"nodeType":"1410","messageId":"1411","endLine":70,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1449","line":15,"column":10,"nodeType":"1410","messageId":"1411","endLine":15,"endColumn":34},{"ruleId":"1408","severity":1,"message":"1618","line":18,"column":7,"nodeType":"1410","messageId":"1411","endLine":18,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1493","line":26,"column":10,"nodeType":"1410","messageId":"1411","endLine":26,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1479","line":27,"column":10,"nodeType":"1410","messageId":"1411","endLine":27,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1511","line":28,"column":10,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1512","line":28,"column":22,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1641","line":29,"column":10,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":21},{"ruleId":"1566","severity":1,"message":"1579","line":54,"column":42,"nodeType":"1568","messageId":"1580","endLine":54,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1405","line":91,"column":64,"nodeType":"1406","messageId":"1407","endLine":91,"endColumn":66},{"ruleId":"1408","severity":1,"message":"1642","line":107,"column":9,"nodeType":"1410","messageId":"1411","endLine":107,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1494","line":151,"column":6,"nodeType":"1415","endLine":151,"endColumn":8,"suggestions":"1643"},{"ruleId":"1408","severity":1,"message":"1465","line":153,"column":9,"nodeType":"1410","messageId":"1411","endLine":153,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":168,"column":9,"nodeType":"1410","messageId":"1411","endLine":168,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1405","line":179,"column":11,"nodeType":"1406","messageId":"1407","endLine":179,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":182,"column":11,"nodeType":"1406","messageId":"1407","endLine":182,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":185,"column":11,"nodeType":"1406","messageId":"1407","endLine":185,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1644","line":192,"column":9,"nodeType":"1410","messageId":"1411","endLine":192,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1645","line":199,"column":9,"nodeType":"1410","messageId":"1411","endLine":199,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1611","line":11,"column":10,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1460","line":22,"column":10,"nodeType":"1410","messageId":"1411","endLine":22,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1618","line":25,"column":7,"nodeType":"1410","messageId":"1411","endLine":25,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1461","line":33,"column":10,"nodeType":"1410","messageId":"1411","endLine":33,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1479","line":34,"column":10,"nodeType":"1410","messageId":"1411","endLine":34,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1462","line":37,"column":28,"nodeType":"1410","messageId":"1411","endLine":37,"endColumn":47},{"ruleId":"1408","severity":1,"message":"1463","line":39,"column":10,"nodeType":"1410","messageId":"1411","endLine":39,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1646","line":40,"column":10,"nodeType":"1410","messageId":"1411","endLine":40,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1647","line":40,"column":26,"nodeType":"1410","messageId":"1411","endLine":40,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1642","line":120,"column":9,"nodeType":"1410","messageId":"1411","endLine":120,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1464","line":167,"column":9,"nodeType":"1410","messageId":"1411","endLine":167,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1465","line":181,"column":9,"nodeType":"1410","messageId":"1411","endLine":181,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":193,"column":9,"nodeType":"1410","messageId":"1411","endLine":193,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1467","line":205,"column":9,"nodeType":"1410","messageId":"1411","endLine":205,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1648","line":220,"column":9,"nodeType":"1410","messageId":"1411","endLine":220,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1649","line":224,"column":9,"nodeType":"1410","messageId":"1411","endLine":224,"endColumn":27},{"ruleId":"1413","severity":1,"message":"1468","line":260,"column":6,"nodeType":"1415","endLine":260,"endColumn":15,"suggestions":"1650"},{"ruleId":"1408","severity":1,"message":"1576","line":3,"column":24,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":30},{"ruleId":"1408","severity":1,"message":"1577","line":3,"column":32,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1459","line":3,"column":39,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1451","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1651","line":12,"column":10,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":21},{"ruleId":"1566","severity":1,"message":"1579","line":84,"column":36,"nodeType":"1568","messageId":"1580","endLine":84,"endColumn":38},{"ruleId":"1404","severity":1,"message":"1405","line":102,"column":65,"nodeType":"1406","messageId":"1407","endLine":102,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":115,"column":35,"nodeType":"1406","messageId":"1407","endLine":115,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1457","line":3,"column":18,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1576","line":4,"column":24,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":30},{"ruleId":"1408","severity":1,"message":"1577","line":4,"column":32,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1652","line":28,"column":10,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1653","line":29,"column":10,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":26},{"ruleId":"1408","severity":1,"message":"1654","line":170,"column":9,"nodeType":"1410","messageId":"1411","endLine":170,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1655","line":187,"column":9,"nodeType":"1410","messageId":"1411","endLine":187,"endColumn":28},{"ruleId":"1408","severity":1,"message":"1656","line":191,"column":9,"nodeType":"1410","messageId":"1411","endLine":191,"endColumn":21},{"ruleId":"1404","severity":1,"message":"1405","line":243,"column":75,"nodeType":"1406","messageId":"1407","endLine":243,"endColumn":77},{"ruleId":"1404","severity":1,"message":"1405","line":246,"column":75,"nodeType":"1406","messageId":"1407","endLine":246,"endColumn":77},{"ruleId":"1404","severity":1,"message":"1405","line":249,"column":75,"nodeType":"1406","messageId":"1407","endLine":249,"endColumn":77},{"ruleId":"1404","severity":1,"message":"1405","line":252,"column":75,"nodeType":"1406","messageId":"1407","endLine":252,"endColumn":77},{"ruleId":"1404","severity":1,"message":"1405","line":273,"column":60,"nodeType":"1406","messageId":"1407","endLine":273,"endColumn":62},{"ruleId":"1404","severity":1,"message":"1405","line":294,"column":41,"nodeType":"1406","messageId":"1407","endLine":294,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":304,"column":41,"nodeType":"1406","messageId":"1407","endLine":304,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":395,"column":66,"nodeType":"1406","messageId":"1407","endLine":395,"endColumn":68},{"ruleId":"1404","severity":1,"message":"1405","line":419,"column":64,"nodeType":"1406","messageId":"1407","endLine":419,"endColumn":66},{"ruleId":"1404","severity":1,"message":"1405","line":69,"column":66,"nodeType":"1406","messageId":"1407","endLine":69,"endColumn":68},{"ruleId":"1408","severity":1,"message":"1479","line":10,"column":10,"nodeType":"1410","messageId":"1411","endLine":10,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1576","line":3,"column":24,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":30},{"ruleId":"1408","severity":1,"message":"1577","line":3,"column":32,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1459","line":3,"column":39,"nodeType":"1410","messageId":"1411","endLine":3,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":74,"column":66,"nodeType":"1406","messageId":"1407","endLine":74,"endColumn":68},{"ruleId":"1408","severity":1,"message":"1456","line":4,"column":16,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1611","line":6,"column":10,"nodeType":"1410","messageId":"1411","endLine":6,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1455","line":11,"column":3,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":7},{"ruleId":"1408","severity":1,"message":"1457","line":13,"column":3,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":6},{"ruleId":"1408","severity":1,"message":"1458","line":14,"column":3,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":6},{"ruleId":"1408","severity":1,"message":"1657","line":16,"column":3,"nodeType":"1410","messageId":"1411","endLine":16,"endColumn":11},{"ruleId":"1408","severity":1,"message":"1658","line":17,"column":3,"nodeType":"1410","messageId":"1411","endLine":17,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1618","line":20,"column":7,"nodeType":"1410","messageId":"1411","endLine":20,"endColumn":15},{"ruleId":"1566","severity":1,"message":"1579","line":55,"column":37,"nodeType":"1568","messageId":"1580","endLine":55,"endColumn":39},{"ruleId":"1404","severity":1,"message":"1405","line":74,"column":65,"nodeType":"1406","messageId":"1407","endLine":74,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":87,"column":35,"nodeType":"1406","messageId":"1407","endLine":87,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1405","line":63,"column":66,"nodeType":"1406","messageId":"1407","endLine":63,"endColumn":68},{"ruleId":"1566","severity":1,"message":"1579","line":48,"column":33,"nodeType":"1568","messageId":"1580","endLine":48,"endColumn":35},{"ruleId":"1404","severity":1,"message":"1405","line":67,"column":65,"nodeType":"1406","messageId":"1407","endLine":67,"endColumn":67},{"ruleId":"1404","severity":1,"message":"1405","line":80,"column":35,"nodeType":"1406","messageId":"1407","endLine":80,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1461","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1479","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1523","line":11,"column":10,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1524","line":11,"column":23,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":37},{"ruleId":"1408","severity":1,"message":"1525","line":12,"column":10,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":26},{"ruleId":"1408","severity":1,"message":"1462","line":12,"column":28,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":47},{"ruleId":"1408","severity":1,"message":"1526","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1527","line":13,"column":29,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":49},{"ruleId":"1413","severity":1,"message":"1468","line":95,"column":6,"nodeType":"1415","endLine":95,"endColumn":15,"suggestions":"1659"},{"ruleId":"1408","severity":1,"message":"1660","line":5,"column":10,"nodeType":"1410","messageId":"1411","endLine":5,"endColumn":26},{"ruleId":"1408","severity":1,"message":"1541","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1591","line":9,"column":21,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1592","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1593","line":13,"column":27,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":45},{"ruleId":"1408","severity":1,"message":"1492","line":99,"column":9,"nodeType":"1410","messageId":"1411","endLine":99,"endColumn":25},{"ruleId":"1566","severity":1,"message":"1579","line":40,"column":35,"nodeType":"1568","messageId":"1580","endLine":40,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1405","line":44,"column":36,"nodeType":"1406","messageId":"1407","endLine":44,"endColumn":38},{"ruleId":"1404","severity":1,"message":"1405","line":61,"column":9,"nodeType":"1406","messageId":"1407","endLine":61,"endColumn":11},{"ruleId":"1404","severity":1,"message":"1405","line":100,"column":11,"nodeType":"1406","messageId":"1407","endLine":100,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1485","line":218,"column":5,"nodeType":"1410","messageId":"1411","endLine":218,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1486","line":220,"column":5,"nodeType":"1410","messageId":"1411","endLine":220,"endColumn":17},{"ruleId":"1413","severity":1,"message":"1487","line":246,"column":6,"nodeType":"1415","endLine":246,"endColumn":8,"suggestions":"1661"},{"ruleId":"1413","severity":1,"message":"1489","line":268,"column":6,"nodeType":"1415","endLine":268,"endColumn":8,"suggestions":"1662"},{"ruleId":"1408","severity":1,"message":"1491","line":271,"column":9,"nodeType":"1410","messageId":"1411","endLine":271,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1477","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1663","line":6,"column":10,"nodeType":"1410","messageId":"1411","endLine":6,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1510","line":23,"column":32,"nodeType":"1410","messageId":"1411","endLine":23,"endColumn":55},{"ruleId":"1408","severity":1,"message":"1461","line":28,"column":10,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1511","line":29,"column":10,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1512","line":29,"column":22,"nodeType":"1410","messageId":"1411","endLine":29,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1513","line":31,"column":10,"nodeType":"1410","messageId":"1411","endLine":31,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1514","line":31,"column":20,"nodeType":"1410","messageId":"1411","endLine":31,"endColumn":31},{"ruleId":"1408","severity":1,"message":"1515","line":32,"column":10,"nodeType":"1410","messageId":"1411","endLine":32,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1516","line":32,"column":20,"nodeType":"1410","messageId":"1411","endLine":32,"endColumn":31},{"ruleId":"1408","severity":1,"message":"1517","line":33,"column":10,"nodeType":"1410","messageId":"1411","endLine":33,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1477","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1664","line":8,"column":9,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1477","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1477","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":15},{"ruleId":"1503","severity":1,"message":"1504","line":153,"column":7,"nodeType":"1473","endLine":153,"endColumn":54},{"ruleId":"1408","severity":1,"message":"1665","line":16,"column":9,"nodeType":"1410","messageId":"1411","endLine":16,"endColumn":39},{"ruleId":"1408","severity":1,"message":"1666","line":57,"column":9,"nodeType":"1410","messageId":"1411","endLine":57,"endColumn":24},{"ruleId":"1413","severity":1,"message":"1430","line":28,"column":6,"nodeType":"1415","endLine":28,"endColumn":8,"suggestions":"1667"},{"ruleId":"1413","severity":1,"message":"1430","line":41,"column":6,"nodeType":"1415","endLine":41,"endColumn":14,"suggestions":"1668"},{"ruleId":"1408","severity":1,"message":"1669","line":4,"column":8,"nodeType":"1410","messageId":"1411","endLine":4,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1670","line":55,"column":9,"nodeType":"1410","messageId":"1411","endLine":55,"endColumn":14},{"ruleId":"1408","severity":1,"message":"1671","line":127,"column":9,"nodeType":"1410","messageId":"1411","endLine":127,"endColumn":15},{"ruleId":"1404","severity":1,"message":"1405","line":128,"column":11,"nodeType":"1406","messageId":"1407","endLine":128,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":131,"column":11,"nodeType":"1406","messageId":"1407","endLine":131,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":134,"column":11,"nodeType":"1406","messageId":"1407","endLine":134,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":137,"column":11,"nodeType":"1406","messageId":"1407","endLine":137,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":140,"column":11,"nodeType":"1406","messageId":"1407","endLine":140,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":143,"column":11,"nodeType":"1406","messageId":"1407","endLine":143,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":146,"column":11,"nodeType":"1406","messageId":"1407","endLine":146,"endColumn":13},{"ruleId":"1400","replacedBy":"1672"},{"ruleId":"1402","replacedBy":"1673"},{"ruleId":"1408","severity":1,"message":"1629","line":6,"column":10,"nodeType":"1410","messageId":"1411","endLine":6,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1479","line":12,"column":10,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1477","line":13,"column":10,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1674","line":77,"column":9,"nodeType":"1410","messageId":"1411","endLine":77,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1640","line":125,"column":9,"nodeType":"1410","messageId":"1411","endLine":125,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1611","line":11,"column":10,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1460","line":23,"column":10,"nodeType":"1410","messageId":"1411","endLine":23,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1618","line":26,"column":7,"nodeType":"1410","messageId":"1411","endLine":26,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1461","line":34,"column":10,"nodeType":"1410","messageId":"1411","endLine":34,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1479","line":35,"column":10,"nodeType":"1410","messageId":"1411","endLine":35,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1462","line":38,"column":28,"nodeType":"1410","messageId":"1411","endLine":38,"endColumn":47},{"ruleId":"1408","severity":1,"message":"1463","line":40,"column":10,"nodeType":"1410","messageId":"1411","endLine":40,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1646","line":41,"column":10,"nodeType":"1410","messageId":"1411","endLine":41,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1647","line":41,"column":26,"nodeType":"1410","messageId":"1411","endLine":41,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1642","line":121,"column":9,"nodeType":"1410","messageId":"1411","endLine":121,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1464","line":168,"column":9,"nodeType":"1410","messageId":"1411","endLine":168,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1465","line":182,"column":9,"nodeType":"1410","messageId":"1411","endLine":182,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":194,"column":9,"nodeType":"1410","messageId":"1411","endLine":194,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1467","line":206,"column":9,"nodeType":"1410","messageId":"1411","endLine":206,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1648","line":221,"column":9,"nodeType":"1410","messageId":"1411","endLine":221,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1649","line":225,"column":9,"nodeType":"1410","messageId":"1411","endLine":225,"endColumn":27},{"ruleId":"1413","severity":1,"message":"1468","line":261,"column":6,"nodeType":"1415","endLine":261,"endColumn":15,"suggestions":"1675"},{"ruleId":"1408","severity":1,"message":"1676","line":5,"column":10,"nodeType":"1410","messageId":"1411","endLine":5,"endColumn":16},{"ruleId":"1408","severity":1,"message":"1611","line":6,"column":10,"nodeType":"1410","messageId":"1411","endLine":6,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1455","line":12,"column":3,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":7},{"ruleId":"1408","severity":1,"message":"1456","line":13,"column":3,"nodeType":"1410","messageId":"1411","endLine":13,"endColumn":9},{"ruleId":"1408","severity":1,"message":"1457","line":14,"column":3,"nodeType":"1410","messageId":"1411","endLine":14,"endColumn":6},{"ruleId":"1408","severity":1,"message":"1458","line":15,"column":3,"nodeType":"1410","messageId":"1411","endLine":15,"endColumn":6},{"ruleId":"1408","severity":1,"message":"1677","line":16,"column":3,"nodeType":"1410","messageId":"1411","endLine":16,"endColumn":8},{"ruleId":"1408","severity":1,"message":"1657","line":17,"column":3,"nodeType":"1410","messageId":"1411","endLine":17,"endColumn":11},{"ruleId":"1408","severity":1,"message":"1658","line":18,"column":3,"nodeType":"1410","messageId":"1411","endLine":18,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1449","line":24,"column":10,"nodeType":"1410","messageId":"1411","endLine":24,"endColumn":34},{"ruleId":"1408","severity":1,"message":"1618","line":27,"column":7,"nodeType":"1410","messageId":"1411","endLine":27,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1493","line":35,"column":10,"nodeType":"1410","messageId":"1411","endLine":35,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1479","line":36,"column":10,"nodeType":"1410","messageId":"1411","endLine":36,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1511","line":37,"column":10,"nodeType":"1410","messageId":"1411","endLine":37,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1512","line":37,"column":22,"nodeType":"1410","messageId":"1411","endLine":37,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1641","line":38,"column":10,"nodeType":"1410","messageId":"1411","endLine":38,"endColumn":21},{"ruleId":"1566","severity":1,"message":"1579","line":63,"column":42,"nodeType":"1568","messageId":"1580","endLine":63,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1405","line":100,"column":64,"nodeType":"1406","messageId":"1407","endLine":100,"endColumn":66},{"ruleId":"1631","severity":1,"message":"1632","line":102,"column":17,"nodeType":"1633","messageId":"1634","endLine":102,"endColumn":56},{"ruleId":"1408","severity":1,"message":"1642","line":116,"column":9,"nodeType":"1410","messageId":"1411","endLine":116,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1494","line":160,"column":6,"nodeType":"1415","endLine":160,"endColumn":8,"suggestions":"1678"},{"ruleId":"1408","severity":1,"message":"1465","line":162,"column":9,"nodeType":"1410","messageId":"1411","endLine":162,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":177,"column":9,"nodeType":"1410","messageId":"1411","endLine":177,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1405","line":188,"column":11,"nodeType":"1406","messageId":"1407","endLine":188,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":191,"column":11,"nodeType":"1406","messageId":"1407","endLine":191,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":194,"column":11,"nodeType":"1406","messageId":"1407","endLine":194,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1644","line":201,"column":9,"nodeType":"1410","messageId":"1411","endLine":201,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1645","line":208,"column":9,"nodeType":"1410","messageId":"1411","endLine":208,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1493","line":25,"column":10,"nodeType":"1410","messageId":"1411","endLine":25,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1511","line":27,"column":10,"nodeType":"1410","messageId":"1411","endLine":27,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1512","line":27,"column":22,"nodeType":"1410","messageId":"1411","endLine":27,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1641","line":28,"column":10,"nodeType":"1410","messageId":"1411","endLine":28,"endColumn":21},{"ruleId":"1566","severity":1,"message":"1579","line":53,"column":42,"nodeType":"1568","messageId":"1580","endLine":53,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1405","line":91,"column":64,"nodeType":"1406","messageId":"1407","endLine":91,"endColumn":66},{"ruleId":"1413","severity":1,"message":"1494","line":151,"column":6,"nodeType":"1415","endLine":151,"endColumn":8,"suggestions":"1679"},{"ruleId":"1408","severity":1,"message":"1465","line":153,"column":9,"nodeType":"1410","messageId":"1411","endLine":153,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":168,"column":9,"nodeType":"1410","messageId":"1411","endLine":168,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1405","line":179,"column":11,"nodeType":"1406","messageId":"1407","endLine":179,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":182,"column":11,"nodeType":"1406","messageId":"1407","endLine":182,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":185,"column":11,"nodeType":"1406","messageId":"1407","endLine":185,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":343,"column":41,"nodeType":"1406","messageId":"1407","endLine":343,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1680","line":5,"column":24,"nodeType":"1410","messageId":"1411","endLine":5,"endColumn":39},{"ruleId":"1408","severity":1,"message":"1681","line":8,"column":22,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1682","line":11,"column":30,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":51},{"ruleId":"1404","severity":1,"message":"1405","line":45,"column":63,"nodeType":"1406","messageId":"1407","endLine":45,"endColumn":65},{"ruleId":"1404","severity":1,"message":"1405","line":52,"column":63,"nodeType":"1406","messageId":"1407","endLine":52,"endColumn":65},{"ruleId":"1404","severity":1,"message":"1405","line":60,"column":55,"nodeType":"1406","messageId":"1407","endLine":60,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1405","line":112,"column":60,"nodeType":"1406","messageId":"1407","endLine":112,"endColumn":62},{"ruleId":"1404","severity":1,"message":"1405","line":118,"column":60,"nodeType":"1406","messageId":"1407","endLine":118,"endColumn":62},{"ruleId":"1408","severity":1,"message":"1541","line":7,"column":10,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":19},{"ruleId":"1408","severity":1,"message":"1591","line":7,"column":21,"nodeType":"1410","messageId":"1411","endLine":7,"endColumn":33},{"ruleId":"1408","severity":1,"message":"1592","line":11,"column":10,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1593","line":11,"column":27,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":45},{"ruleId":"1408","severity":1,"message":"1492","line":60,"column":9,"nodeType":"1410","messageId":"1411","endLine":60,"endColumn":25},{"ruleId":"1413","severity":1,"message":"1430","line":27,"column":6,"nodeType":"1415","endLine":27,"endColumn":8,"suggestions":"1683"},{"ruleId":"1413","severity":1,"message":"1430","line":40,"column":6,"nodeType":"1415","endLine":40,"endColumn":14,"suggestions":"1684"},{"ruleId":"1408","severity":1,"message":"1479","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1477","line":10,"column":10,"nodeType":"1410","messageId":"1411","endLine":10,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1479","line":8,"column":10,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1537","line":8,"column":19,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":29},{"ruleId":"1408","severity":1,"message":"1477","line":9,"column":10,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1538","line":9,"column":17,"nodeType":"1410","messageId":"1411","endLine":9,"endColumn":25},{"ruleId":"1413","severity":1,"message":"1539","line":87,"column":6,"nodeType":"1415","endLine":87,"endColumn":22,"suggestions":"1685"},{"ruleId":"1408","severity":1,"message":"1618","line":15,"column":7,"nodeType":"1410","messageId":"1411","endLine":15,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1493","line":23,"column":10,"nodeType":"1410","messageId":"1411","endLine":23,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1479","line":24,"column":10,"nodeType":"1410","messageId":"1411","endLine":24,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1511","line":25,"column":10,"nodeType":"1410","messageId":"1411","endLine":25,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1512","line":25,"column":22,"nodeType":"1410","messageId":"1411","endLine":25,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1641","line":26,"column":10,"nodeType":"1410","messageId":"1411","endLine":26,"endColumn":21},{"ruleId":"1566","severity":1,"message":"1579","line":51,"column":42,"nodeType":"1568","messageId":"1580","endLine":51,"endColumn":44},{"ruleId":"1404","severity":1,"message":"1405","line":88,"column":64,"nodeType":"1406","messageId":"1407","endLine":88,"endColumn":66},{"ruleId":"1408","severity":1,"message":"1642","line":104,"column":9,"nodeType":"1410","messageId":"1411","endLine":104,"endColumn":20},{"ruleId":"1413","severity":1,"message":"1494","line":148,"column":6,"nodeType":"1415","endLine":148,"endColumn":8,"suggestions":"1686"},{"ruleId":"1408","severity":1,"message":"1465","line":150,"column":9,"nodeType":"1410","messageId":"1411","endLine":150,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":165,"column":9,"nodeType":"1410","messageId":"1411","endLine":165,"endColumn":25},{"ruleId":"1404","severity":1,"message":"1405","line":176,"column":11,"nodeType":"1406","messageId":"1407","endLine":176,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":179,"column":11,"nodeType":"1406","messageId":"1407","endLine":179,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":182,"column":11,"nodeType":"1406","messageId":"1407","endLine":182,"endColumn":13},{"ruleId":"1408","severity":1,"message":"1644","line":189,"column":9,"nodeType":"1410","messageId":"1411","endLine":189,"endColumn":23},{"ruleId":"1408","severity":1,"message":"1645","line":196,"column":9,"nodeType":"1410","messageId":"1411","endLine":196,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1618","line":23,"column":7,"nodeType":"1410","messageId":"1411","endLine":23,"endColumn":15},{"ruleId":"1408","severity":1,"message":"1461","line":31,"column":10,"nodeType":"1410","messageId":"1411","endLine":31,"endColumn":22},{"ruleId":"1408","severity":1,"message":"1479","line":32,"column":10,"nodeType":"1410","messageId":"1411","endLine":32,"endColumn":17},{"ruleId":"1408","severity":1,"message":"1462","line":35,"column":28,"nodeType":"1410","messageId":"1411","endLine":35,"endColumn":47},{"ruleId":"1408","severity":1,"message":"1463","line":37,"column":10,"nodeType":"1410","messageId":"1411","endLine":37,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1646","line":38,"column":10,"nodeType":"1410","messageId":"1411","endLine":38,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1647","line":38,"column":26,"nodeType":"1410","messageId":"1411","endLine":38,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1642","line":118,"column":9,"nodeType":"1410","messageId":"1411","endLine":118,"endColumn":20},{"ruleId":"1408","severity":1,"message":"1464","line":165,"column":9,"nodeType":"1410","messageId":"1411","endLine":165,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1465","line":179,"column":9,"nodeType":"1410","messageId":"1411","endLine":179,"endColumn":21},{"ruleId":"1408","severity":1,"message":"1466","line":191,"column":9,"nodeType":"1410","messageId":"1411","endLine":191,"endColumn":25},{"ruleId":"1408","severity":1,"message":"1467","line":203,"column":9,"nodeType":"1410","messageId":"1411","endLine":203,"endColumn":27},{"ruleId":"1408","severity":1,"message":"1648","line":218,"column":9,"nodeType":"1410","messageId":"1411","endLine":218,"endColumn":32},{"ruleId":"1408","severity":1,"message":"1649","line":222,"column":9,"nodeType":"1410","messageId":"1411","endLine":222,"endColumn":27},{"ruleId":"1413","severity":1,"message":"1468","line":258,"column":6,"nodeType":"1415","endLine":258,"endColumn":15,"suggestions":"1687"},{"ruleId":"1400","replacedBy":"1688"},{"ruleId":"1402","replacedBy":"1689"},{"ruleId":"1408","severity":1,"message":"1665","line":12,"column":9,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":39},{"ruleId":"1408","severity":1,"message":"1666","line":53,"column":9,"nodeType":"1410","messageId":"1411","endLine":53,"endColumn":24},{"ruleId":"1408","severity":1,"message":"1493","line":21,"column":10,"nodeType":"1410","messageId":"1411","endLine":21,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1494","line":68,"column":6,"nodeType":"1415","endLine":68,"endColumn":8,"suggestions":"1690"},{"ruleId":"1413","severity":1,"message":"1496","line":72,"column":6,"nodeType":"1415","endLine":72,"endColumn":19,"suggestions":"1691"},{"ruleId":"1404","severity":1,"message":"1405","line":140,"column":11,"nodeType":"1406","messageId":"1407","endLine":140,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":143,"column":11,"nodeType":"1406","messageId":"1407","endLine":143,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":146,"column":11,"nodeType":"1406","messageId":"1407","endLine":146,"endColumn":13},{"ruleId":"1404","severity":1,"message":"1405","line":315,"column":41,"nodeType":"1406","messageId":"1407","endLine":315,"endColumn":43},{"ruleId":"1408","severity":1,"message":"1680","line":5,"column":24,"nodeType":"1410","messageId":"1411","endLine":5,"endColumn":39},{"ruleId":"1408","severity":1,"message":"1681","line":8,"column":22,"nodeType":"1410","messageId":"1411","endLine":8,"endColumn":35},{"ruleId":"1408","severity":1,"message":"1682","line":11,"column":30,"nodeType":"1410","messageId":"1411","endLine":11,"endColumn":51},{"ruleId":"1404","severity":1,"message":"1405","line":45,"column":63,"nodeType":"1406","messageId":"1407","endLine":45,"endColumn":65},{"ruleId":"1404","severity":1,"message":"1405","line":52,"column":63,"nodeType":"1406","messageId":"1407","endLine":52,"endColumn":65},{"ruleId":"1404","severity":1,"message":"1405","line":60,"column":55,"nodeType":"1406","messageId":"1407","endLine":60,"endColumn":57},{"ruleId":"1404","severity":1,"message":"1405","line":112,"column":60,"nodeType":"1406","messageId":"1407","endLine":112,"endColumn":62},{"ruleId":"1404","severity":1,"message":"1405","line":118,"column":60,"nodeType":"1406","messageId":"1407","endLine":118,"endColumn":62},{"ruleId":"1413","severity":1,"message":"1487","line":36,"column":6,"nodeType":"1415","endLine":36,"endColumn":8,"suggestions":"1692"},{"ruleId":"1408","severity":1,"message":"1693","line":209,"column":7,"nodeType":"1410","messageId":"1411","endLine":209,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1694","line":12,"column":10,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":18},{"ruleId":"1408","severity":1,"message":"1591","line":12,"column":20,"nodeType":"1410","messageId":"1411","endLine":12,"endColumn":32},"no-native-reassign",["1695"],"no-negated-in-lhs",["1696"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setPassMatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stage'. Either include it or remove the dependency array.","ArrayExpression",["1697"],"'response' is assigned a value but never used.","'SidebarSmallScreen' is defined but never used.","'isOpen' is assigned a value but never used.","'faUsers' is defined but never used.","'faFileAlt' is defined but never used.","'BsBuildingsFill' is defined but never used.","'FaAddressBook' is defined but never used.","'MdDashboard' is defined but never used.","'MdMenuOpen' is defined but never used.","'MdHolidayVillage' is defined but never used.","'React' is defined but never used.","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","React Hook useEffect has a missing dependency: 'loadEmployeeData'. Either include it or remove the dependency array.",["1698"],"React Hook useEffect has missing dependencies: 'email', 'loadEmployeeData', and 'location'. Either include them or remove the dependency array.",["1699"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'FaUserCircle' is defined but never used.","'DashContainer' is defined but never used.","'FaCalendarCheck' is defined but never used.","'MdTaskAlt' is defined but never used.","'TbDeviceIpadMinus' is defined but never used.","'FcLeave' is defined but never used.","'EmployeeInfo' is defined but never used.","'Container' is defined but never used.","'toast' is defined but never used.","'endDateError' is assigned a value but never used.","'id' is assigned a value but never used.","'BsFillFileEarmarkPdfFill' is defined but never used.","'IoMdInformationCircleOutline' is defined but never used.","'FaRegEdit' is defined but never used.","'MdDeleteForever' is defined but never used.","'SiMinutemailer' is defined but never used.","'TbPhoneCalling' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'FiSearch' is defined but never used.","'employeeData' is assigned a value but never used.","'setIsIdFilterActive' is assigned a value but never used.","'upcomingBirthdays' is assigned a value but never used.","'renderInfoButton' is assigned a value but never used.","'renderButton' is assigned a value but never used.","'renderEditButton' is assigned a value but never used.","'getBackgroundColor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calculateUpcomingBirthdays'. Either include it or remove the dependency array.",["1700"],"'allCount' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"1701","text":"1702"},{"range":"1703","text":"1702"},"'error' is assigned a value but never used.","'PiInfoFill' is defined but never used.","'loading' is assigned a value but never used.","'isCanceling' is assigned a value but never used.","'askStatus' is assigned a value but never used.","'FaCheck' is defined but never used.","'isCompleting' is assigned a value but never used.","'setIsCompleting' is assigned a value but never used.","'selectedEmployee' is assigned a value but never used.","'attencenceID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setEmployees'. Either include it or remove the dependency array.",["1704"],"React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["1705"],"'handleUserChange' is assigned a value but never used.","'getTotalHolidays' is assigned a value but never used.","'leaveApplicationHRData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadLeaveApplicationHRData'. Either include it or remove the dependency array.",["1706"],"React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array.",["1707"],["1708"],["1709"],"'useContext' is defined but never used.",["1710"],["1711"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'getLogStatus' is assigned a value but never used.","'millisecondsToTime' is assigned a value but never used.","'formattedHours' is assigned a value but never used.",["1712"],["1713"],"'setOriginalEmployeeData' is assigned a value but never used.","'searchData' is assigned a value but never used.","'setSearchData' is assigned a value but never used.","'rowIndex' is assigned a value but never used.","'setRowIndex' is assigned a value but never used.","'moreInfo' is assigned a value but never used.","'setMoreInfo' is assigned a value but never used.","'taskDepartment' is assigned a value but never used.",["1714"],["1715"],["1716"],["1717"],["1718"],"'searchInput' is assigned a value but never used.","'setSearchInput' is assigned a value but never used.","'isIdFilterActive' is assigned a value but never used.","'isIdSortAscending' is assigned a value but never used.","'setIsIdSortAscending' is assigned a value but never used.",["1719"],"'LeaveApplicationEmpTable' is defined but never used.","'EmpTaskCount' is defined but never used.","'DepartmentChart' is defined but never used.","'Chart' is defined but never used.","'IoIosArrowDroprightCircle' is defined but never used.","'EmpProfile' is defined but never used.","'totalEmployeeLeave' is assigned a value but never used.","'updateTotalEmployeeLeave' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateChartOptions'. Either include it or remove the dependency array.",["1720"],"'employees' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchEmployees'. Either include it or remove the dependency array.",["1721"],"React Hook useEffect has a missing dependency: 'handleFetchAttendance'. Either include it or remove the dependency array.",["1722"],"'FaCircleInfo' is defined but never used.","'hoveredDate' is assigned a value but never used.","'isInfoHovering' is assigned a value but never used.","'handleInfoMouseEnter' is assigned a value but never used.","'handleInfoMouseLeave' is assigned a value but never used.",["1723"],["1724"],"React Hook useEffect has missing dependencies: 'props.data' and 'setEmployees'. Either include them or remove the dependency array.",["1725"],["1726"],"'isAccepted' is assigned a value but never used.","'isRejected' is assigned a value but never used.","'AcceptTask' is assigned a value but never used.","'RejectTask' is assigned a value but never used.","'completeTask' is assigned a value but never used.","'isHovered' is assigned a value but never used.","'setIsHovered' is assigned a value but never used.","'taskId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1727"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'axios' is defined but never used.","'InnerDashContainer' is defined but never used.","'leaveApplicationEmpData' is assigned a value but never used.","'userId' is assigned a value but never used.","'onLeaveApplicationEmpDelete' is assigned a value but never used.","'onEdit' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.",["1728"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'rowData' is assigned a value but never used.",["1729"],"React Hook useEffect has a missing dependency: 'loadLeaveApplicationEmpData'. Either include it or remove the dependency array.",["1730"],"'familyInfoData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadFamilyInfoData'. Either include it or remove the dependency array.",["1731"],["1732"],["1733"],"'BASE_URL' is defined but never used.","'setEmployees' is assigned a value but never used.","'isButtonClicked' is assigned a value but never used.","'setIsButtonClicked' is assigned a value but never used.","no-dupe-keys","Duplicate key 'onClick'.","ObjectExpression","'workExperienceData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadWorkExperienceData'. Either include it or remove the dependency array.",["1734"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'onFirstNameDataChange' is assigned a value but never used.","'onMiddleNameDataChange' is assigned a value but never used.","'onLastNameDataChange' is assigned a value but never used.","'visibleDocs' is assigned a value but never used.","'setVisibleDocs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPersonalInfoData'. Either include it or remove the dependency array.",["1735"],"'onPersonalInfoDelete' is assigned a value but never used.",{"range":"1736","text":"1702"},"'RingLoader' is defined but never used.","'FaEye' is defined but never used.","'FaFilePdf' is defined but never used.","'IoMdDownload' is defined but never used.","'GoDotFill' is defined but never used.","'IoArrowBackCircle' is defined but never used.","'IoEye' is defined but never used.","'override' is assigned a value but never used.","'activeSection' is assigned a value but never used.","'showDownloadbtn' is assigned a value but never used.","'setShowDownloadbtn' is assigned a value but never used.","'onToggleSection' is assigned a value but never used.",["1737"],["1738"],["1739"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["1740"],"'lateCompletedTasksCount' is assigned a value but never used.","'FaChartLine' is defined but never used.",["1741"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["1742"],["1743"],"'toggleListVisibility' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterHolidays'. Either include it or remove the dependency array.",["1744"],"'chartData' is assigned a value but never used.","'totalLeaves' is assigned a value but never used.","'exportToPDF' is assigned a value but never used.",["1745"],"'renderSortIcon' is assigned a value but never used.","'sortData' is assigned a value but never used.","'selectedFilter' is assigned a value but never used.","'setSelectedFilter' is assigned a value but never used.","'handleSearchInputChange' is assigned a value but never used.","'handleToggleIdSort' is assigned a value but never used.",["1746"],"'AgGridReact' is defined but never used.","'profile' is assigned a value but never used.","'employeeCodeData' is assigned a value but never used.","'onEmployeeCodeDataChange' is assigned a value but never used.","'onProfileDataChange' is assigned a value but never used.","'onFormSubmit' is assigned a value but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.",["1747"],"'MdOutlineRefresh' is defined but never used.",["1748"],["1749"],"'Toaster' is defined but never used.","'email' is assigned a value but never used.","'handleLeaveApplicationHRSubmit' is assigned a value but never used.","'handleFormClose' is assigned a value but never used.",["1750"],["1751"],"'ReactApexChart' is defined but never used.","'Today' is assigned a value but never used.","'status' is assigned a value but never used.",["1695"],["1696"],"'countLateAndOnTimeTasks' is assigned a value but never used.",["1752"],"'faPlus' is defined but never used.","'Table' is defined but never used.",["1753"],["1754"],"'setFromDateData' is assigned a value but never used.","'setToDateData' is assigned a value but never used.","'setReasonforleaveData' is assigned a value but never used.",["1755"],["1756"],["1757"],["1758"],["1759"],["1695"],["1696"],["1760"],["1761"],["1762"],"'buttonStyle' is assigned a value but never used.","'employee' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1763","fix":"1764"},{"desc":"1765","fix":"1766"},{"desc":"1767","fix":"1768"},{"desc":"1769","fix":"1770"},[18010,18010]," rel=\"noreferrer\"",[18453,18453],{"desc":"1771","fix":"1772"},{"desc":"1773","fix":"1774"},{"desc":"1775","fix":"1776"},{"desc":"1777","fix":"1778"},{"desc":"1775","fix":"1779"},{"desc":"1777","fix":"1780"},{"desc":"1765","fix":"1781"},{"desc":"1782","fix":"1783"},{"desc":"1765","fix":"1784"},{"desc":"1782","fix":"1785"},{"desc":"1765","fix":"1786"},{"desc":"1782","fix":"1787"},{"desc":"1771","fix":"1788"},{"desc":"1765","fix":"1789"},{"desc":"1782","fix":"1790"},{"desc":"1769","fix":"1791"},{"desc":"1792","fix":"1793"},{"desc":"1794","fix":"1795"},{"desc":"1796","fix":"1797"},{"desc":"1794","fix":"1798"},{"desc":"1799","fix":"1800"},{"desc":"1801","fix":"1802"},{"desc":"1773","fix":"1803"},{"desc":"1804","fix":"1805"},{"desc":"1765","fix":"1806"},{"desc":"1765","fix":"1807"},{"desc":"1808","fix":"1809"},{"desc":"1810","fix":"1811"},{"desc":"1765","fix":"1812"},{"desc":"1782","fix":"1813"},{"desc":"1814","fix":"1815"},{"desc":"1816","fix":"1817"},[31186,31186],{"desc":"1765","fix":"1818"},{"desc":"1782","fix":"1819"},{"desc":"1804","fix":"1820"},{"desc":"1821","fix":"1822"},{"desc":"1804","fix":"1823"},{"desc":"1821","fix":"1824"},{"desc":"1792","fix":"1825"},{"desc":"1826","fix":"1827"},{"desc":"1775","fix":"1828"},{"desc":"1769","fix":"1829"},{"desc":"1769","fix":"1830"},{"desc":"1771","fix":"1831"},{"desc":"1773","fix":"1832"},{"desc":"1765","fix":"1833"},{"desc":"1782","fix":"1834"},{"desc":"1769","fix":"1835"},{"desc":"1775","fix":"1836"},{"desc":"1775","fix":"1837"},{"desc":"1765","fix":"1838"},{"desc":"1782","fix":"1839"},{"desc":"1792","fix":"1840"},{"desc":"1775","fix":"1841"},{"desc":"1769","fix":"1842"},{"desc":"1775","fix":"1843"},{"desc":"1777","fix":"1844"},{"desc":"1771","fix":"1845"},"Update the dependencies array to be: [countDown, stage]",{"range":"1846","text":"1847"},"Update the dependencies array to be: [loadEmployeeData]",{"range":"1848","text":"1849"},"Update the dependencies array to be: [email, loadEmployeeData, location, socket]",{"range":"1850","text":"1851"},"Update the dependencies array to be: [calculateUpcomingBirthdays, rowData]",{"range":"1852","text":"1853"},"Update the dependencies array to be: [setEmployees]",{"range":"1854","text":"1855"},"Update the dependencies array to be: [props.data]",{"range":"1856","text":"1857"},"Update the dependencies array to be: [loadLeaveApplicationHRData]",{"range":"1858","text":"1859"},"Update the dependencies array to be: [filterData, searchQuery]",{"range":"1860","text":"1861"},{"range":"1862","text":"1859"},{"range":"1863","text":"1861"},{"range":"1864","text":"1849"},"Update the dependencies array to be: [loadEmployeeData, socket]",{"range":"1865","text":"1866"},{"range":"1867","text":"1849"},{"range":"1868","text":"1866"},{"range":"1869","text":"1849"},{"range":"1870","text":"1866"},{"range":"1871","text":"1855"},{"range":"1872","text":"1849"},{"range":"1873","text":"1866"},{"range":"1874","text":"1853"},"Update the dependencies array to be: [departmentData, updateChartOptions]",{"range":"1875","text":"1876"},"Update the dependencies array to be: [fetchEmployees]",{"range":"1877","text":"1878"},"Update the dependencies array to be: [handleFetchAttendance]",{"range":"1879","text":"1880"},{"range":"1881","text":"1878"},"Update the dependencies array to be: [selectedYear, selectedMonth, handleFetchAttendance]",{"range":"1882","text":"1883"},"Update the dependencies array to be: [props.data, setEmployees]",{"range":"1884","text":"1885"},{"range":"1886","text":"1857"},"Update the dependencies array to be: [id]",{"range":"1887","text":"1888"},{"range":"1889","text":"1849"},{"range":"1890","text":"1849"},"Update the dependencies array to be: [loadLeaveApplicationEmpData, props.leaveRequestDone]",{"range":"1891","text":"1892"},"Update the dependencies array to be: [loadFamilyInfoData]",{"range":"1893","text":"1894"},{"range":"1895","text":"1849"},{"range":"1896","text":"1866"},"Update the dependencies array to be: [loadWorkExperienceData]",{"range":"1897","text":"1898"},"Update the dependencies array to be: [loadPersonalInfoData, props.data]",{"range":"1899","text":"1900"},{"range":"1901","text":"1849"},{"range":"1902","text":"1866"},{"range":"1903","text":"1888"},"Update the dependencies array to be: [fetchData]",{"range":"1904","text":"1905"},{"range":"1906","text":"1888"},{"range":"1907","text":"1905"},{"range":"1908","text":"1876"},"Update the dependencies array to be: [filterHolidays, searchTerm]",{"range":"1909","text":"1910"},{"range":"1911","text":"1859"},{"range":"1912","text":"1853"},{"range":"1913","text":"1853"},{"range":"1914","text":"1855"},{"range":"1915","text":"1857"},{"range":"1916","text":"1849"},{"range":"1917","text":"1866"},{"range":"1918","text":"1853"},{"range":"1919","text":"1859"},{"range":"1920","text":"1859"},{"range":"1921","text":"1849"},{"range":"1922","text":"1866"},{"range":"1923","text":"1876"},{"range":"1924","text":"1859"},{"range":"1925","text":"1853"},{"range":"1926","text":"1859"},{"range":"1927","text":"1861"},{"range":"1928","text":"1855"},[1342,1353],"[countDown, stage]",[1906,1908],"[loadEmployeeData]",[6054,6062],"[email, loadEmployeeData, location, socket]",[7567,7576],"[calculateUpcomingBirthdays, rowData]",[1424,1426],"[setEmployees]",[2008,2010],"[props.data]",[2272,2274],"[loadLeaveApplicationHRData]",[2321,2334],"[filterData, searchQuery]",[2272,2274],[2321,2334],[1098,1100],[1249,1257],"[loadEmployeeData, socket]",[1098,1100],[1249,1257],[1098,1100],[1249,1257],[1188,1190],[1101,1103],[1252,1260],[3299,3308],[2373,2389],"[departmentData, updateChartOptions]",[1129,1131],"[fetchEmployees]",[2863,2865],"[handleFetchAttendance]",[1075,1077],[2167,2196],"[selectedYear, selectedMonth, handleFetchAttendance]",[1093,1095],"[props.data, setEmployees]",[1655,1657],[1333,1335],"[id]",[882,884],[881,883],[2828,2852],"[loadLeaveApplicationEmpData, props.leaveRequestDone]",[2159,2161],"[loadFamilyInfoData]",[922,924],[1237,1245],[2360,2362],"[loadWorkExperienceData]",[3615,3627],"[loadPersonalInfoData, props.data]",[978,980],[1293,1301],[1003,1005],[2283,2285],"[fetchData]",[1112,1114],[2266,2268],[3459,3475],[1331,1343],"[filterHolidays, searchTerm]",[4389,4391],[7187,7196],[3253,3262],[8267,8269],[8861,8863],[931,933],[1246,1254],[7194,7203],[4568,4570],[4227,4229],[867,869],[1182,1190],[2107,2123],[4296,4298],[7034,7043],[2224,2226],[2273,2286],[1119,1121]]